{
	"id": "81e0c64920144ac342341b8c2329c846",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SafeLoan.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.25;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract SafeLoan {\n    struct LoanInfo {\n        address borrower;\n        uint256 borrowedAmount;\n        uint256 collateralAmount;\n        uint256 requestedAt;\n        bool paid;\n    }\n\n    ERC20 public collateralToken;\n    uint256 public interestRate;\n    uint256 public minCollateralizationRatio;\n    mapping (address => LoanInfo) public loans;\n\n    event LoanGranted(\n        address indexed  borrower, \n        uint256 borrowedAmount, \n        uint256 collateralAmount\n        );\n    event LoanRepaid(\n        address indexed  borrower,\n        uint256 borrowedAmount,\n        uint256 repaidAmount\n        );\n\n    \n    constructor(\n        ERC20 _collateralToken,\n        uint256 _interestRate,\n        uint256 _minCollateralizationRatio\n    ) { \n        collateralToken = _collateralToken;\n        interestRate = _interestRate;\n        minCollateralizationRatio = _minCollateralizationRatio;\n    }\n\n    function requestLoan(uint256 _borrowedAmount, uint256 _collateralAmount) public { \n        LoanInfo storage initial = loans[msg.sender];\n        require(initial.collateralAmount == 0 || (initial.collateralAmount > 0 && initial.paid == true), \"You have an open loan !\");\n        uint256 extraAmountToLiquidate = (_borrowedAmount * minCollateralizationRatio) / 100;\n        require(_collateralAmount >= extraAmountToLiquidate, \"Insufficient Collateral\");\n        require(_sentEtherTo(address(this), _collateralAmount), \"Transfer failed\");\n        LoanInfo memory newLoan = LoanInfo({\n            borrower: msg.sender,\n            borrowedAmount: _borrowedAmount,\n            collateralAmount: _collateralAmount,\n            requestedAt: block.timestamp,\n            paid: false\n        });\n        _sentEtherTo(msg.sender, _borrowedAmount);\n        loans[msg.sender] = newLoan;\n        emit LoanGranted(msg.sender, _borrowedAmount, _collateralAmount);\n    }\n\n    function repayLoan() public payable {\n        LoanInfo storage loanInfo = loans[msg.sender];\n        require(loanInfo.borrowedAmount > 0, \"No active loan\");\n        uint256 collateralizationRatio = _calculateCollateralizationRatio(loanInfo);\n        require(collateralizationRatio < minCollateralizationRatio, \"Collateralization ratio above minimum\");\n        uint256 outstandingAmount = _calculateOutstandingAmount(loanInfo);\n        require(msg.value >= outstandingAmount, \"Insufficient funds\");\n        collateralToken.transfer(msg.sender, loanInfo.collateralAmount);\n        loanInfo.paid = true;\n        emit LoanRepaid(msg.sender,  loanInfo.borrowedAmount, msg.value);\n    }\n\n    function _sentEtherTo(address _receiver, uint256 _amount) private returns (bool)  {\n      (bool sent, ) =  payable(_receiver).call{value: _amount}(\"\");\n      return  sent;\n    }\n\n    function _calculateCollateralizationRatio(\n            LoanInfo storage loanInfo\n        ) private view returns (uint256) {\n            uint256 outstandingAmount = _calculateOutstandingAmount(loanInfo);\n            uint256 diff = outstandingAmount - loanInfo.borrowedAmount;\n\n            return (diff * 100) /\n                loanInfo.borrowedAmount;\n        }\n    \n    function _calculateOutstandingAmount(\n            LoanInfo storage loadInfo\n            ) private view returns (uint256) {\n                uint256 timeElapsed = block.timestamp - loadInfo.requestedAt;\n                uint256 interestAccrued = (loadInfo.borrowedAmount * interestRate * timeElapsed) / (100 * 365 days);\n                return loadInfo.borrowedAmount + interestAccrued;\n            }\n\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeLoan.sol": {
				"SafeLoan": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ERC20",
									"name": "_collateralToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_interestRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minCollateralizationRatio",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "collateralAmount",
									"type": "uint256"
								}
							],
							"name": "LoanGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "repaidAmount",
									"type": "uint256"
								}
							],
							"name": "LoanRepaid",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "collateralToken",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "interestRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "loans",
							"outputs": [
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "borrowedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "collateralAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedAt",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "paid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minCollateralizationRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "repayLoan",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_borrowedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_collateralAmount",
									"type": "uint256"
								}
							],
							"name": "requestLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeLoan.sol\":116:3628  contract SafeLoan {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SafeLoan.sol\":742:1021  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SafeLoan.sol\":896:912  _collateralToken */\n  dup3\n    /* \"contracts/SafeLoan.sol\":878:893  collateralToken */\n  0x00\n  dup1\n    /* \"contracts/SafeLoan.sol\":878:912  collateralToken = _collateralToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SafeLoan.sol\":937:950  _interestRate */\n  dup2\n    /* \"contracts/SafeLoan.sol\":922:934  interestRate */\n  0x01\n    /* \"contracts/SafeLoan.sol\":922:950  interestRate = _interestRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SafeLoan.sol\":988:1014  _minCollateralizationRatio */\n  dup1\n    /* \"contracts/SafeLoan.sol\":960:985  minCollateralizationRatio */\n  0x02\n    /* \"contracts/SafeLoan.sol\":960:1014  minCollateralizationRatio = _minCollateralizationRatio */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SafeLoan.sol\":742:1021  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/SafeLoan.sol\":116:3628  contract SafeLoan {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_24\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:677   */\ntag_12:\n    /* \"#utility.yul\":618:625   */\n  0x00\n    /* \"#utility.yul\":647:671   */\n  tag_26\n    /* \"#utility.yul\":665:670   */\n  dup3\n    /* \"#utility.yul\":647:671   */\n  tag_11\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":636:671   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:677   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":683:831   */\ntag_13:\n    /* \"#utility.yul\":769:806   */\n  tag_28\n    /* \"#utility.yul\":800:805   */\n  dup2\n    /* \"#utility.yul\":769:806   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":762:767   */\n  dup2\n    /* \"#utility.yul\":759:807   */\n  eq\n    /* \"#utility.yul\":749:825   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":818:819   */\n  dup1\n    /* \"#utility.yul\":811:823   */\n  revert\n    /* \"#utility.yul\":749:825   */\ntag_29:\n    /* \"#utility.yul\":683:831   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":837:1006   */\ntag_14:\n    /* \"#utility.yul\":907:912   */\n  0x00\n    /* \"#utility.yul\":938:944   */\n  dup2\n    /* \"#utility.yul\":932:945   */\n  mload\n    /* \"#utility.yul\":923:945   */\n  swap1\n  pop\n    /* \"#utility.yul\":954:1000   */\n  tag_31\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":954:1000   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":837:1006   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1012:1089   */\ntag_15:\n    /* \"#utility.yul\":1049:1056   */\n  0x00\n    /* \"#utility.yul\":1078:1083   */\n  dup2\n    /* \"#utility.yul\":1067:1083   */\n  swap1\n  pop\n    /* \"#utility.yul\":1012:1089   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1095:1217   */\ntag_16:\n    /* \"#utility.yul\":1168:1192   */\n  tag_34\n    /* \"#utility.yul\":1186:1191   */\n  dup2\n    /* \"#utility.yul\":1168:1192   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1161:1166   */\n  dup2\n    /* \"#utility.yul\":1158:1193   */\n  eq\n    /* \"#utility.yul\":1148:1211   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1207:1208   */\n  0x00\n    /* \"#utility.yul\":1204:1205   */\n  dup1\n    /* \"#utility.yul\":1197:1209   */\n  revert\n    /* \"#utility.yul\":1148:1211   */\ntag_35:\n    /* \"#utility.yul\":1095:1217   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1223:1366   */\ntag_17:\n    /* \"#utility.yul\":1280:1285   */\n  0x00\n    /* \"#utility.yul\":1311:1317   */\n  dup2\n    /* \"#utility.yul\":1305:1318   */\n  mload\n    /* \"#utility.yul\":1296:1318   */\n  swap1\n  pop\n    /* \"#utility.yul\":1327:1360   */\n  tag_37\n    /* \"#utility.yul\":1354:1359   */\n  dup2\n    /* \"#utility.yul\":1327:1360   */\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1223:1366   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1372:2061   */\ntag_3:\n    /* \"#utility.yul\":1473:1479   */\n  0x00\n    /* \"#utility.yul\":1481:1487   */\n  dup1\n    /* \"#utility.yul\":1489:1495   */\n  0x00\n    /* \"#utility.yul\":1538:1540   */\n  0x60\n    /* \"#utility.yul\":1526:1535   */\n  dup5\n    /* \"#utility.yul\":1517:1524   */\n  dup7\n    /* \"#utility.yul\":1513:1536   */\n  sub\n    /* \"#utility.yul\":1509:1541   */\n  slt\n    /* \"#utility.yul\":1506:1625   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1544:1623   */\n  tag_40\n  tag_8\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1506:1625   */\ntag_39:\n    /* \"#utility.yul\":1664:1665   */\n  0x00\n    /* \"#utility.yul\":1689:1766   */\n  tag_41\n    /* \"#utility.yul\":1758:1765   */\n  dup7\n    /* \"#utility.yul\":1749:1755   */\n  dup3\n    /* \"#utility.yul\":1738:1747   */\n  dup8\n    /* \"#utility.yul\":1734:1756   */\n  add\n    /* \"#utility.yul\":1689:1766   */\n  tag_14\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1679:1766   */\n  swap4\n  pop\n    /* \"#utility.yul\":1635:1776   */\n  pop\n    /* \"#utility.yul\":1815:1817   */\n  0x20\n    /* \"#utility.yul\":1841:1905   */\n  tag_42\n    /* \"#utility.yul\":1897:1904   */\n  dup7\n    /* \"#utility.yul\":1888:1894   */\n  dup3\n    /* \"#utility.yul\":1877:1886   */\n  dup8\n    /* \"#utility.yul\":1873:1895   */\n  add\n    /* \"#utility.yul\":1841:1905   */\n  tag_17\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1831:1905   */\n  swap3\n  pop\n    /* \"#utility.yul\":1786:1915   */\n  pop\n    /* \"#utility.yul\":1954:1956   */\n  0x40\n    /* \"#utility.yul\":1980:2044   */\n  tag_43\n    /* \"#utility.yul\":2036:2043   */\n  dup7\n    /* \"#utility.yul\":2027:2033   */\n  dup3\n    /* \"#utility.yul\":2016:2025   */\n  dup8\n    /* \"#utility.yul\":2012:2034   */\n  add\n    /* \"#utility.yul\":1980:2044   */\n  tag_17\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1970:2044   */\n  swap2\n  pop\n    /* \"#utility.yul\":1925:2054   */\n  pop\n    /* \"#utility.yul\":1372:2061   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"contracts/SafeLoan.sol\":116:3628  contract SafeLoan {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeLoan.sol\":116:3628  contract SafeLoan {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x73b4086b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x7c3a00fd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xaa452fa6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb2016bd4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xba1be554\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf966ade7\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SafeLoan.sol\":422:464  mapping (address => LoanInfo) public loans */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SafeLoan.sol\":343:370  uint256 public interestRate */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SafeLoan.sol\":1027:1982  function requestLoan(uint256 _borrowedAmount, uint256 _collateralAmount) public { ... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/SafeLoan.sol\":309:337  ERC20 public collateralToken */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SafeLoan.sol\":376:416  uint256 public minCollateralizationRatio */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SafeLoan.sol\":1988:2668  function repayLoan() public payable {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/SafeLoan.sol\":422:464  mapping (address => LoanInfo) public loans */\n    tag_12:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/SafeLoan.sol\":343:370  uint256 public interestRate */\n    tag_17:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/SafeLoan.sol\":1027:1982  function requestLoan(uint256 _borrowedAmount, uint256 _collateralAmount) public { ... */\n    tag_24:\n        /* \"contracts/SafeLoan.sol\":1118:1142  LoanInfo storage initial */\n      0x00\n        /* \"contracts/SafeLoan.sol\":1145:1150  loans */\n      0x03\n        /* \"contracts/SafeLoan.sol\":1145:1162  loans[msg.sender] */\n      0x00\n        /* \"contracts/SafeLoan.sol\":1151:1161  msg.sender */\n      caller\n        /* \"contracts/SafeLoan.sol\":1145:1162  loans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SafeLoan.sol\":1118:1162  LoanInfo storage initial = loans[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/SafeLoan.sol\":1208:1209  0 */\n      0x00\n        /* \"contracts/SafeLoan.sol\":1180:1187  initial */\n      dup2\n        /* \"contracts/SafeLoan.sol\":1180:1204  initial.collateralAmount */\n      0x02\n      add\n      sload\n        /* \"contracts/SafeLoan.sol\":1180:1209  initial.collateralAmount == 0 */\n      eq\n        /* \"contracts/SafeLoan.sol\":1180:1267  initial.collateralAmount == 0 || (initial.collateralAmount > 0 && initial.paid == true) */\n      dup1\n      tag_37\n      jumpi\n      pop\n        /* \"contracts/SafeLoan.sol\":1241:1242  0 */\n      0x00\n        /* \"contracts/SafeLoan.sol\":1214:1221  initial */\n      dup2\n        /* \"contracts/SafeLoan.sol\":1214:1238  initial.collateralAmount */\n      0x02\n      add\n      sload\n        /* \"contracts/SafeLoan.sol\":1214:1242  initial.collateralAmount > 0 */\n      gt\n        /* \"contracts/SafeLoan.sol\":1214:1266  initial.collateralAmount > 0 && initial.paid == true */\n      dup1\n      iszero\n      tag_38\n      jumpi\n      pop\n        /* \"contracts/SafeLoan.sol\":1262:1266  true */\n      0x01\n        /* \"contracts/SafeLoan.sol\":1246:1266  initial.paid == true */\n      iszero\n      iszero\n        /* \"contracts/SafeLoan.sol\":1246:1253  initial */\n      dup2\n        /* \"contracts/SafeLoan.sol\":1246:1258  initial.paid */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SafeLoan.sol\":1246:1266  initial.paid == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/SafeLoan.sol\":1214:1266  initial.collateralAmount > 0 && initial.paid == true */\n    tag_38:\n        /* \"contracts/SafeLoan.sol\":1180:1267  initial.collateralAmount == 0 || (initial.collateralAmount > 0 && initial.paid == true) */\n    tag_37:\n        /* \"contracts/SafeLoan.sol\":1172:1295  require(initial.collateralAmount == 0 || (initial.collateralAmount > 0 && initial.paid == true), \"You have an open loan !\") */\n      tag_39\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_39:\n        /* \"contracts/SafeLoan.sol\":1305:1335  uint256 extraAmountToLiquidate */\n      0x00\n        /* \"contracts/SafeLoan.sol\":1386:1389  100 */\n      0x64\n        /* \"contracts/SafeLoan.sol\":1357:1382  minCollateralizationRatio */\n      sload(0x02)\n        /* \"contracts/SafeLoan.sol\":1339:1354  _borrowedAmount */\n      dup6\n        /* \"contracts/SafeLoan.sol\":1339:1382  _borrowedAmount * minCollateralizationRatio */\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"contracts/SafeLoan.sol\":1338:1389  (_borrowedAmount * minCollateralizationRatio) / 100 */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"contracts/SafeLoan.sol\":1305:1389  uint256 extraAmountToLiquidate = (_borrowedAmount * minCollateralizationRatio) / 100 */\n      swap1\n      pop\n        /* \"contracts/SafeLoan.sol\":1428:1450  extraAmountToLiquidate */\n      dup1\n        /* \"contracts/SafeLoan.sol\":1407:1424  _collateralAmount */\n      dup4\n        /* \"contracts/SafeLoan.sol\":1407:1450  _collateralAmount >= extraAmountToLiquidate */\n      lt\n      iszero\n        /* \"contracts/SafeLoan.sol\":1399:1478  require(_collateralAmount >= extraAmountToLiquidate, \"Insufficient Collateral\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/SafeLoan.sol\":1496:1542  _sentEtherTo(address(this), _collateralAmount) */\n      tag_49\n        /* \"contracts/SafeLoan.sol\":1517:1521  this */\n      address\n        /* \"contracts/SafeLoan.sol\":1524:1541  _collateralAmount */\n      dup5\n        /* \"contracts/SafeLoan.sol\":1496:1508  _sentEtherTo */\n      tag_50\n        /* \"contracts/SafeLoan.sol\":1496:1542  _sentEtherTo(address(this), _collateralAmount) */\n      jump\t// in\n    tag_49:\n        /* \"contracts/SafeLoan.sol\":1488:1562  require(_sentEtherTo(address(this), _collateralAmount), \"Transfer failed\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"contracts/SafeLoan.sol\":1572:1595  LoanInfo memory newLoan */\n      0x00\n        /* \"contracts/SafeLoan.sol\":1598:1813  LoanInfo({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SafeLoan.sol\":1631:1641  msg.sender */\n      caller\n        /* \"contracts/SafeLoan.sol\":1598:1813  LoanInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SafeLoan.sol\":1671:1686  _borrowedAmount */\n      dup7\n        /* \"contracts/SafeLoan.sol\":1598:1813  LoanInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SafeLoan.sol\":1718:1735  _collateralAmount */\n      dup6\n        /* \"contracts/SafeLoan.sol\":1598:1813  LoanInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SafeLoan.sol\":1762:1777  block.timestamp */\n      timestamp\n        /* \"contracts/SafeLoan.sol\":1598:1813  LoanInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SafeLoan.sol\":1797:1802  false */\n      0x00\n        /* \"contracts/SafeLoan.sol\":1598:1813  LoanInfo({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeLoan.sol\":1572:1813  LoanInfo memory newLoan = LoanInfo({... */\n      swap1\n      pop\n        /* \"contracts/SafeLoan.sol\":1823:1864  _sentEtherTo(msg.sender, _borrowedAmount) */\n      tag_54\n        /* \"contracts/SafeLoan.sol\":1836:1846  msg.sender */\n      caller\n        /* \"contracts/SafeLoan.sol\":1848:1863  _borrowedAmount */\n      dup7\n        /* \"contracts/SafeLoan.sol\":1823:1835  _sentEtherTo */\n      tag_50\n        /* \"contracts/SafeLoan.sol\":1823:1864  _sentEtherTo(msg.sender, _borrowedAmount) */\n      jump\t// in\n    tag_54:\n      pop\n        /* \"contracts/SafeLoan.sol\":1894:1901  newLoan */\n      dup1\n        /* \"contracts/SafeLoan.sol\":1874:1879  loans */\n      0x03\n        /* \"contracts/SafeLoan.sol\":1874:1891  loans[msg.sender] */\n      0x00\n        /* \"contracts/SafeLoan.sol\":1880:1890  msg.sender */\n      caller\n        /* \"contracts/SafeLoan.sol\":1874:1891  loans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SafeLoan.sol\":1874:1901  loans[msg.sender] = newLoan */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/SafeLoan.sol\":1928:1938  msg.sender */\n      caller\n        /* \"contracts/SafeLoan.sol\":1916:1975  LoanGranted(msg.sender, _borrowedAmount, _collateralAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1f4fa8bbaa124ef8d04466f13d5a2572fb712424cee0bc9cf430aec52439acd7\n        /* \"contracts/SafeLoan.sol\":1940:1955  _borrowedAmount */\n      dup7\n        /* \"contracts/SafeLoan.sol\":1957:1974  _collateralAmount */\n      dup7\n        /* \"contracts/SafeLoan.sol\":1916:1975  LoanGranted(msg.sender, _borrowedAmount, _collateralAmount) */\n      mload(0x40)\n      tag_55\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SafeLoan.sol\":1107:1982  { ... */\n      pop\n      pop\n      pop\n        /* \"contracts/SafeLoan.sol\":1027:1982  function requestLoan(uint256 _borrowedAmount, uint256 _collateralAmount) public { ... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeLoan.sol\":309:337  ERC20 public collateralToken */\n    tag_27:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SafeLoan.sol\":376:416  uint256 public minCollateralizationRatio */\n    tag_32:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/SafeLoan.sol\":1988:2668  function repayLoan() public payable {... */\n    tag_35:\n        /* \"contracts/SafeLoan.sol\":2034:2059  LoanInfo storage loanInfo */\n      0x00\n        /* \"contracts/SafeLoan.sol\":2062:2067  loans */\n      0x03\n        /* \"contracts/SafeLoan.sol\":2062:2079  loans[msg.sender] */\n      0x00\n        /* \"contracts/SafeLoan.sol\":2068:2078  msg.sender */\n      caller\n        /* \"contracts/SafeLoan.sol\":2062:2079  loans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SafeLoan.sol\":2034:2079  LoanInfo storage loanInfo = loans[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/SafeLoan.sol\":2123:2124  0 */\n      0x00\n        /* \"contracts/SafeLoan.sol\":2097:2105  loanInfo */\n      dup2\n        /* \"contracts/SafeLoan.sol\":2097:2120  loanInfo.borrowedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/SafeLoan.sol\":2097:2124  loanInfo.borrowedAmount > 0 */\n      gt\n        /* \"contracts/SafeLoan.sol\":2089:2143  require(loanInfo.borrowedAmount > 0, \"No active loan\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"contracts/SafeLoan.sol\":2153:2183  uint256 collateralizationRatio */\n      0x00\n        /* \"contracts/SafeLoan.sol\":2186:2228  _calculateCollateralizationRatio(loanInfo) */\n      tag_61\n        /* \"contracts/SafeLoan.sol\":2219:2227  loanInfo */\n      dup3\n        /* \"contracts/SafeLoan.sol\":2186:2218  _calculateCollateralizationRatio */\n      tag_62\n        /* \"contracts/SafeLoan.sol\":2186:2228  _calculateCollateralizationRatio(loanInfo) */\n      jump\t// in\n    tag_61:\n        /* \"contracts/SafeLoan.sol\":2153:2228  uint256 collateralizationRatio = _calculateCollateralizationRatio(loanInfo) */\n      swap1\n      pop\n        /* \"contracts/SafeLoan.sol\":2271:2296  minCollateralizationRatio */\n      sload(0x02)\n        /* \"contracts/SafeLoan.sol\":2246:2268  collateralizationRatio */\n      dup2\n        /* \"contracts/SafeLoan.sol\":2246:2296  collateralizationRatio < minCollateralizationRatio */\n      lt\n        /* \"contracts/SafeLoan.sol\":2238:2338  require(collateralizationRatio < minCollateralizationRatio, \"Collateralization ratio above minimum\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/SafeLoan.sol\":2348:2373  uint256 outstandingAmount */\n      0x00\n        /* \"contracts/SafeLoan.sol\":2376:2413  _calculateOutstandingAmount(loanInfo) */\n      tag_66\n        /* \"contracts/SafeLoan.sol\":2404:2412  loanInfo */\n      dup4\n        /* \"contracts/SafeLoan.sol\":2376:2403  _calculateOutstandingAmount */\n      tag_67\n        /* \"contracts/SafeLoan.sol\":2376:2413  _calculateOutstandingAmount(loanInfo) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/SafeLoan.sol\":2348:2413  uint256 outstandingAmount = _calculateOutstandingAmount(loanInfo) */\n      swap1\n      pop\n        /* \"contracts/SafeLoan.sol\":2444:2461  outstandingAmount */\n      dup1\n        /* \"contracts/SafeLoan.sol\":2431:2440  msg.value */\n      callvalue\n        /* \"contracts/SafeLoan.sol\":2431:2461  msg.value >= outstandingAmount */\n      lt\n      iszero\n        /* \"contracts/SafeLoan.sol\":2423:2484  require(msg.value >= outstandingAmount, \"Insufficient funds\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/SafeLoan.sol\":2494:2509  collateralToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SafeLoan.sol\":2494:2518  collateralToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/SafeLoan.sol\":2519:2529  msg.sender */\n      caller\n        /* \"contracts/SafeLoan.sol\":2531:2539  loanInfo */\n      dup6\n        /* \"contracts/SafeLoan.sol\":2531:2556  loanInfo.collateralAmount */\n      0x02\n      add\n      sload\n        /* \"contracts/SafeLoan.sol\":2494:2557  collateralToken.transfer(msg.sender, loanInfo.collateralAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      pop\n        /* \"contracts/SafeLoan.sol\":2583:2587  true */\n      0x01\n        /* \"contracts/SafeLoan.sol\":2567:2575  loanInfo */\n      dup4\n        /* \"contracts/SafeLoan.sol\":2567:2580  loanInfo.paid */\n      0x04\n      add\n      0x00\n        /* \"contracts/SafeLoan.sol\":2567:2587  loanInfo.paid = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SafeLoan.sol\":2613:2623  msg.sender */\n      caller\n        /* \"contracts/SafeLoan.sol\":2602:2661  LoanRepaid(msg.sender,  loanInfo.borrowedAmount, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc7ce0a35f17b490de2a317e7fecb2cae86b1abffb03800b2f492823521382698\n        /* \"contracts/SafeLoan.sol\":2626:2634  loanInfo */\n      dup5\n        /* \"contracts/SafeLoan.sol\":2626:2649  loanInfo.borrowedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/SafeLoan.sol\":2651:2660  msg.value */\n      callvalue\n        /* \"contracts/SafeLoan.sol\":2602:2661  LoanRepaid(msg.sender,  loanInfo.borrowedAmount, msg.value) */\n      mload(0x40)\n      tag_77\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SafeLoan.sol\":2024:2668  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/SafeLoan.sol\":1988:2668  function repayLoan() public payable {... */\n      jump\t// out\n        /* \"contracts/SafeLoan.sol\":2674:2851  function _sentEtherTo(address _receiver, uint256 _amount) private returns (bool)  {... */\n    tag_50:\n        /* \"contracts/SafeLoan.sol\":2749:2753  bool */\n      0x00\n        /* \"contracts/SafeLoan.sol\":2765:2774  bool sent */\n      dup1\n        /* \"contracts/SafeLoan.sol\":2789:2798  _receiver */\n      dup4\n        /* \"contracts/SafeLoan.sol\":2781:2804  payable(_receiver).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SafeLoan.sol\":2812:2819  _amount */\n      dup4\n        /* \"contracts/SafeLoan.sol\":2781:2824  payable(_receiver).call{value: _amount}(\"\") */\n      mload(0x40)\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_83\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_82)\n    tag_83:\n      0x60\n      swap2\n      pop\n    tag_82:\n      pop\n        /* \"contracts/SafeLoan.sol\":2764:2824  (bool sent, ) =  payable(_receiver).call{value: _amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/SafeLoan.sol\":2840:2844  sent */\n      dup1\n        /* \"contracts/SafeLoan.sol\":2832:2844  return  sent */\n      swap2\n      pop\n      pop\n        /* \"contracts/SafeLoan.sol\":2674:2851  function _sentEtherTo(address _receiver, uint256 _amount) private returns (bool)  {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeLoan.sol\":2857:3217  function _calculateCollateralizationRatio(... */\n    tag_62:\n        /* \"contracts/SafeLoan.sol\":2970:2977  uint256 */\n      0x00\n        /* \"contracts/SafeLoan.sol\":2993:3018  uint256 outstandingAmount */\n      dup1\n        /* \"contracts/SafeLoan.sol\":3021:3058  _calculateOutstandingAmount(loanInfo) */\n      tag_85\n        /* \"contracts/SafeLoan.sol\":3049:3057  loanInfo */\n      dup4\n        /* \"contracts/SafeLoan.sol\":3021:3048  _calculateOutstandingAmount */\n      tag_67\n        /* \"contracts/SafeLoan.sol\":3021:3058  _calculateOutstandingAmount(loanInfo) */\n      jump\t// in\n    tag_85:\n        /* \"contracts/SafeLoan.sol\":2993:3058  uint256 outstandingAmount = _calculateOutstandingAmount(loanInfo) */\n      swap1\n      pop\n        /* \"contracts/SafeLoan.sol\":3072:3084  uint256 diff */\n      0x00\n        /* \"contracts/SafeLoan.sol\":3107:3115  loanInfo */\n      dup4\n        /* \"contracts/SafeLoan.sol\":3107:3130  loanInfo.borrowedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/SafeLoan.sol\":3087:3104  outstandingAmount */\n      dup3\n        /* \"contracts/SafeLoan.sol\":3087:3130  outstandingAmount - loanInfo.borrowedAmount */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"contracts/SafeLoan.sol\":3072:3130  uint256 diff = outstandingAmount - loanInfo.borrowedAmount */\n      swap1\n      pop\n        /* \"contracts/SafeLoan.sol\":3183:3191  loanInfo */\n      dup4\n        /* \"contracts/SafeLoan.sol\":3183:3206  loanInfo.borrowedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/SafeLoan.sol\":3160:3163  100 */\n      0x64\n        /* \"contracts/SafeLoan.sol\":3153:3157  diff */\n      dup3\n        /* \"contracts/SafeLoan.sol\":3153:3163  diff * 100 */\n      tag_88\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_88:\n        /* \"contracts/SafeLoan.sol\":3152:3206  (diff * 100) /... */\n      tag_89\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_89:\n        /* \"contracts/SafeLoan.sol\":3145:3206  return (diff * 100) /... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/SafeLoan.sol\":2857:3217  function _calculateCollateralizationRatio(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SafeLoan.sol\":3227:3624  function _calculateOutstandingAmount(... */\n    tag_67:\n        /* \"contracts/SafeLoan.sol\":3339:3346  uint256 */\n      0x00\n        /* \"contracts/SafeLoan.sol\":3366:3385  uint256 timeElapsed */\n      dup1\n        /* \"contracts/SafeLoan.sol\":3406:3414  loadInfo */\n      dup3\n        /* \"contracts/SafeLoan.sol\":3406:3426  loadInfo.requestedAt */\n      0x03\n      add\n      sload\n        /* \"contracts/SafeLoan.sol\":3388:3403  block.timestamp */\n      timestamp\n        /* \"contracts/SafeLoan.sol\":3388:3426  block.timestamp - loadInfo.requestedAt */\n      tag_91\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_91:\n        /* \"contracts/SafeLoan.sol\":3366:3426  uint256 timeElapsed = block.timestamp - loadInfo.requestedAt */\n      swap1\n      pop\n        /* \"contracts/SafeLoan.sol\":3444:3467  uint256 interestAccrued */\n      0x00\n        /* \"contracts/SafeLoan.sol\":3528:3542  100 * 365 days */\n      0xbbf81e00\n        /* \"contracts/SafeLoan.sol\":3512:3523  timeElapsed */\n      dup3\n        /* \"contracts/SafeLoan.sol\":3497:3509  interestRate */\n      sload(0x01)\n        /* \"contracts/SafeLoan.sol\":3471:3479  loadInfo */\n      dup7\n        /* \"contracts/SafeLoan.sol\":3471:3494  loadInfo.borrowedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/SafeLoan.sol\":3471:3509  loadInfo.borrowedAmount * interestRate */\n      tag_92\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_92:\n        /* \"contracts/SafeLoan.sol\":3471:3523  loadInfo.borrowedAmount * interestRate * timeElapsed */\n      tag_93\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_93:\n        /* \"contracts/SafeLoan.sol\":3470:3543  (loadInfo.borrowedAmount * interestRate * timeElapsed) / (100 * 365 days) */\n      tag_94\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_94:\n        /* \"contracts/SafeLoan.sol\":3444:3543  uint256 interestAccrued = (loadInfo.borrowedAmount * interestRate * timeElapsed) / (100 * 365 days) */\n      swap1\n      pop\n        /* \"contracts/SafeLoan.sol\":3594:3609  interestAccrued */\n      dup1\n        /* \"contracts/SafeLoan.sol\":3568:3576  loadInfo */\n      dup5\n        /* \"contracts/SafeLoan.sol\":3568:3591  loadInfo.borrowedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/SafeLoan.sol\":3568:3609  loadInfo.borrowedAmount + interestAccrued */\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"contracts/SafeLoan.sol\":3561:3609  return loadInfo.borrowedAmount + interestAccrued */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/SafeLoan.sol\":3227:3624  function _calculateOutstandingAmount(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_98:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_100:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_101:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_142\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_100\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_102:\n        /* \"#utility.yul\":641:665   */\n      tag_144\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_101\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_145:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_103:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_147\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_102\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_11:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_150\n      tag_98\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":917:1036   */\n    tag_149:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_151\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_103\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_104:\n        /* \"#utility.yul\":1263:1287   */\n      tag_153\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_101\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1377   */\n    tag_105:\n        /* \"#utility.yul\":1337:1344   */\n      0x00\n        /* \"#utility.yul\":1366:1371   */\n      dup2\n        /* \"#utility.yul\":1355:1371   */\n      swap1\n      pop\n        /* \"#utility.yul\":1300:1377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1501   */\n    tag_106:\n        /* \"#utility.yul\":1470:1494   */\n      tag_156\n        /* \"#utility.yul\":1488:1493   */\n      dup2\n        /* \"#utility.yul\":1470:1494   */\n      tag_105\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1465:1468   */\n      dup3\n        /* \"#utility.yul\":1458:1495   */\n      mstore\n        /* \"#utility.yul\":1383:1501   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1507:1597   */\n    tag_107:\n        /* \"#utility.yul\":1541:1548   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1577:1590   */\n      iszero\n        /* \"#utility.yul\":1570:1591   */\n      iszero\n        /* \"#utility.yul\":1559:1591   */\n      swap1\n      pop\n        /* \"#utility.yul\":1507:1597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1712   */\n    tag_108:\n        /* \"#utility.yul\":1684:1705   */\n      tag_159\n        /* \"#utility.yul\":1699:1704   */\n      dup2\n        /* \"#utility.yul\":1684:1705   */\n      tag_107\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1679:1682   */\n      dup3\n        /* \"#utility.yul\":1672:1706   */\n      mstore\n        /* \"#utility.yul\":1603:1712   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1718:2370   */\n    tag_14:\n        /* \"#utility.yul\":1917:1921   */\n      0x00\n        /* \"#utility.yul\":1955:1958   */\n      0xa0\n        /* \"#utility.yul\":1944:1953   */\n      dup3\n        /* \"#utility.yul\":1940:1959   */\n      add\n        /* \"#utility.yul\":1932:1959   */\n      swap1\n      pop\n        /* \"#utility.yul\":1969:2040   */\n      tag_161\n        /* \"#utility.yul\":2037:2038   */\n      0x00\n        /* \"#utility.yul\":2026:2035   */\n      dup4\n        /* \"#utility.yul\":2022:2039   */\n      add\n        /* \"#utility.yul\":2013:2019   */\n      dup9\n        /* \"#utility.yul\":1969:2040   */\n      tag_104\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2050:2122   */\n      tag_162\n        /* \"#utility.yul\":2118:2120   */\n      0x20\n        /* \"#utility.yul\":2107:2116   */\n      dup4\n        /* \"#utility.yul\":2103:2121   */\n      add\n        /* \"#utility.yul\":2094:2100   */\n      dup8\n        /* \"#utility.yul\":2050:2122   */\n      tag_106\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2132:2204   */\n      tag_163\n        /* \"#utility.yul\":2200:2202   */\n      0x40\n        /* \"#utility.yul\":2189:2198   */\n      dup4\n        /* \"#utility.yul\":2185:2203   */\n      add\n        /* \"#utility.yul\":2176:2182   */\n      dup7\n        /* \"#utility.yul\":2132:2204   */\n      tag_106\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2214:2286   */\n      tag_164\n        /* \"#utility.yul\":2282:2284   */\n      0x60\n        /* \"#utility.yul\":2271:2280   */\n      dup4\n        /* \"#utility.yul\":2267:2285   */\n      add\n        /* \"#utility.yul\":2258:2264   */\n      dup6\n        /* \"#utility.yul\":2214:2286   */\n      tag_106\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2296:2363   */\n      tag_165\n        /* \"#utility.yul\":2358:2361   */\n      0x80\n        /* \"#utility.yul\":2347:2356   */\n      dup4\n        /* \"#utility.yul\":2343:2362   */\n      add\n        /* \"#utility.yul\":2334:2340   */\n      dup5\n        /* \"#utility.yul\":2296:2363   */\n      tag_108\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1718:2370   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2376:2598   */\n    tag_19:\n        /* \"#utility.yul\":2469:2473   */\n      0x00\n        /* \"#utility.yul\":2507:2509   */\n      0x20\n        /* \"#utility.yul\":2496:2505   */\n      dup3\n        /* \"#utility.yul\":2492:2510   */\n      add\n        /* \"#utility.yul\":2484:2510   */\n      swap1\n      pop\n        /* \"#utility.yul\":2520:2591   */\n      tag_167\n        /* \"#utility.yul\":2588:2589   */\n      0x00\n        /* \"#utility.yul\":2577:2586   */\n      dup4\n        /* \"#utility.yul\":2573:2590   */\n      add\n        /* \"#utility.yul\":2564:2570   */\n      dup5\n        /* \"#utility.yul\":2520:2591   */\n      tag_106\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2376:2598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2604:2726   */\n    tag_109:\n        /* \"#utility.yul\":2677:2701   */\n      tag_169\n        /* \"#utility.yul\":2695:2700   */\n      dup2\n        /* \"#utility.yul\":2677:2701   */\n      tag_105\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2670:2675   */\n      dup2\n        /* \"#utility.yul\":2667:2702   */\n      eq\n        /* \"#utility.yul\":2657:2720   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2716:2717   */\n      0x00\n        /* \"#utility.yul\":2713:2714   */\n      dup1\n        /* \"#utility.yul\":2706:2718   */\n      revert\n        /* \"#utility.yul\":2657:2720   */\n    tag_170:\n        /* \"#utility.yul\":2604:2726   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2732:2871   */\n    tag_110:\n        /* \"#utility.yul\":2778:2783   */\n      0x00\n        /* \"#utility.yul\":2816:2822   */\n      dup2\n        /* \"#utility.yul\":2803:2823   */\n      calldataload\n        /* \"#utility.yul\":2794:2823   */\n      swap1\n      pop\n        /* \"#utility.yul\":2832:2865   */\n      tag_172\n        /* \"#utility.yul\":2859:2864   */\n      dup2\n        /* \"#utility.yul\":2832:2865   */\n      tag_109\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2732:2871   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2877:3351   */\n    tag_23:\n        /* \"#utility.yul\":2945:2951   */\n      0x00\n        /* \"#utility.yul\":2953:2959   */\n      dup1\n        /* \"#utility.yul\":3002:3004   */\n      0x40\n        /* \"#utility.yul\":2990:2999   */\n      dup4\n        /* \"#utility.yul\":2981:2988   */\n      dup6\n        /* \"#utility.yul\":2977:3000   */\n      sub\n        /* \"#utility.yul\":2973:3005   */\n      slt\n        /* \"#utility.yul\":2970:3089   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":3008:3087   */\n      tag_175\n      tag_98\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2970:3089   */\n    tag_174:\n        /* \"#utility.yul\":3128:3129   */\n      0x00\n        /* \"#utility.yul\":3153:3206   */\n      tag_176\n        /* \"#utility.yul\":3198:3205   */\n      dup6\n        /* \"#utility.yul\":3189:3195   */\n      dup3\n        /* \"#utility.yul\":3178:3187   */\n      dup7\n        /* \"#utility.yul\":3174:3196   */\n      add\n        /* \"#utility.yul\":3153:3206   */\n      tag_110\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3143:3206   */\n      swap3\n      pop\n        /* \"#utility.yul\":3099:3216   */\n      pop\n        /* \"#utility.yul\":3255:3257   */\n      0x20\n        /* \"#utility.yul\":3281:3334   */\n      tag_177\n        /* \"#utility.yul\":3326:3333   */\n      dup6\n        /* \"#utility.yul\":3317:3323   */\n      dup3\n        /* \"#utility.yul\":3306:3315   */\n      dup7\n        /* \"#utility.yul\":3302:3324   */\n      add\n        /* \"#utility.yul\":3281:3334   */\n      tag_110\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3271:3334   */\n      swap2\n      pop\n        /* \"#utility.yul\":3226:3344   */\n      pop\n        /* \"#utility.yul\":2877:3351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3357:3417   */\n    tag_111:\n        /* \"#utility.yul\":3385:3388   */\n      0x00\n        /* \"#utility.yul\":3406:3411   */\n      dup2\n        /* \"#utility.yul\":3399:3411   */\n      swap1\n      pop\n        /* \"#utility.yul\":3357:3417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3423:3565   */\n    tag_112:\n        /* \"#utility.yul\":3473:3482   */\n      0x00\n        /* \"#utility.yul\":3506:3559   */\n      tag_180\n        /* \"#utility.yul\":3524:3558   */\n      tag_181\n        /* \"#utility.yul\":3533:3557   */\n      tag_182\n        /* \"#utility.yul\":3551:3556   */\n      dup5\n        /* \"#utility.yul\":3533:3557   */\n      tag_100\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3524:3558   */\n      tag_111\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3506:3559   */\n      tag_100\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":3493:3559   */\n      swap1\n      pop\n        /* \"#utility.yul\":3423:3565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3571:3697   */\n    tag_113:\n        /* \"#utility.yul\":3621:3630   */\n      0x00\n        /* \"#utility.yul\":3654:3691   */\n      tag_184\n        /* \"#utility.yul\":3685:3690   */\n      dup3\n        /* \"#utility.yul\":3654:3691   */\n      tag_112\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3641:3691   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3703:3842   */\n    tag_114:\n        /* \"#utility.yul\":3766:3775   */\n      0x00\n        /* \"#utility.yul\":3799:3836   */\n      tag_186\n        /* \"#utility.yul\":3830:3835   */\n      dup3\n        /* \"#utility.yul\":3799:3836   */\n      tag_113\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3786:3836   */\n      swap1\n      pop\n        /* \"#utility.yul\":3703:3842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3848:4005   */\n    tag_115:\n        /* \"#utility.yul\":3948:3998   */\n      tag_188\n        /* \"#utility.yul\":3992:3997   */\n      dup2\n        /* \"#utility.yul\":3948:3998   */\n      tag_114\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3943:3946   */\n      dup3\n        /* \"#utility.yul\":3936:3999   */\n      mstore\n        /* \"#utility.yul\":3848:4005   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4011:4259   */\n    tag_29:\n        /* \"#utility.yul\":4117:4121   */\n      0x00\n        /* \"#utility.yul\":4155:4157   */\n      0x20\n        /* \"#utility.yul\":4144:4153   */\n      dup3\n        /* \"#utility.yul\":4140:4158   */\n      add\n        /* \"#utility.yul\":4132:4158   */\n      swap1\n      pop\n        /* \"#utility.yul\":4168:4252   */\n      tag_190\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4238:4247   */\n      dup4\n        /* \"#utility.yul\":4234:4251   */\n      add\n        /* \"#utility.yul\":4225:4231   */\n      dup5\n        /* \"#utility.yul\":4168:4252   */\n      tag_115\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4011:4259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4434   */\n    tag_116:\n        /* \"#utility.yul\":4349:4360   */\n      0x00\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4378:4381   */\n      dup3\n        /* \"#utility.yul\":4371:4390   */\n      mstore\n        /* \"#utility.yul\":4423:4427   */\n      0x20\n        /* \"#utility.yul\":4418:4421   */\n      dup3\n        /* \"#utility.yul\":4414:4428   */\n      add\n        /* \"#utility.yul\":4399:4428   */\n      swap1\n      pop\n        /* \"#utility.yul\":4265:4434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4440:4613   */\n    tag_117:\n        /* \"#utility.yul\":4580:4605   */\n      0x596f75206861766520616e206f70656e206c6f616e2021000000000000000000\n        /* \"#utility.yul\":4576:4577   */\n      0x00\n        /* \"#utility.yul\":4568:4574   */\n      dup3\n        /* \"#utility.yul\":4564:4578   */\n      add\n        /* \"#utility.yul\":4557:4606   */\n      mstore\n        /* \"#utility.yul\":4440:4613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4619:4985   */\n    tag_118:\n        /* \"#utility.yul\":4761:4764   */\n      0x00\n        /* \"#utility.yul\":4782:4849   */\n      tag_194\n        /* \"#utility.yul\":4846:4848   */\n      0x17\n        /* \"#utility.yul\":4841:4844   */\n      dup4\n        /* \"#utility.yul\":4782:4849   */\n      tag_116\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4775:4849   */\n      swap2\n      pop\n        /* \"#utility.yul\":4858:4951   */\n      tag_195\n        /* \"#utility.yul\":4947:4950   */\n      dup3\n        /* \"#utility.yul\":4858:4951   */\n      tag_117\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4976:4978   */\n      0x20\n        /* \"#utility.yul\":4971:4974   */\n      dup3\n        /* \"#utility.yul\":4967:4979   */\n      add\n        /* \"#utility.yul\":4960:4979   */\n      swap1\n      pop\n        /* \"#utility.yul\":4619:4985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4991:5410   */\n    tag_41:\n        /* \"#utility.yul\":5157:5161   */\n      0x00\n        /* \"#utility.yul\":5195:5197   */\n      0x20\n        /* \"#utility.yul\":5184:5193   */\n      dup3\n        /* \"#utility.yul\":5180:5198   */\n      add\n        /* \"#utility.yul\":5172:5198   */\n      swap1\n      pop\n        /* \"#utility.yul\":5244:5253   */\n      dup2\n        /* \"#utility.yul\":5238:5242   */\n      dup2\n        /* \"#utility.yul\":5234:5254   */\n      sub\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5219:5228   */\n      dup4\n        /* \"#utility.yul\":5215:5232   */\n      add\n        /* \"#utility.yul\":5208:5255   */\n      mstore\n        /* \"#utility.yul\":5272:5403   */\n      tag_197\n        /* \"#utility.yul\":5398:5402   */\n      dup2\n        /* \"#utility.yul\":5272:5403   */\n      tag_118\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5264:5403   */\n      swap1\n      pop\n        /* \"#utility.yul\":4991:5410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5596   */\n    tag_119:\n        /* \"#utility.yul\":5464:5541   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5461:5462   */\n      0x00\n        /* \"#utility.yul\":5454:5542   */\n      mstore\n        /* \"#utility.yul\":5561:5565   */\n      0x11\n        /* \"#utility.yul\":5558:5559   */\n      0x04\n        /* \"#utility.yul\":5551:5566   */\n      mstore\n        /* \"#utility.yul\":5585:5589   */\n      0x24\n        /* \"#utility.yul\":5582:5583   */\n      0x00\n        /* \"#utility.yul\":5575:5590   */\n      revert\n        /* \"#utility.yul\":5602:6012   */\n    tag_43:\n        /* \"#utility.yul\":5642:5649   */\n      0x00\n        /* \"#utility.yul\":5665:5685   */\n      tag_200\n        /* \"#utility.yul\":5683:5684   */\n      dup3\n        /* \"#utility.yul\":5665:5685   */\n      tag_105\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5660:5685   */\n      swap2\n      pop\n        /* \"#utility.yul\":5699:5719   */\n      tag_201\n        /* \"#utility.yul\":5717:5718   */\n      dup4\n        /* \"#utility.yul\":5699:5719   */\n      tag_105\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5694:5719   */\n      swap3\n      pop\n        /* \"#utility.yul\":5754:5755   */\n      dup3\n        /* \"#utility.yul\":5751:5752   */\n      dup3\n        /* \"#utility.yul\":5747:5756   */\n      mul\n        /* \"#utility.yul\":5776:5806   */\n      tag_202\n        /* \"#utility.yul\":5794:5805   */\n      dup2\n        /* \"#utility.yul\":5776:5806   */\n      tag_105\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":5765:5806   */\n      swap2\n      pop\n        /* \"#utility.yul\":5955:5956   */\n      dup3\n        /* \"#utility.yul\":5946:5953   */\n      dup3\n        /* \"#utility.yul\":5942:5957   */\n      div\n        /* \"#utility.yul\":5939:5940   */\n      dup5\n        /* \"#utility.yul\":5936:5958   */\n      eq\n        /* \"#utility.yul\":5916:5917   */\n      dup4\n        /* \"#utility.yul\":5909:5918   */\n      iszero\n        /* \"#utility.yul\":5889:5972   */\n      or\n        /* \"#utility.yul\":5866:6005   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":5985:6003   */\n      tag_204\n      tag_119\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5866:6005   */\n    tag_203:\n        /* \"#utility.yul\":5650:6012   */\n      pop\n        /* \"#utility.yul\":5602:6012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6018:6198   */\n    tag_120:\n        /* \"#utility.yul\":6066:6143   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6063:6064   */\n      0x00\n        /* \"#utility.yul\":6056:6144   */\n      mstore\n        /* \"#utility.yul\":6163:6167   */\n      0x12\n        /* \"#utility.yul\":6160:6161   */\n      0x04\n        /* \"#utility.yul\":6153:6168   */\n      mstore\n        /* \"#utility.yul\":6187:6191   */\n      0x24\n        /* \"#utility.yul\":6184:6185   */\n      0x00\n        /* \"#utility.yul\":6177:6192   */\n      revert\n        /* \"#utility.yul\":6204:6389   */\n    tag_45:\n        /* \"#utility.yul\":6244:6245   */\n      0x00\n        /* \"#utility.yul\":6261:6281   */\n      tag_207\n        /* \"#utility.yul\":6279:6280   */\n      dup3\n        /* \"#utility.yul\":6261:6281   */\n      tag_105\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":6256:6281   */\n      swap2\n      pop\n        /* \"#utility.yul\":6295:6315   */\n      tag_208\n        /* \"#utility.yul\":6313:6314   */\n      dup4\n        /* \"#utility.yul\":6295:6315   */\n      tag_105\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":6290:6315   */\n      swap3\n      pop\n        /* \"#utility.yul\":6334:6335   */\n      dup3\n        /* \"#utility.yul\":6324:6359   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":6339:6357   */\n      tag_210\n      tag_120\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":6324:6359   */\n    tag_209:\n        /* \"#utility.yul\":6381:6382   */\n      dup3\n        /* \"#utility.yul\":6378:6379   */\n      dup3\n        /* \"#utility.yul\":6374:6383   */\n      div\n        /* \"#utility.yul\":6369:6383   */\n      swap1\n      pop\n        /* \"#utility.yul\":6204:6389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6395:6568   */\n    tag_121:\n        /* \"#utility.yul\":6535:6560   */\n      0x496e73756666696369656e7420436f6c6c61746572616c000000000000000000\n        /* \"#utility.yul\":6531:6532   */\n      0x00\n        /* \"#utility.yul\":6523:6529   */\n      dup3\n        /* \"#utility.yul\":6519:6533   */\n      add\n        /* \"#utility.yul\":6512:6561   */\n      mstore\n        /* \"#utility.yul\":6395:6568   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6574:6940   */\n    tag_122:\n        /* \"#utility.yul\":6716:6719   */\n      0x00\n        /* \"#utility.yul\":6737:6804   */\n      tag_213\n        /* \"#utility.yul\":6801:6803   */\n      0x17\n        /* \"#utility.yul\":6796:6799   */\n      dup4\n        /* \"#utility.yul\":6737:6804   */\n      tag_116\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6730:6804   */\n      swap2\n      pop\n        /* \"#utility.yul\":6813:6906   */\n      tag_214\n        /* \"#utility.yul\":6902:6905   */\n      dup3\n        /* \"#utility.yul\":6813:6906   */\n      tag_121\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6931:6933   */\n      0x20\n        /* \"#utility.yul\":6926:6929   */\n      dup3\n        /* \"#utility.yul\":6922:6934   */\n      add\n        /* \"#utility.yul\":6915:6934   */\n      swap1\n      pop\n        /* \"#utility.yul\":6574:6940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6946:7365   */\n    tag_48:\n        /* \"#utility.yul\":7112:7116   */\n      0x00\n        /* \"#utility.yul\":7150:7152   */\n      0x20\n        /* \"#utility.yul\":7139:7148   */\n      dup3\n        /* \"#utility.yul\":7135:7153   */\n      add\n        /* \"#utility.yul\":7127:7153   */\n      swap1\n      pop\n        /* \"#utility.yul\":7199:7208   */\n      dup2\n        /* \"#utility.yul\":7193:7197   */\n      dup2\n        /* \"#utility.yul\":7189:7209   */\n      sub\n        /* \"#utility.yul\":7185:7186   */\n      0x00\n        /* \"#utility.yul\":7174:7183   */\n      dup4\n        /* \"#utility.yul\":7170:7187   */\n      add\n        /* \"#utility.yul\":7163:7210   */\n      mstore\n        /* \"#utility.yul\":7227:7358   */\n      tag_216\n        /* \"#utility.yul\":7353:7357   */\n      dup2\n        /* \"#utility.yul\":7227:7358   */\n      tag_122\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":7219:7358   */\n      swap1\n      pop\n        /* \"#utility.yul\":6946:7365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7371:7536   */\n    tag_123:\n        /* \"#utility.yul\":7511:7528   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":7507:7508   */\n      0x00\n        /* \"#utility.yul\":7499:7505   */\n      dup3\n        /* \"#utility.yul\":7495:7509   */\n      add\n        /* \"#utility.yul\":7488:7529   */\n      mstore\n        /* \"#utility.yul\":7371:7536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7542:7908   */\n    tag_124:\n        /* \"#utility.yul\":7684:7687   */\n      0x00\n        /* \"#utility.yul\":7705:7772   */\n      tag_219\n        /* \"#utility.yul\":7769:7771   */\n      0x0f\n        /* \"#utility.yul\":7764:7767   */\n      dup4\n        /* \"#utility.yul\":7705:7772   */\n      tag_116\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7698:7772   */\n      swap2\n      pop\n        /* \"#utility.yul\":7781:7874   */\n      tag_220\n        /* \"#utility.yul\":7870:7873   */\n      dup3\n        /* \"#utility.yul\":7781:7874   */\n      tag_123\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":7899:7901   */\n      0x20\n        /* \"#utility.yul\":7894:7897   */\n      dup3\n        /* \"#utility.yul\":7890:7902   */\n      add\n        /* \"#utility.yul\":7883:7902   */\n      swap1\n      pop\n        /* \"#utility.yul\":7542:7908   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7914:8333   */\n    tag_53:\n        /* \"#utility.yul\":8080:8084   */\n      0x00\n        /* \"#utility.yul\":8118:8120   */\n      0x20\n        /* \"#utility.yul\":8107:8116   */\n      dup3\n        /* \"#utility.yul\":8103:8121   */\n      add\n        /* \"#utility.yul\":8095:8121   */\n      swap1\n      pop\n        /* \"#utility.yul\":8167:8176   */\n      dup2\n        /* \"#utility.yul\":8161:8165   */\n      dup2\n        /* \"#utility.yul\":8157:8177   */\n      sub\n        /* \"#utility.yul\":8153:8154   */\n      0x00\n        /* \"#utility.yul\":8142:8151   */\n      dup4\n        /* \"#utility.yul\":8138:8155   */\n      add\n        /* \"#utility.yul\":8131:8178   */\n      mstore\n        /* \"#utility.yul\":8195:8326   */\n      tag_222\n        /* \"#utility.yul\":8321:8325   */\n      dup2\n        /* \"#utility.yul\":8195:8326   */\n      tag_124\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":8187:8326   */\n      swap1\n      pop\n        /* \"#utility.yul\":7914:8333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8339:8671   */\n    tag_56:\n        /* \"#utility.yul\":8460:8464   */\n      0x00\n        /* \"#utility.yul\":8498:8500   */\n      0x40\n        /* \"#utility.yul\":8487:8496   */\n      dup3\n        /* \"#utility.yul\":8483:8501   */\n      add\n        /* \"#utility.yul\":8475:8501   */\n      swap1\n      pop\n        /* \"#utility.yul\":8511:8582   */\n      tag_224\n        /* \"#utility.yul\":8579:8580   */\n      0x00\n        /* \"#utility.yul\":8568:8577   */\n      dup4\n        /* \"#utility.yul\":8564:8581   */\n      add\n        /* \"#utility.yul\":8555:8561   */\n      dup6\n        /* \"#utility.yul\":8511:8582   */\n      tag_106\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":8592:8664   */\n      tag_225\n        /* \"#utility.yul\":8660:8662   */\n      0x20\n        /* \"#utility.yul\":8649:8658   */\n      dup4\n        /* \"#utility.yul\":8645:8663   */\n      add\n        /* \"#utility.yul\":8636:8642   */\n      dup5\n        /* \"#utility.yul\":8592:8664   */\n      tag_106\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":8339:8671   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8677:8841   */\n    tag_125:\n        /* \"#utility.yul\":8817:8833   */\n      0x4e6f20616374697665206c6f616e000000000000000000000000000000000000\n        /* \"#utility.yul\":8813:8814   */\n      0x00\n        /* \"#utility.yul\":8805:8811   */\n      dup3\n        /* \"#utility.yul\":8801:8815   */\n      add\n        /* \"#utility.yul\":8794:8834   */\n      mstore\n        /* \"#utility.yul\":8677:8841   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8847:9213   */\n    tag_126:\n        /* \"#utility.yul\":8989:8992   */\n      0x00\n        /* \"#utility.yul\":9010:9077   */\n      tag_228\n        /* \"#utility.yul\":9074:9076   */\n      0x0e\n        /* \"#utility.yul\":9069:9072   */\n      dup4\n        /* \"#utility.yul\":9010:9077   */\n      tag_116\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":9003:9077   */\n      swap2\n      pop\n        /* \"#utility.yul\":9086:9179   */\n      tag_229\n        /* \"#utility.yul\":9175:9178   */\n      dup3\n        /* \"#utility.yul\":9086:9179   */\n      tag_125\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":9204:9206   */\n      0x20\n        /* \"#utility.yul\":9199:9202   */\n      dup3\n        /* \"#utility.yul\":9195:9207   */\n      add\n        /* \"#utility.yul\":9188:9207   */\n      swap1\n      pop\n        /* \"#utility.yul\":8847:9213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9219:9638   */\n    tag_60:\n        /* \"#utility.yul\":9385:9389   */\n      0x00\n        /* \"#utility.yul\":9423:9425   */\n      0x20\n        /* \"#utility.yul\":9412:9421   */\n      dup3\n        /* \"#utility.yul\":9408:9426   */\n      add\n        /* \"#utility.yul\":9400:9426   */\n      swap1\n      pop\n        /* \"#utility.yul\":9472:9481   */\n      dup2\n        /* \"#utility.yul\":9466:9470   */\n      dup2\n        /* \"#utility.yul\":9462:9482   */\n      sub\n        /* \"#utility.yul\":9458:9459   */\n      0x00\n        /* \"#utility.yul\":9447:9456   */\n      dup4\n        /* \"#utility.yul\":9443:9460   */\n      add\n        /* \"#utility.yul\":9436:9483   */\n      mstore\n        /* \"#utility.yul\":9500:9631   */\n      tag_231\n        /* \"#utility.yul\":9626:9630   */\n      dup2\n        /* \"#utility.yul\":9500:9631   */\n      tag_126\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":9492:9631   */\n      swap1\n      pop\n        /* \"#utility.yul\":9219:9638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9644:9868   */\n    tag_127:\n        /* \"#utility.yul\":9784:9818   */\n      0x436f6c6c61746572616c697a6174696f6e20726174696f2061626f7665206d69\n        /* \"#utility.yul\":9780:9781   */\n      0x00\n        /* \"#utility.yul\":9772:9778   */\n      dup3\n        /* \"#utility.yul\":9768:9782   */\n      add\n        /* \"#utility.yul\":9761:9819   */\n      mstore\n        /* \"#utility.yul\":9853:9860   */\n      0x6e696d756d000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9848:9850   */\n      0x20\n        /* \"#utility.yul\":9840:9846   */\n      dup3\n        /* \"#utility.yul\":9836:9851   */\n      add\n        /* \"#utility.yul\":9829:9861   */\n      mstore\n        /* \"#utility.yul\":9644:9868   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9874:10240   */\n    tag_128:\n        /* \"#utility.yul\":10016:10019   */\n      0x00\n        /* \"#utility.yul\":10037:10104   */\n      tag_234\n        /* \"#utility.yul\":10101:10103   */\n      0x25\n        /* \"#utility.yul\":10096:10099   */\n      dup4\n        /* \"#utility.yul\":10037:10104   */\n      tag_116\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":10030:10104   */\n      swap2\n      pop\n        /* \"#utility.yul\":10113:10206   */\n      tag_235\n        /* \"#utility.yul\":10202:10205   */\n      dup3\n        /* \"#utility.yul\":10113:10206   */\n      tag_127\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":10231:10233   */\n      0x40\n        /* \"#utility.yul\":10226:10229   */\n      dup3\n        /* \"#utility.yul\":10222:10234   */\n      add\n        /* \"#utility.yul\":10215:10234   */\n      swap1\n      pop\n        /* \"#utility.yul\":9874:10240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10246:10665   */\n    tag_65:\n        /* \"#utility.yul\":10412:10416   */\n      0x00\n        /* \"#utility.yul\":10450:10452   */\n      0x20\n        /* \"#utility.yul\":10439:10448   */\n      dup3\n        /* \"#utility.yul\":10435:10453   */\n      add\n        /* \"#utility.yul\":10427:10453   */\n      swap1\n      pop\n        /* \"#utility.yul\":10499:10508   */\n      dup2\n        /* \"#utility.yul\":10493:10497   */\n      dup2\n        /* \"#utility.yul\":10489:10509   */\n      sub\n        /* \"#utility.yul\":10485:10486   */\n      0x00\n        /* \"#utility.yul\":10474:10483   */\n      dup4\n        /* \"#utility.yul\":10470:10487   */\n      add\n        /* \"#utility.yul\":10463:10510   */\n      mstore\n        /* \"#utility.yul\":10527:10658   */\n      tag_237\n        /* \"#utility.yul\":10653:10657   */\n      dup2\n        /* \"#utility.yul\":10527:10658   */\n      tag_128\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":10519:10658   */\n      swap1\n      pop\n        /* \"#utility.yul\":10246:10665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10671:10839   */\n    tag_129:\n        /* \"#utility.yul\":10811:10831   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":10807:10808   */\n      0x00\n        /* \"#utility.yul\":10799:10805   */\n      dup3\n        /* \"#utility.yul\":10795:10809   */\n      add\n        /* \"#utility.yul\":10788:10832   */\n      mstore\n        /* \"#utility.yul\":10671:10839   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10845:11211   */\n    tag_130:\n        /* \"#utility.yul\":10987:10990   */\n      0x00\n        /* \"#utility.yul\":11008:11075   */\n      tag_240\n        /* \"#utility.yul\":11072:11074   */\n      0x12\n        /* \"#utility.yul\":11067:11070   */\n      dup4\n        /* \"#utility.yul\":11008:11075   */\n      tag_116\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":11001:11075   */\n      swap2\n      pop\n        /* \"#utility.yul\":11084:11177   */\n      tag_241\n        /* \"#utility.yul\":11173:11176   */\n      dup3\n        /* \"#utility.yul\":11084:11177   */\n      tag_129\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":11202:11204   */\n      0x20\n        /* \"#utility.yul\":11197:11200   */\n      dup3\n        /* \"#utility.yul\":11193:11205   */\n      add\n        /* \"#utility.yul\":11186:11205   */\n      swap1\n      pop\n        /* \"#utility.yul\":10845:11211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11217:11636   */\n    tag_70:\n        /* \"#utility.yul\":11383:11387   */\n      0x00\n        /* \"#utility.yul\":11421:11423   */\n      0x20\n        /* \"#utility.yul\":11410:11419   */\n      dup3\n        /* \"#utility.yul\":11406:11424   */\n      add\n        /* \"#utility.yul\":11398:11424   */\n      swap1\n      pop\n        /* \"#utility.yul\":11470:11479   */\n      dup2\n        /* \"#utility.yul\":11464:11468   */\n      dup2\n        /* \"#utility.yul\":11460:11480   */\n      sub\n        /* \"#utility.yul\":11456:11457   */\n      0x00\n        /* \"#utility.yul\":11445:11454   */\n      dup4\n        /* \"#utility.yul\":11441:11458   */\n      add\n        /* \"#utility.yul\":11434:11481   */\n      mstore\n        /* \"#utility.yul\":11498:11629   */\n      tag_243\n        /* \"#utility.yul\":11624:11628   */\n      dup2\n        /* \"#utility.yul\":11498:11629   */\n      tag_130\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":11490:11629   */\n      swap1\n      pop\n        /* \"#utility.yul\":11217:11636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11642:11974   */\n    tag_72:\n        /* \"#utility.yul\":11763:11767   */\n      0x00\n        /* \"#utility.yul\":11801:11803   */\n      0x40\n        /* \"#utility.yul\":11790:11799   */\n      dup3\n        /* \"#utility.yul\":11786:11804   */\n      add\n        /* \"#utility.yul\":11778:11804   */\n      swap1\n      pop\n        /* \"#utility.yul\":11814:11885   */\n      tag_245\n        /* \"#utility.yul\":11882:11883   */\n      0x00\n        /* \"#utility.yul\":11871:11880   */\n      dup4\n        /* \"#utility.yul\":11867:11884   */\n      add\n        /* \"#utility.yul\":11858:11864   */\n      dup6\n        /* \"#utility.yul\":11814:11885   */\n      tag_104\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":11895:11967   */\n      tag_246\n        /* \"#utility.yul\":11963:11965   */\n      0x20\n        /* \"#utility.yul\":11952:11961   */\n      dup4\n        /* \"#utility.yul\":11948:11966   */\n      add\n        /* \"#utility.yul\":11939:11945   */\n      dup5\n        /* \"#utility.yul\":11895:11967   */\n      tag_106\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":11642:11974   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11980:12096   */\n    tag_131:\n        /* \"#utility.yul\":12050:12071   */\n      tag_248\n        /* \"#utility.yul\":12065:12070   */\n      dup2\n        /* \"#utility.yul\":12050:12071   */\n      tag_107\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":12043:12048   */\n      dup2\n        /* \"#utility.yul\":12040:12072   */\n      eq\n        /* \"#utility.yul\":12030:12090   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":12086:12087   */\n      0x00\n        /* \"#utility.yul\":12083:12084   */\n      dup1\n        /* \"#utility.yul\":12076:12088   */\n      revert\n        /* \"#utility.yul\":12030:12090   */\n    tag_249:\n        /* \"#utility.yul\":11980:12096   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12102:12239   */\n    tag_132:\n        /* \"#utility.yul\":12156:12161   */\n      0x00\n        /* \"#utility.yul\":12187:12193   */\n      dup2\n        /* \"#utility.yul\":12181:12194   */\n      mload\n        /* \"#utility.yul\":12172:12194   */\n      swap1\n      pop\n        /* \"#utility.yul\":12203:12233   */\n      tag_251\n        /* \"#utility.yul\":12227:12232   */\n      dup2\n        /* \"#utility.yul\":12203:12233   */\n      tag_131\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":12102:12239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12245:12590   */\n    tag_76:\n        /* \"#utility.yul\":12312:12318   */\n      0x00\n        /* \"#utility.yul\":12361:12363   */\n      0x20\n        /* \"#utility.yul\":12349:12358   */\n      dup3\n        /* \"#utility.yul\":12340:12347   */\n      dup5\n        /* \"#utility.yul\":12336:12359   */\n      sub\n        /* \"#utility.yul\":12332:12364   */\n      slt\n        /* \"#utility.yul\":12329:12448   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":12367:12446   */\n      tag_254\n      tag_98\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":12329:12448   */\n    tag_253:\n        /* \"#utility.yul\":12487:12488   */\n      0x00\n        /* \"#utility.yul\":12512:12573   */\n      tag_255\n        /* \"#utility.yul\":12565:12572   */\n      dup5\n        /* \"#utility.yul\":12556:12562   */\n      dup3\n        /* \"#utility.yul\":12545:12554   */\n      dup6\n        /* \"#utility.yul\":12541:12563   */\n      add\n        /* \"#utility.yul\":12512:12573   */\n      tag_132\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":12502:12573   */\n      swap2\n      pop\n        /* \"#utility.yul\":12458:12583   */\n      pop\n        /* \"#utility.yul\":12245:12590   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12596:12743   */\n    tag_133:\n        /* \"#utility.yul\":12697:12708   */\n      0x00\n        /* \"#utility.yul\":12734:12737   */\n      dup2\n        /* \"#utility.yul\":12719:12737   */\n      swap1\n      pop\n        /* \"#utility.yul\":12596:12743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12749:12863   */\n    tag_134:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12869:13267   */\n    tag_135:\n        /* \"#utility.yul\":13028:13031   */\n      0x00\n        /* \"#utility.yul\":13049:13132   */\n      tag_259\n        /* \"#utility.yul\":13130:13131   */\n      0x00\n        /* \"#utility.yul\":13125:13128   */\n      dup4\n        /* \"#utility.yul\":13049:13132   */\n      tag_133\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":13042:13132   */\n      swap2\n      pop\n        /* \"#utility.yul\":13141:13234   */\n      tag_260\n        /* \"#utility.yul\":13230:13233   */\n      dup3\n        /* \"#utility.yul\":13141:13234   */\n      tag_134\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":13259:13260   */\n      0x00\n        /* \"#utility.yul\":13254:13257   */\n      dup3\n        /* \"#utility.yul\":13250:13261   */\n      add\n        /* \"#utility.yul\":13243:13261   */\n      swap1\n      pop\n        /* \"#utility.yul\":12869:13267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13273:13652   */\n    tag_80:\n        /* \"#utility.yul\":13457:13460   */\n      0x00\n        /* \"#utility.yul\":13479:13626   */\n      tag_262\n        /* \"#utility.yul\":13622:13625   */\n      dup3\n        /* \"#utility.yul\":13479:13626   */\n      tag_135\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":13472:13626   */\n      swap2\n      pop\n        /* \"#utility.yul\":13643:13646   */\n      dup2\n        /* \"#utility.yul\":13636:13646   */\n      swap1\n      pop\n        /* \"#utility.yul\":13273:13652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13658:13852   */\n    tag_87:\n        /* \"#utility.yul\":13698:13702   */\n      0x00\n        /* \"#utility.yul\":13718:13738   */\n      tag_264\n        /* \"#utility.yul\":13736:13737   */\n      dup3\n        /* \"#utility.yul\":13718:13738   */\n      tag_105\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":13713:13738   */\n      swap2\n      pop\n        /* \"#utility.yul\":13752:13772   */\n      tag_265\n        /* \"#utility.yul\":13770:13771   */\n      dup4\n        /* \"#utility.yul\":13752:13772   */\n      tag_105\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":13747:13772   */\n      swap3\n      pop\n        /* \"#utility.yul\":13796:13797   */\n      dup3\n        /* \"#utility.yul\":13793:13794   */\n      dup3\n        /* \"#utility.yul\":13789:13798   */\n      sub\n        /* \"#utility.yul\":13781:13798   */\n      swap1\n      pop\n        /* \"#utility.yul\":13820:13821   */\n      dup2\n        /* \"#utility.yul\":13814:13818   */\n      dup2\n        /* \"#utility.yul\":13811:13822   */\n      gt\n        /* \"#utility.yul\":13808:13845   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":13825:13843   */\n      tag_267\n      tag_119\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":13808:13845   */\n    tag_266:\n        /* \"#utility.yul\":13658:13852   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13858:14049   */\n    tag_96:\n        /* \"#utility.yul\":13898:13901   */\n      0x00\n        /* \"#utility.yul\":13917:13937   */\n      tag_269\n        /* \"#utility.yul\":13935:13936   */\n      dup3\n        /* \"#utility.yul\":13917:13937   */\n      tag_105\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":13912:13937   */\n      swap2\n      pop\n        /* \"#utility.yul\":13951:13971   */\n      tag_270\n        /* \"#utility.yul\":13969:13970   */\n      dup4\n        /* \"#utility.yul\":13951:13971   */\n      tag_105\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":13946:13971   */\n      swap3\n      pop\n        /* \"#utility.yul\":13994:13995   */\n      dup3\n        /* \"#utility.yul\":13991:13992   */\n      dup3\n        /* \"#utility.yul\":13987:13996   */\n      add\n        /* \"#utility.yul\":13980:13996   */\n      swap1\n      pop\n        /* \"#utility.yul\":14015:14018   */\n      dup1\n        /* \"#utility.yul\":14012:14013   */\n      dup3\n        /* \"#utility.yul\":14009:14019   */\n      gt\n        /* \"#utility.yul\":14006:14042   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":14022:14040   */\n      tag_272\n      tag_119\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":14006:14042   */\n    tag_271:\n        /* \"#utility.yul\":13858:14049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207eed740b576380f76085834430487184b6ab17f84fc1459797fc260d1cdbdee064736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_850": {
									"entryPoint": null,
									"id": 850,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_ERC20_$651_fromMemory": {
									"entryPoint": 225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ERC20_$651t_uint256t_uint256_fromMemory": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ERC20_$651": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 134,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ERC20_$651": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2064:6",
										"nodeType": "YulBlock",
										"src": "0:2064:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "626:51:6",
													"nodeType": "YulBlock",
													"src": "626:51:6",
													"statements": [
														{
															"nativeSrc": "636:35:6",
															"nodeType": "YulAssignment",
															"src": "636:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "647:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:6"
																},
																"nativeSrc": "647:24:6",
																"nodeType": "YulFunctionCall",
																"src": "647:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ERC20_$651",
												"nativeSrc": "568:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:6",
														"nodeType": "YulTypedName",
														"src": "608:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:6",
														"nodeType": "YulTypedName",
														"src": "618:7:6",
														"type": ""
													}
												],
												"src": "568:109:6"
											},
											{
												"body": {
													"nativeSrc": "739:92:6",
													"nodeType": "YulBlock",
													"src": "739:92:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "809:16:6",
																"nodeType": "YulBlock",
																"src": "809:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "818:1:6",
																					"nodeType": "YulLiteral",
																					"src": "818:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:6",
																					"nodeType": "YulLiteral",
																					"src": "821:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "811:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:6"
																			},
																			"nativeSrc": "811:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "811:12:6"
																		},
																		"nativeSrc": "811:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "811:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "762:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "762:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "800:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "800:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ERC20_$651",
																					"nativeSrc": "769:30:6",
																					"nodeType": "YulIdentifier",
																					"src": "769:30:6"
																				},
																				"nativeSrc": "769:37:6",
																				"nodeType": "YulFunctionCall",
																				"src": "769:37:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "759:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "759:2:6"
																		},
																		"nativeSrc": "759:48:6",
																		"nodeType": "YulFunctionCall",
																		"src": "759:48:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "752:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:6"
																},
																"nativeSrc": "752:56:6",
																"nodeType": "YulFunctionCall",
																"src": "752:56:6"
															},
															"nativeSrc": "749:76:6",
															"nodeType": "YulIf",
															"src": "749:76:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_ERC20_$651",
												"nativeSrc": "683:148:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "732:5:6",
														"nodeType": "YulTypedName",
														"src": "732:5:6",
														"type": ""
													}
												],
												"src": "683:148:6"
											},
											{
												"body": {
													"nativeSrc": "913:93:6",
													"nodeType": "YulBlock",
													"src": "913:93:6",
													"statements": [
														{
															"nativeSrc": "923:22:6",
															"nodeType": "YulAssignment",
															"src": "923:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "938:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "932:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "932:5:6"
																},
																"nativeSrc": "932:13:6",
																"nodeType": "YulFunctionCall",
																"src": "932:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "923:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "994:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "994:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ERC20_$651",
																	"nativeSrc": "954:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "954:39:6"
																},
																"nativeSrc": "954:46:6",
																"nodeType": "YulFunctionCall",
																"src": "954:46:6"
															},
															"nativeSrc": "954:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "954:46:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_ERC20_$651_fromMemory",
												"nativeSrc": "837:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "891:6:6",
														"nodeType": "YulTypedName",
														"src": "891:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "899:3:6",
														"nodeType": "YulTypedName",
														"src": "899:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "907:5:6",
														"nodeType": "YulTypedName",
														"src": "907:5:6",
														"type": ""
													}
												],
												"src": "837:169:6"
											},
											{
												"body": {
													"nativeSrc": "1057:32:6",
													"nodeType": "YulBlock",
													"src": "1057:32:6",
													"statements": [
														{
															"nativeSrc": "1067:16:6",
															"nodeType": "YulAssignment",
															"src": "1067:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1078:5:6",
																"nodeType": "YulIdentifier",
																"src": "1078:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1067:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1067:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1012:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:6",
														"nodeType": "YulTypedName",
														"src": "1039:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1049:7:6",
														"nodeType": "YulTypedName",
														"src": "1049:7:6",
														"type": ""
													}
												],
												"src": "1012:77:6"
											},
											{
												"body": {
													"nativeSrc": "1138:79:6",
													"nodeType": "YulBlock",
													"src": "1138:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1195:16:6",
																"nodeType": "YulBlock",
																"src": "1195:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1204:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1204:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1207:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1207:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1197:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1197:6:6"
																			},
																			"nativeSrc": "1197:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1197:12:6"
																		},
																		"nativeSrc": "1197:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1197:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1161:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1161:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1186:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1186:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1168:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1168:17:6"
																				},
																				"nativeSrc": "1168:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1168:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1158:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1158:2:6"
																		},
																		"nativeSrc": "1158:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1158:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1151:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:6:6"
																},
																"nativeSrc": "1151:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:43:6"
															},
															"nativeSrc": "1148:63:6",
															"nodeType": "YulIf",
															"src": "1148:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1095:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1131:5:6",
														"nodeType": "YulTypedName",
														"src": "1131:5:6",
														"type": ""
													}
												],
												"src": "1095:122:6"
											},
											{
												"body": {
													"nativeSrc": "1286:80:6",
													"nodeType": "YulBlock",
													"src": "1286:80:6",
													"statements": [
														{
															"nativeSrc": "1296:22:6",
															"nodeType": "YulAssignment",
															"src": "1296:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1311:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1311:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1305:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1305:5:6"
																},
																"nativeSrc": "1305:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1305:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1296:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1296:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1354:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1354:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1327:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1327:26:6"
																},
																"nativeSrc": "1327:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1327:33:6"
															},
															"nativeSrc": "1327:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1327:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1223:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1264:6:6",
														"nodeType": "YulTypedName",
														"src": "1264:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1272:3:6",
														"nodeType": "YulTypedName",
														"src": "1272:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1280:5:6",
														"nodeType": "YulTypedName",
														"src": "1280:5:6",
														"type": ""
													}
												],
												"src": "1223:143:6"
											},
											{
												"body": {
													"nativeSrc": "1496:565:6",
													"nodeType": "YulBlock",
													"src": "1496:565:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1542:83:6",
																"nodeType": "YulBlock",
																"src": "1542:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1544:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1544:77:6"
																			},
																			"nativeSrc": "1544:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1544:79:6"
																		},
																		"nativeSrc": "1544:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1544:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1517:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1517:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1526:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1526:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1513:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:6"
																		},
																		"nativeSrc": "1513:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1513:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1538:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1538:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1509:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1509:3:6"
																},
																"nativeSrc": "1509:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1509:32:6"
															},
															"nativeSrc": "1506:119:6",
															"nodeType": "YulIf",
															"src": "1506:119:6"
														},
														{
															"nativeSrc": "1635:141:6",
															"nodeType": "YulBlock",
															"src": "1635:141:6",
															"statements": [
																{
																	"nativeSrc": "1650:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1650:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1664:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1654:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1654:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1679:87:6",
																	"nodeType": "YulAssignment",
																	"src": "1679:87:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1738:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1738:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1749:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1749:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1734:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1734:3:6"
																				},
																				"nativeSrc": "1734:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1734:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1758:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1758:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ERC20_$651_fromMemory",
																			"nativeSrc": "1689:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "1689:44:6"
																		},
																		"nativeSrc": "1689:77:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1689:77:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1679:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1679:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1786:129:6",
															"nodeType": "YulBlock",
															"src": "1786:129:6",
															"statements": [
																{
																	"nativeSrc": "1801:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1801:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1815:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1815:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1805:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1805:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1831:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1831:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1877:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1877:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1888:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1888:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1873:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1873:3:6"
																				},
																				"nativeSrc": "1873:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1873:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1897:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1897:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1841:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1841:31:6"
																		},
																		"nativeSrc": "1841:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1841:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1831:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1831:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1925:129:6",
															"nodeType": "YulBlock",
															"src": "1925:129:6",
															"statements": [
																{
																	"nativeSrc": "1940:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1940:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1954:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1954:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1944:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1944:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1970:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1970:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2016:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2016:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2027:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2027:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2012:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2012:3:6"
																				},
																				"nativeSrc": "2012:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2012:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2036:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2036:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1980:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1980:31:6"
																		},
																		"nativeSrc": "1980:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1980:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1970:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1970:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC20_$651t_uint256t_uint256_fromMemory",
												"nativeSrc": "1372:689:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1450:9:6",
														"nodeType": "YulTypedName",
														"src": "1450:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1461:7:6",
														"nodeType": "YulTypedName",
														"src": "1461:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1473:6:6",
														"nodeType": "YulTypedName",
														"src": "1473:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1481:6:6",
														"nodeType": "YulTypedName",
														"src": "1481:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1489:6:6",
														"nodeType": "YulTypedName",
														"src": "1489:6:6",
														"type": ""
													}
												],
												"src": "1372:689:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$651(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$651(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$651(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$651_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$651(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$651t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$651_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161106a38038061106a83398181016040528101906100319190610128565b825f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160018190555080600281905550505050610178565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100b38261008a565b9050919050565b5f6100c4826100a9565b9050919050565b6100d4816100ba565b81146100de575f80fd5b50565b5f815190506100ef816100cb565b92915050565b5f819050919050565b610107816100f5565b8114610111575f80fd5b50565b5f81519050610122816100fe565b92915050565b5f805f6060848603121561013f5761013e610086565b5b5f61014c868287016100e1565b935050602061015d86828701610114565b925050604061016e86828701610114565b9150509250925092565b610ee5806101855f395ff3fe608060405260043610610054575f3560e01c806373b4086b146100585780637c3a00fd14610098578063aa452fa6146100c2578063b2016bd4146100ea578063ba1be55414610114578063f966ade71461013e575b5f80fd5b348015610063575f80fd5b5061007e60048036038101906100799190610842565b610148565b60405161008f9594939291906108ae565b60405180910390f35b3480156100a3575f80fd5b506100ac6101a5565b6040516100b991906108ff565b60405180910390f35b3480156100cd575f80fd5b506100e860048036038101906100e39190610942565b6101ab565b005b3480156100f5575f80fd5b506100fe61046e565b60405161010b91906109db565b60405180910390f35b34801561011f575f80fd5b50610128610491565b60405161013591906108ff565b60405180910390f35b610146610497565b005b6003602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015490806004015f9054906101000a900460ff16905085565b60015481565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f8160020154148061022057505f816002015411801561021f575060011515816004015f9054906101000a900460ff161515145b5b61025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a4e565b60405180910390fd5b5f6064600254856102709190610a99565b61027a9190610b07565b9050808310156102bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b690610b81565b60405180910390fd5b6102c930846106d0565b610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90610be9565b60405180910390fd5b5f6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020014281526020015f1515815250905061035433866106d0565b508060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167f1f4fa8bbaa124ef8d04466f13d5a2572fb712424cee0bc9cf430aec52439acd7868660405161045f929190610c07565b60405180910390a25050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f81600101541161051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490610c78565b60405180910390fd5b5f61052782610743565b9050600254811061056d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056490610d06565b60405180910390fd5b5f61057783610788565b9050803410156105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b390610d6e565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3385600201546040518363ffffffff1660e01b815260040161061a929190610d8c565b6020604051808303815f875af1158015610636573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065a9190610ddd565b506001836004015f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fc7ce0a35f17b490de2a317e7fecb2cae86b1abffb03800b2f4928235213826988460010154346040516106c3929190610c07565b60405180910390a2505050565b5f808373ffffffffffffffffffffffffffffffffffffffff16836040516106f690610e35565b5f6040518083038185875af1925050503d805f8114610730576040519150601f19603f3d011682016040523d82523d5f602084013e610735565b606091505b505090508091505092915050565b5f8061074e83610788565b90505f8360010154826107619190610e49565b905083600101546064826107759190610a99565b61077f9190610b07565b92505050919050565b5f8082600301544261079a9190610e49565b90505f63bbf81e008260015486600101546107b59190610a99565b6107bf9190610a99565b6107c99190610b07565b90508084600101546107db9190610e7c565b92505050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610811826107e8565b9050919050565b61082181610807565b811461082b575f80fd5b50565b5f8135905061083c81610818565b92915050565b5f60208284031215610857576108566107e4565b5b5f6108648482850161082e565b91505092915050565b61087681610807565b82525050565b5f819050919050565b61088e8161087c565b82525050565b5f8115159050919050565b6108a881610894565b82525050565b5f60a0820190506108c15f83018861086d565b6108ce6020830187610885565b6108db6040830186610885565b6108e86060830185610885565b6108f5608083018461089f565b9695505050505050565b5f6020820190506109125f830184610885565b92915050565b6109218161087c565b811461092b575f80fd5b50565b5f8135905061093c81610918565b92915050565b5f8060408385031215610958576109576107e4565b5b5f6109658582860161092e565b92505060206109768582860161092e565b9150509250929050565b5f819050919050565b5f6109a361099e610999846107e8565b610980565b6107e8565b9050919050565b5f6109b482610989565b9050919050565b5f6109c5826109aa565b9050919050565b6109d5816109bb565b82525050565b5f6020820190506109ee5f8301846109cc565b92915050565b5f82825260208201905092915050565b7f596f75206861766520616e206f70656e206c6f616e20210000000000000000005f82015250565b5f610a386017836109f4565b9150610a4382610a04565b602082019050919050565b5f6020820190508181035f830152610a6581610a2c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610aa38261087c565b9150610aae8361087c565b9250828202610abc8161087c565b91508282048414831517610ad357610ad2610a6c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610b118261087c565b9150610b1c8361087c565b925082610b2c57610b2b610ada565b5b828204905092915050565b7f496e73756666696369656e7420436f6c6c61746572616c0000000000000000005f82015250565b5f610b6b6017836109f4565b9150610b7682610b37565b602082019050919050565b5f6020820190508181035f830152610b9881610b5f565b9050919050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610bd3600f836109f4565b9150610bde82610b9f565b602082019050919050565b5f6020820190508181035f830152610c0081610bc7565b9050919050565b5f604082019050610c1a5f830185610885565b610c276020830184610885565b9392505050565b7f4e6f20616374697665206c6f616e0000000000000000000000000000000000005f82015250565b5f610c62600e836109f4565b9150610c6d82610c2e565b602082019050919050565b5f6020820190508181035f830152610c8f81610c56565b9050919050565b7f436f6c6c61746572616c697a6174696f6e20726174696f2061626f7665206d695f8201527f6e696d756d000000000000000000000000000000000000000000000000000000602082015250565b5f610cf06025836109f4565b9150610cfb82610c96565b604082019050919050565b5f6020820190508181035f830152610d1d81610ce4565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f610d586012836109f4565b9150610d6382610d24565b602082019050919050565b5f6020820190508181035f830152610d8581610d4c565b9050919050565b5f604082019050610d9f5f83018561086d565b610dac6020830184610885565b9392505050565b610dbc81610894565b8114610dc6575f80fd5b50565b5f81519050610dd781610db3565b92915050565b5f60208284031215610df257610df16107e4565b5b5f610dff84828501610dc9565b91505092915050565b5f81905092915050565b50565b5f610e205f83610e08565b9150610e2b82610e12565b5f82019050919050565b5f610e3f82610e15565b9150819050919050565b5f610e538261087c565b9150610e5e8361087c565b9250828203905081811115610e7657610e75610a6c565b5b92915050565b5f610e868261087c565b9150610e918361087c565b9250828201905080821115610ea957610ea8610a6c565b5b9291505056fea26469706673582212207eed740b576380f76085834430487184b6ab17f84fc1459797fc260d1cdbdee064736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x106A CODESIZE SUB DUP1 PUSH2 0x106A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x128 JUMP JUMPDEST DUP3 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x178 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB3 DUP3 PUSH2 0x8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC4 DUP3 PUSH2 0xA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4 DUP2 PUSH2 0xBA JUMP JUMPDEST DUP2 EQ PUSH2 0xDE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xEF DUP2 PUSH2 0xCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x107 DUP2 PUSH2 0xF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x111 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x122 DUP2 PUSH2 0xFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13F JUMPI PUSH2 0x13E PUSH2 0x86 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14C DUP7 DUP3 DUP8 ADD PUSH2 0xE1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15D DUP7 DUP3 DUP8 ADD PUSH2 0x114 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16E DUP7 DUP3 DUP8 ADD PUSH2 0x114 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xEE5 DUP1 PUSH2 0x185 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x54 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73B4086B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x7C3A00FD EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xAA452FA6 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xBA1BE554 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xF966ADE7 EQ PUSH2 0x13E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST PUSH2 0x148 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x497 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD EQ DUP1 PUSH2 0x220 JUMPI POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT DUP1 ISZERO PUSH2 0x21F JUMPI POP PUSH1 0x1 ISZERO ISZERO DUP2 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST JUMPDEST PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x2 SLOAD DUP6 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x27A SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT ISZERO PUSH2 0x2BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C9 ADDRESS DUP5 PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FF SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH2 0x354 CALLER DUP7 PUSH2 0x6D0 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1F4FA8BBAA124EF8D04466F13D5A2572FB712424CEE0BC9CF430AEC52439ACD7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x45F SWAP3 SWAP2 SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x514 SWAP1 PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x527 DUP3 PUSH2 0x743 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD DUP2 LT PUSH2 0x56D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x564 SWAP1 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x577 DUP4 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B3 SWAP1 PUSH2 0xD6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61A SWAP3 SWAP2 SWAP1 PUSH2 0xD8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x636 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65A SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST POP PUSH1 0x1 DUP4 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC7CE0A35F17B490DE2A317E7FECB2CAE86B1ABFFB03800B2F492823521382698 DUP5 PUSH1 0x1 ADD SLOAD CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x6C3 SWAP3 SWAP2 SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x6F6 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x735 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x74E DUP4 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x761 SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x64 DUP3 PUSH2 0x775 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x79A SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0xBBF81E00 DUP3 PUSH1 0x1 SLOAD DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x7B5 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x811 DUP3 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x821 DUP2 PUSH2 0x807 JUMP JUMPDEST DUP2 EQ PUSH2 0x82B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x83C DUP2 PUSH2 0x818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x857 JUMPI PUSH2 0x856 PUSH2 0x7E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x864 DUP5 DUP3 DUP6 ADD PUSH2 0x82E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x876 DUP2 PUSH2 0x807 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x88E DUP2 PUSH2 0x87C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A8 DUP2 PUSH2 0x894 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x8C1 PUSH0 DUP4 ADD DUP9 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x8CE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x8DB PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x8E8 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x8F5 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x89F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x912 PUSH0 DUP4 ADD DUP5 PUSH2 0x885 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x921 DUP2 PUSH2 0x87C JUMP JUMPDEST DUP2 EQ PUSH2 0x92B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x93C DUP2 PUSH2 0x918 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x958 JUMPI PUSH2 0x957 PUSH2 0x7E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x965 DUP6 DUP3 DUP7 ADD PUSH2 0x92E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x976 DUP6 DUP3 DUP7 ADD PUSH2 0x92E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9A3 PUSH2 0x99E PUSH2 0x999 DUP5 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9B4 DUP3 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9C5 DUP3 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D5 DUP2 PUSH2 0x9BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9EE PUSH0 DUP4 ADD DUP5 PUSH2 0x9CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206861766520616E206F70656E206C6F616E2021000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA38 PUSH1 0x17 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xA43 DUP3 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA65 DUP2 PUSH2 0xA2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAA3 DUP3 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP PUSH2 0xAAE DUP4 PUSH2 0x87C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xABC DUP2 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xAD3 JUMPI PUSH2 0xAD2 PUSH2 0xA6C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB11 DUP3 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP PUSH2 0xB1C DUP4 PUSH2 0x87C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB2C JUMPI PUSH2 0xB2B PUSH2 0xADA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420436F6C6C61746572616C000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB6B PUSH1 0x17 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xB76 DUP3 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB98 DUP2 PUSH2 0xB5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBD3 PUSH1 0xF DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xBDE DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC00 DUP2 PUSH2 0xBC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC1A PUSH0 DUP4 ADD DUP6 PUSH2 0x885 JUMP JUMPDEST PUSH2 0xC27 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x885 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20616374697665206C6F616E000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC62 PUSH1 0xE DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6D DUP3 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC8F DUP2 PUSH2 0xC56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6C6C61746572616C697A6174696F6E20726174696F2061626F7665206D69 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E696D756D000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCF0 PUSH1 0x25 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCFB DUP3 PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD1D DUP2 PUSH2 0xCE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD58 PUSH1 0x12 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xD63 DUP3 PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD85 DUP2 PUSH2 0xD4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD9F PUSH0 DUP4 ADD DUP6 PUSH2 0x86D JUMP JUMPDEST PUSH2 0xDAC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x885 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDBC DUP2 PUSH2 0x894 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDD7 DUP2 PUSH2 0xDB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF2 JUMPI PUSH2 0xDF1 PUSH2 0x7E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDFF DUP5 DUP3 DUP6 ADD PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xE20 PUSH0 DUP4 PUSH2 0xE08 JUMP JUMPDEST SWAP2 POP PUSH2 0xE2B DUP3 PUSH2 0xE12 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE3F DUP3 PUSH2 0xE15 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE53 DUP3 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP PUSH2 0xE5E DUP4 PUSH2 0x87C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE76 JUMPI PUSH2 0xE75 PUSH2 0xA6C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE86 DUP3 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP PUSH2 0xE91 DUP4 PUSH2 0x87C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEA9 JUMPI PUSH2 0xEA8 PUSH2 0xA6C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xED740B576380F76085834430487184B6AB17F84FC1459797FC260D1CDBDEE0 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "116:3512:5:-:0;;;742:279;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;896:16;878:15;;:34;;;;;;;;;;;;;;;;;;937:13;922:12;:28;;;;988:26;960:25;:54;;;;742:279;;;116:3512;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:169::-;907:5;938:6;932:13;923:22;;954:46;994:5;954:46;:::i;:::-;837:169;;;;:::o;1012:77::-;1049:7;1078:5;1067:16;;1012:77;;;:::o;1095:122::-;1168:24;1186:5;1168:24;:::i;:::-;1161:5;1158:35;1148:63;;1207:1;1204;1197:12;1148:63;1095:122;:::o;1223:143::-;1280:5;1311:6;1305:13;1296:22;;1327:33;1354:5;1327:33;:::i;:::-;1223:143;;;;:::o;1372:689::-;1473:6;1481;1489;1538:2;1526:9;1517:7;1513:23;1509:32;1506:119;;;1544:79;;:::i;:::-;1506:119;1664:1;1689:77;1758:7;1749:6;1738:9;1734:22;1689:77;:::i;:::-;1679:87;;1635:141;1815:2;1841:64;1897:7;1888:6;1877:9;1873:22;1841:64;:::i;:::-;1831:74;;1786:129;1954:2;1980:64;2036:7;2027:6;2016:9;2012:22;1980:64;:::i;:::-;1970:74;;1925:129;1372:689;;;;;:::o;116:3512:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateCollateralizationRatio_1070": {
									"entryPoint": 1859,
									"id": 1070,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateOutstandingAmount_1107": {
									"entryPoint": 1928,
									"id": 1107,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_sentEtherTo_1040": {
									"entryPoint": 1744,
									"id": 1040,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@collateralToken_802": {
									"entryPoint": 1134,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@interestRate_804": {
									"entryPoint": 421,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@loans_811": {
									"entryPoint": 328,
									"id": 811,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minCollateralizationRatio_806": {
									"entryPoint": 1169,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@repayLoan_1016": {
									"entryPoint": 1175,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestLoan_945": {
									"entryPoint": 427,
									"id": 945,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3468,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 2222,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed": {
									"entryPoint": 2523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$651_to_t_address": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2778,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 2975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba": {
									"entryPoint": 3118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 3364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d": {
									"entryPoint": 3222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5": {
									"entryPoint": 2871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 3602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14052:6",
										"nodeType": "YulBlock",
										"src": "0:14052:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "907:263:6",
													"nodeType": "YulBlock",
													"src": "907:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:6",
																"nodeType": "YulBlock",
																"src": "953:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:6"
																			},
																			"nativeSrc": "955:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:6"
																		},
																		"nativeSrc": "955:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:6"
																		},
																		"nativeSrc": "924:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:6",
																		"nodeType": "YulLiteral",
																		"src": "949:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:6"
																},
																"nativeSrc": "920:32:6",
																"nodeType": "YulFunctionCall",
																"src": "920:32:6"
															},
															"nativeSrc": "917:119:6",
															"nodeType": "YulIf",
															"src": "917:119:6"
														},
														{
															"nativeSrc": "1046:117:6",
															"nodeType": "YulBlock",
															"src": "1046:117:6",
															"statements": [
																{
																	"nativeSrc": "1061:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:6"
																				},
																				"nativeSrc": "1121:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:6"
																		},
																		"nativeSrc": "1100:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:6",
														"nodeType": "YulTypedName",
														"src": "877:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:6",
														"nodeType": "YulTypedName",
														"src": "888:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:6",
														"nodeType": "YulTypedName",
														"src": "900:6:6",
														"type": ""
													}
												],
												"src": "841:329:6"
											},
											{
												"body": {
													"nativeSrc": "1241:53:6",
													"nodeType": "YulBlock",
													"src": "1241:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1258:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1281:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1263:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:6"
																		},
																		"nativeSrc": "1263:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1251:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:6"
																},
																"nativeSrc": "1251:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:37:6"
															},
															"nativeSrc": "1251:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1176:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1229:5:6",
														"nodeType": "YulTypedName",
														"src": "1229:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1236:3:6",
														"nodeType": "YulTypedName",
														"src": "1236:3:6",
														"type": ""
													}
												],
												"src": "1176:118:6"
											},
											{
												"body": {
													"nativeSrc": "1345:32:6",
													"nodeType": "YulBlock",
													"src": "1345:32:6",
													"statements": [
														{
															"nativeSrc": "1355:16:6",
															"nodeType": "YulAssignment",
															"src": "1355:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1366:5:6",
																"nodeType": "YulIdentifier",
																"src": "1366:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1355:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1355:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1300:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1327:5:6",
														"nodeType": "YulTypedName",
														"src": "1327:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1337:7:6",
														"nodeType": "YulTypedName",
														"src": "1337:7:6",
														"type": ""
													}
												],
												"src": "1300:77:6"
											},
											{
												"body": {
													"nativeSrc": "1448:53:6",
													"nodeType": "YulBlock",
													"src": "1448:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1465:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1465:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1488:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1488:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1470:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1470:17:6"
																		},
																		"nativeSrc": "1470:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1470:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1458:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1458:6:6"
																},
																"nativeSrc": "1458:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1458:37:6"
															},
															"nativeSrc": "1458:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1458:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1383:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1436:5:6",
														"nodeType": "YulTypedName",
														"src": "1436:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1443:3:6",
														"nodeType": "YulTypedName",
														"src": "1443:3:6",
														"type": ""
													}
												],
												"src": "1383:118:6"
											},
											{
												"body": {
													"nativeSrc": "1549:48:6",
													"nodeType": "YulBlock",
													"src": "1549:48:6",
													"statements": [
														{
															"nativeSrc": "1559:32:6",
															"nodeType": "YulAssignment",
															"src": "1559:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1584:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1584:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1577:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1577:6:6"
																		},
																		"nativeSrc": "1577:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1570:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1570:6:6"
																},
																"nativeSrc": "1570:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1570:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1559:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1559:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1507:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1531:5:6",
														"nodeType": "YulTypedName",
														"src": "1531:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1541:7:6",
														"nodeType": "YulTypedName",
														"src": "1541:7:6",
														"type": ""
													}
												],
												"src": "1507:90:6"
											},
											{
												"body": {
													"nativeSrc": "1662:50:6",
													"nodeType": "YulBlock",
													"src": "1662:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1679:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1679:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1699:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1699:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1684:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "1684:14:6"
																		},
																		"nativeSrc": "1684:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1684:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1672:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1672:6:6"
																},
																"nativeSrc": "1672:34:6",
																"nodeType": "YulFunctionCall",
																"src": "1672:34:6"
															},
															"nativeSrc": "1672:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "1672:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1603:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1650:5:6",
														"nodeType": "YulTypedName",
														"src": "1650:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1657:3:6",
														"nodeType": "YulTypedName",
														"src": "1657:3:6",
														"type": ""
													}
												],
												"src": "1603:109:6"
											},
											{
												"body": {
													"nativeSrc": "1922:448:6",
													"nodeType": "YulBlock",
													"src": "1922:448:6",
													"statements": [
														{
															"nativeSrc": "1932:27:6",
															"nodeType": "YulAssignment",
															"src": "1932:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1944:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1944:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1955:3:6",
																		"nodeType": "YulLiteral",
																		"src": "1955:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1940:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1940:3:6"
																},
																"nativeSrc": "1940:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1940:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1932:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1932:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2013:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2013:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2026:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2026:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2037:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2037:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2022:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2022:3:6"
																		},
																		"nativeSrc": "2022:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2022:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1969:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1969:43:6"
																},
																"nativeSrc": "1969:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1969:71:6"
															},
															"nativeSrc": "1969:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1969:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2094:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2094:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2107:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2107:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2118:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2118:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2103:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2103:3:6"
																		},
																		"nativeSrc": "2103:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2103:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2050:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2050:43:6"
																},
																"nativeSrc": "2050:72:6",
																"nodeType": "YulFunctionCall",
																"src": "2050:72:6"
															},
															"nativeSrc": "2050:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "2050:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2189:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2189:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2200:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2200:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2185:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2185:3:6"
																		},
																		"nativeSrc": "2185:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2185:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2132:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2132:43:6"
																},
																"nativeSrc": "2132:72:6",
																"nodeType": "YulFunctionCall",
																"src": "2132:72:6"
															},
															"nativeSrc": "2132:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "2132:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "2258:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2258:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2271:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2271:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2282:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2282:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2267:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2267:3:6"
																		},
																		"nativeSrc": "2267:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2267:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2214:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2214:43:6"
																},
																"nativeSrc": "2214:72:6",
																"nodeType": "YulFunctionCall",
																"src": "2214:72:6"
															},
															"nativeSrc": "2214:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "2214:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "2334:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2334:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2347:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2347:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2358:3:6",
																				"nodeType": "YulLiteral",
																				"src": "2358:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2343:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2343:3:6"
																		},
																		"nativeSrc": "2343:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2343:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2296:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "2296:37:6"
																},
																"nativeSrc": "2296:67:6",
																"nodeType": "YulFunctionCall",
																"src": "2296:67:6"
															},
															"nativeSrc": "2296:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "2296:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "1718:652:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1862:9:6",
														"nodeType": "YulTypedName",
														"src": "1862:9:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1874:6:6",
														"nodeType": "YulTypedName",
														"src": "1874:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1882:6:6",
														"nodeType": "YulTypedName",
														"src": "1882:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1890:6:6",
														"nodeType": "YulTypedName",
														"src": "1890:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1898:6:6",
														"nodeType": "YulTypedName",
														"src": "1898:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1906:6:6",
														"nodeType": "YulTypedName",
														"src": "1906:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1917:4:6",
														"nodeType": "YulTypedName",
														"src": "1917:4:6",
														"type": ""
													}
												],
												"src": "1718:652:6"
											},
											{
												"body": {
													"nativeSrc": "2474:124:6",
													"nodeType": "YulBlock",
													"src": "2474:124:6",
													"statements": [
														{
															"nativeSrc": "2484:26:6",
															"nodeType": "YulAssignment",
															"src": "2484:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2496:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2496:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2507:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2507:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2492:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2492:3:6"
																},
																"nativeSrc": "2492:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2492:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2484:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2484:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2564:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2564:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2577:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2577:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2588:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2588:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2573:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:6"
																		},
																		"nativeSrc": "2573:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2573:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2520:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2520:43:6"
																},
																"nativeSrc": "2520:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2520:71:6"
															},
															"nativeSrc": "2520:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2520:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2376:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2446:9:6",
														"nodeType": "YulTypedName",
														"src": "2446:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2458:6:6",
														"nodeType": "YulTypedName",
														"src": "2458:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2469:4:6",
														"nodeType": "YulTypedName",
														"src": "2469:4:6",
														"type": ""
													}
												],
												"src": "2376:222:6"
											},
											{
												"body": {
													"nativeSrc": "2647:79:6",
													"nodeType": "YulBlock",
													"src": "2647:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2704:16:6",
																"nodeType": "YulBlock",
																"src": "2704:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2713:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2713:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2716:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2716:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2706:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2706:6:6"
																			},
																			"nativeSrc": "2706:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2706:12:6"
																		},
																		"nativeSrc": "2706:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2706:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2670:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2670:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2695:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2695:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2677:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2677:17:6"
																				},
																				"nativeSrc": "2677:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2677:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2667:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2667:2:6"
																		},
																		"nativeSrc": "2667:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2667:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2660:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2660:6:6"
																},
																"nativeSrc": "2660:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2660:43:6"
															},
															"nativeSrc": "2657:63:6",
															"nodeType": "YulIf",
															"src": "2657:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2604:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2640:5:6",
														"nodeType": "YulTypedName",
														"src": "2640:5:6",
														"type": ""
													}
												],
												"src": "2604:122:6"
											},
											{
												"body": {
													"nativeSrc": "2784:87:6",
													"nodeType": "YulBlock",
													"src": "2784:87:6",
													"statements": [
														{
															"nativeSrc": "2794:29:6",
															"nodeType": "YulAssignment",
															"src": "2794:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2816:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2816:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2803:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2803:12:6"
																},
																"nativeSrc": "2803:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2803:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2794:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2794:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2859:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2859:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2832:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2832:26:6"
																},
																"nativeSrc": "2832:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2832:33:6"
															},
															"nativeSrc": "2832:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2832:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2732:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2762:6:6",
														"nodeType": "YulTypedName",
														"src": "2762:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2770:3:6",
														"nodeType": "YulTypedName",
														"src": "2770:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2778:5:6",
														"nodeType": "YulTypedName",
														"src": "2778:5:6",
														"type": ""
													}
												],
												"src": "2732:139:6"
											},
											{
												"body": {
													"nativeSrc": "2960:391:6",
													"nodeType": "YulBlock",
													"src": "2960:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3006:83:6",
																"nodeType": "YulBlock",
																"src": "3006:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3008:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3008:77:6"
																			},
																			"nativeSrc": "3008:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3008:79:6"
																		},
																		"nativeSrc": "3008:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3008:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2981:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2981:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2990:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2990:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2977:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2977:3:6"
																		},
																		"nativeSrc": "2977:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2977:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3002:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3002:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2973:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2973:3:6"
																},
																"nativeSrc": "2973:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2973:32:6"
															},
															"nativeSrc": "2970:119:6",
															"nodeType": "YulIf",
															"src": "2970:119:6"
														},
														{
															"nativeSrc": "3099:117:6",
															"nodeType": "YulBlock",
															"src": "3099:117:6",
															"statements": [
																{
																	"nativeSrc": "3114:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3114:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3128:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3128:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3118:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3118:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3143:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3143:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3178:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3178:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3189:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3189:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3174:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3174:3:6"
																				},
																				"nativeSrc": "3174:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3174:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3198:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3198:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3153:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3153:20:6"
																		},
																		"nativeSrc": "3153:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3143:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3143:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3226:118:6",
															"nodeType": "YulBlock",
															"src": "3226:118:6",
															"statements": [
																{
																	"nativeSrc": "3241:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3241:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3255:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3255:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3245:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3245:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3271:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3271:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3306:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3306:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3317:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3317:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3302:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3302:3:6"
																				},
																				"nativeSrc": "3302:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3302:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3326:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3326:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3281:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3281:20:6"
																		},
																		"nativeSrc": "3281:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3281:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3271:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3271:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2877:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2922:9:6",
														"nodeType": "YulTypedName",
														"src": "2922:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2933:7:6",
														"nodeType": "YulTypedName",
														"src": "2933:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2945:6:6",
														"nodeType": "YulTypedName",
														"src": "2945:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2953:6:6",
														"nodeType": "YulTypedName",
														"src": "2953:6:6",
														"type": ""
													}
												],
												"src": "2877:474:6"
											},
											{
												"body": {
													"nativeSrc": "3389:28:6",
													"nodeType": "YulBlock",
													"src": "3389:28:6",
													"statements": [
														{
															"nativeSrc": "3399:12:6",
															"nodeType": "YulAssignment",
															"src": "3399:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3406:5:6",
																"nodeType": "YulIdentifier",
																"src": "3406:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3399:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3399:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3357:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3375:5:6",
														"nodeType": "YulTypedName",
														"src": "3375:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3385:3:6",
														"nodeType": "YulTypedName",
														"src": "3385:3:6",
														"type": ""
													}
												],
												"src": "3357:60:6"
											},
											{
												"body": {
													"nativeSrc": "3483:82:6",
													"nodeType": "YulBlock",
													"src": "3483:82:6",
													"statements": [
														{
															"nativeSrc": "3493:66:6",
															"nodeType": "YulAssignment",
															"src": "3493:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3551:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3551:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3533:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3533:17:6"
																				},
																				"nativeSrc": "3533:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3533:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3524:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "3524:8:6"
																		},
																		"nativeSrc": "3524:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3524:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3506:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3506:17:6"
																},
																"nativeSrc": "3506:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3506:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3493:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3493:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3423:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3463:5:6",
														"nodeType": "YulTypedName",
														"src": "3463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3473:9:6",
														"nodeType": "YulTypedName",
														"src": "3473:9:6",
														"type": ""
													}
												],
												"src": "3423:142:6"
											},
											{
												"body": {
													"nativeSrc": "3631:66:6",
													"nodeType": "YulBlock",
													"src": "3631:66:6",
													"statements": [
														{
															"nativeSrc": "3641:50:6",
															"nodeType": "YulAssignment",
															"src": "3641:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3685:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3685:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3654:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3654:30:6"
																},
																"nativeSrc": "3654:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3654:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3641:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3641:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3571:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3611:5:6",
														"nodeType": "YulTypedName",
														"src": "3611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3621:9:6",
														"nodeType": "YulTypedName",
														"src": "3621:9:6",
														"type": ""
													}
												],
												"src": "3571:126:6"
											},
											{
												"body": {
													"nativeSrc": "3776:66:6",
													"nodeType": "YulBlock",
													"src": "3776:66:6",
													"statements": [
														{
															"nativeSrc": "3786:50:6",
															"nodeType": "YulAssignment",
															"src": "3786:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3830:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3830:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3799:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3799:30:6"
																},
																"nativeSrc": "3799:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3799:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3786:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3786:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$651_to_t_address",
												"nativeSrc": "3703:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3756:5:6",
														"nodeType": "YulTypedName",
														"src": "3756:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3766:9:6",
														"nodeType": "YulTypedName",
														"src": "3766:9:6",
														"type": ""
													}
												],
												"src": "3703:139:6"
											},
											{
												"body": {
													"nativeSrc": "3926:79:6",
													"nodeType": "YulBlock",
													"src": "3926:79:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3943:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3943:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3992:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3992:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$651_to_t_address",
																			"nativeSrc": "3948:43:6",
																			"nodeType": "YulIdentifier",
																			"src": "3948:43:6"
																		},
																		"nativeSrc": "3948:50:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3948:50:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3936:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3936:6:6"
																},
																"nativeSrc": "3936:63:6",
																"nodeType": "YulFunctionCall",
																"src": "3936:63:6"
															},
															"nativeSrc": "3936:63:6",
															"nodeType": "YulExpressionStatement",
															"src": "3936:63:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
												"nativeSrc": "3848:157:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3914:5:6",
														"nodeType": "YulTypedName",
														"src": "3914:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3921:3:6",
														"nodeType": "YulTypedName",
														"src": "3921:3:6",
														"type": ""
													}
												],
												"src": "3848:157:6"
											},
											{
												"body": {
													"nativeSrc": "4122:137:6",
													"nodeType": "YulBlock",
													"src": "4122:137:6",
													"statements": [
														{
															"nativeSrc": "4132:26:6",
															"nodeType": "YulAssignment",
															"src": "4132:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4144:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4144:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4155:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4155:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4140:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4140:3:6"
																},
																"nativeSrc": "4140:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4140:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4132:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4132:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4225:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4225:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4238:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4238:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4249:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4249:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4234:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4234:3:6"
																		},
																		"nativeSrc": "4234:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4234:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
																	"nativeSrc": "4168:56:6",
																	"nodeType": "YulIdentifier",
																	"src": "4168:56:6"
																},
																"nativeSrc": "4168:84:6",
																"nodeType": "YulFunctionCall",
																"src": "4168:84:6"
															},
															"nativeSrc": "4168:84:6",
															"nodeType": "YulExpressionStatement",
															"src": "4168:84:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed",
												"nativeSrc": "4011:248:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4094:9:6",
														"nodeType": "YulTypedName",
														"src": "4094:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4106:6:6",
														"nodeType": "YulTypedName",
														"src": "4106:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4117:4:6",
														"nodeType": "YulTypedName",
														"src": "4117:4:6",
														"type": ""
													}
												],
												"src": "4011:248:6"
											},
											{
												"body": {
													"nativeSrc": "4361:73:6",
													"nodeType": "YulBlock",
													"src": "4361:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4378:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4378:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4383:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4383:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4371:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4371:6:6"
																},
																"nativeSrc": "4371:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4371:19:6"
															},
															"nativeSrc": "4371:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "4371:19:6"
														},
														{
															"nativeSrc": "4399:29:6",
															"nodeType": "YulAssignment",
															"src": "4399:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4418:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4418:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4423:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4423:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4414:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4414:3:6"
																},
																"nativeSrc": "4414:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4414:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4399:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "4399:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4265:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4333:3:6",
														"nodeType": "YulTypedName",
														"src": "4333:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4338:6:6",
														"nodeType": "YulTypedName",
														"src": "4338:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4349:11:6",
														"nodeType": "YulTypedName",
														"src": "4349:11:6",
														"type": ""
													}
												],
												"src": "4265:169:6"
											},
											{
												"body": {
													"nativeSrc": "4546:67:6",
													"nodeType": "YulBlock",
													"src": "4546:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4568:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4568:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4576:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4576:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4564:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4564:3:6"
																		},
																		"nativeSrc": "4564:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4564:14:6"
																	},
																	{
																		"hexValue": "596f75206861766520616e206f70656e206c6f616e2021",
																		"kind": "string",
																		"nativeSrc": "4580:25:6",
																		"nodeType": "YulLiteral",
																		"src": "4580:25:6",
																		"type": "",
																		"value": "You have an open loan !"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4557:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4557:6:6"
																},
																"nativeSrc": "4557:49:6",
																"nodeType": "YulFunctionCall",
																"src": "4557:49:6"
															},
															"nativeSrc": "4557:49:6",
															"nodeType": "YulExpressionStatement",
															"src": "4557:49:6"
														}
													]
												},
												"name": "store_literal_in_memory_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606",
												"nativeSrc": "4440:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4538:6:6",
														"nodeType": "YulTypedName",
														"src": "4538:6:6",
														"type": ""
													}
												],
												"src": "4440:173:6"
											},
											{
												"body": {
													"nativeSrc": "4765:220:6",
													"nodeType": "YulBlock",
													"src": "4765:220:6",
													"statements": [
														{
															"nativeSrc": "4775:74:6",
															"nodeType": "YulAssignment",
															"src": "4775:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4841:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4841:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4846:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4846:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4782:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "4782:58:6"
																},
																"nativeSrc": "4782:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4782:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4775:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4775:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4947:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4947:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606",
																	"nativeSrc": "4858:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "4858:88:6"
																},
																"nativeSrc": "4858:93:6",
																"nodeType": "YulFunctionCall",
																"src": "4858:93:6"
															},
															"nativeSrc": "4858:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "4858:93:6"
														},
														{
															"nativeSrc": "4960:19:6",
															"nodeType": "YulAssignment",
															"src": "4960:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4971:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4971:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4976:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4976:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4967:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4967:3:6"
																},
																"nativeSrc": "4967:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4967:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4960:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4960:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4619:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4753:3:6",
														"nodeType": "YulTypedName",
														"src": "4753:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4761:3:6",
														"nodeType": "YulTypedName",
														"src": "4761:3:6",
														"type": ""
													}
												],
												"src": "4619:366:6"
											},
											{
												"body": {
													"nativeSrc": "5162:248:6",
													"nodeType": "YulBlock",
													"src": "5162:248:6",
													"statements": [
														{
															"nativeSrc": "5172:26:6",
															"nodeType": "YulAssignment",
															"src": "5172:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5184:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5184:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5195:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5195:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5180:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5180:3:6"
																},
																"nativeSrc": "5180:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5180:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5172:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5172:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5219:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5219:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5230:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5230:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5215:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5215:3:6"
																		},
																		"nativeSrc": "5215:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5215:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5238:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5238:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5244:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5244:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5234:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5234:3:6"
																		},
																		"nativeSrc": "5234:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5234:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5208:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5208:6:6"
																},
																"nativeSrc": "5208:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5208:47:6"
															},
															"nativeSrc": "5208:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "5208:47:6"
														},
														{
															"nativeSrc": "5264:139:6",
															"nodeType": "YulAssignment",
															"src": "5264:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5398:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5398:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5272:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "5272:124:6"
																},
																"nativeSrc": "5272:131:6",
																"nodeType": "YulFunctionCall",
																"src": "5272:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5264:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5264:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4991:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5142:9:6",
														"nodeType": "YulTypedName",
														"src": "5142:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5157:4:6",
														"nodeType": "YulTypedName",
														"src": "5157:4:6",
														"type": ""
													}
												],
												"src": "4991:419:6"
											},
											{
												"body": {
													"nativeSrc": "5444:152:6",
													"nodeType": "YulBlock",
													"src": "5444:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5461:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5461:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5464:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5464:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5454:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5454:6:6"
																},
																"nativeSrc": "5454:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5454:88:6"
															},
															"nativeSrc": "5454:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5454:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5558:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5558:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5561:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5561:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5551:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5551:6:6"
																},
																"nativeSrc": "5551:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5551:15:6"
															},
															"nativeSrc": "5551:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5551:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5582:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5582:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5585:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5585:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5575:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5575:6:6"
																},
																"nativeSrc": "5575:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5575:15:6"
															},
															"nativeSrc": "5575:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5575:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5416:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5416:180:6"
											},
											{
												"body": {
													"nativeSrc": "5650:362:6",
													"nodeType": "YulBlock",
													"src": "5650:362:6",
													"statements": [
														{
															"nativeSrc": "5660:25:6",
															"nodeType": "YulAssignment",
															"src": "5660:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5683:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5683:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5665:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5665:17:6"
																},
																"nativeSrc": "5665:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5665:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5660:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5660:1:6"
																}
															]
														},
														{
															"nativeSrc": "5694:25:6",
															"nodeType": "YulAssignment",
															"src": "5694:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5717:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5717:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5699:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5699:17:6"
																},
																"nativeSrc": "5699:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5699:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5694:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5694:1:6"
																}
															]
														},
														{
															"nativeSrc": "5728:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5728:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5751:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5751:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5754:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5754:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5747:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5747:3:6"
																},
																"nativeSrc": "5747:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5747:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "5732:11:6",
																	"nodeType": "YulTypedName",
																	"src": "5732:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5765:41:6",
															"nodeType": "YulAssignment",
															"src": "5765:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "5794:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "5794:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5776:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5776:17:6"
																},
																"nativeSrc": "5776:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5776:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5765:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5765:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5983:22:6",
																"nodeType": "YulBlock",
																"src": "5983:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5985:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5985:16:6"
																			},
																			"nativeSrc": "5985:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5985:18:6"
																		},
																		"nativeSrc": "5985:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5985:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5916:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5916:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5909:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5909:6:6"
																				},
																				"nativeSrc": "5909:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5909:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5939:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5939:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5946:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "5946:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5955:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "5955:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5942:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5942:3:6"
																						},
																						"nativeSrc": "5942:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5942:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5936:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5936:2:6"
																				},
																				"nativeSrc": "5936:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5936:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5889:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5889:2:6"
																		},
																		"nativeSrc": "5889:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5889:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5869:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5869:6:6"
																},
																"nativeSrc": "5869:113:6",
																"nodeType": "YulFunctionCall",
																"src": "5869:113:6"
															},
															"nativeSrc": "5866:139:6",
															"nodeType": "YulIf",
															"src": "5866:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5602:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5633:1:6",
														"nodeType": "YulTypedName",
														"src": "5633:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5636:1:6",
														"nodeType": "YulTypedName",
														"src": "5636:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5642:7:6",
														"nodeType": "YulTypedName",
														"src": "5642:7:6",
														"type": ""
													}
												],
												"src": "5602:410:6"
											},
											{
												"body": {
													"nativeSrc": "6046:152:6",
													"nodeType": "YulBlock",
													"src": "6046:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6063:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6063:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6066:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6066:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6056:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6056:6:6"
																},
																"nativeSrc": "6056:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6056:88:6"
															},
															"nativeSrc": "6056:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6056:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6160:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6160:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6163:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6163:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6153:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6153:6:6"
																},
																"nativeSrc": "6153:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6153:15:6"
															},
															"nativeSrc": "6153:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6153:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6184:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6184:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6187:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6187:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6177:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6177:6:6"
																},
																"nativeSrc": "6177:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6177:15:6"
															},
															"nativeSrc": "6177:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6177:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6018:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6018:180:6"
											},
											{
												"body": {
													"nativeSrc": "6246:143:6",
													"nodeType": "YulBlock",
													"src": "6246:143:6",
													"statements": [
														{
															"nativeSrc": "6256:25:6",
															"nodeType": "YulAssignment",
															"src": "6256:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6279:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6279:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6261:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6261:17:6"
																},
																"nativeSrc": "6261:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6261:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6256:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6256:1:6"
																}
															]
														},
														{
															"nativeSrc": "6290:25:6",
															"nodeType": "YulAssignment",
															"src": "6290:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6313:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6313:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6295:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6295:17:6"
																},
																"nativeSrc": "6295:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6295:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6290:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6290:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6337:22:6",
																"nodeType": "YulBlock",
																"src": "6337:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "6339:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6339:16:6"
																			},
																			"nativeSrc": "6339:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6339:18:6"
																		},
																		"nativeSrc": "6339:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6339:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6334:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6334:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6327:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6327:6:6"
																},
																"nativeSrc": "6327:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6327:9:6"
															},
															"nativeSrc": "6324:35:6",
															"nodeType": "YulIf",
															"src": "6324:35:6"
														},
														{
															"nativeSrc": "6369:14:6",
															"nodeType": "YulAssignment",
															"src": "6369:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6378:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6378:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6381:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6381:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6374:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6374:3:6"
																},
																"nativeSrc": "6374:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6374:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6369:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6369:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6204:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6235:1:6",
														"nodeType": "YulTypedName",
														"src": "6235:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6238:1:6",
														"nodeType": "YulTypedName",
														"src": "6238:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6244:1:6",
														"nodeType": "YulTypedName",
														"src": "6244:1:6",
														"type": ""
													}
												],
												"src": "6204:185:6"
											},
											{
												"body": {
													"nativeSrc": "6501:67:6",
													"nodeType": "YulBlock",
													"src": "6501:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6523:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6523:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6531:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6531:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6519:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6519:3:6"
																		},
																		"nativeSrc": "6519:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6519:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420436f6c6c61746572616c",
																		"kind": "string",
																		"nativeSrc": "6535:25:6",
																		"nodeType": "YulLiteral",
																		"src": "6535:25:6",
																		"type": "",
																		"value": "Insufficient Collateral"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6512:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6512:6:6"
																},
																"nativeSrc": "6512:49:6",
																"nodeType": "YulFunctionCall",
																"src": "6512:49:6"
															},
															"nativeSrc": "6512:49:6",
															"nodeType": "YulExpressionStatement",
															"src": "6512:49:6"
														}
													]
												},
												"name": "store_literal_in_memory_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5",
												"nativeSrc": "6395:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6493:6:6",
														"nodeType": "YulTypedName",
														"src": "6493:6:6",
														"type": ""
													}
												],
												"src": "6395:173:6"
											},
											{
												"body": {
													"nativeSrc": "6720:220:6",
													"nodeType": "YulBlock",
													"src": "6720:220:6",
													"statements": [
														{
															"nativeSrc": "6730:74:6",
															"nodeType": "YulAssignment",
															"src": "6730:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6796:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6796:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6801:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6801:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6737:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6737:58:6"
																},
																"nativeSrc": "6737:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6737:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6730:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6730:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6902:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6902:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5",
																	"nativeSrc": "6813:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6813:88:6"
																},
																"nativeSrc": "6813:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6813:93:6"
															},
															"nativeSrc": "6813:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6813:93:6"
														},
														{
															"nativeSrc": "6915:19:6",
															"nodeType": "YulAssignment",
															"src": "6915:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6926:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6926:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6931:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6931:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6922:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6922:3:6"
																},
																"nativeSrc": "6922:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6922:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6915:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6915:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6574:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6708:3:6",
														"nodeType": "YulTypedName",
														"src": "6708:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6716:3:6",
														"nodeType": "YulTypedName",
														"src": "6716:3:6",
														"type": ""
													}
												],
												"src": "6574:366:6"
											},
											{
												"body": {
													"nativeSrc": "7117:248:6",
													"nodeType": "YulBlock",
													"src": "7117:248:6",
													"statements": [
														{
															"nativeSrc": "7127:26:6",
															"nodeType": "YulAssignment",
															"src": "7127:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7139:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7139:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7150:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7150:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7135:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7135:3:6"
																},
																"nativeSrc": "7135:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7135:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7127:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7127:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7174:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7174:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7185:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7185:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7170:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7170:3:6"
																		},
																		"nativeSrc": "7170:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7170:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7193:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7193:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7199:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7199:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7189:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7189:3:6"
																		},
																		"nativeSrc": "7189:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7189:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7163:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7163:6:6"
																},
																"nativeSrc": "7163:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7163:47:6"
															},
															"nativeSrc": "7163:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7163:47:6"
														},
														{
															"nativeSrc": "7219:139:6",
															"nodeType": "YulAssignment",
															"src": "7219:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7353:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7353:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7227:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7227:124:6"
																},
																"nativeSrc": "7227:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7227:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7219:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7219:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6946:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7097:9:6",
														"nodeType": "YulTypedName",
														"src": "7097:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7112:4:6",
														"nodeType": "YulTypedName",
														"src": "7112:4:6",
														"type": ""
													}
												],
												"src": "6946:419:6"
											},
											{
												"body": {
													"nativeSrc": "7477:59:6",
													"nodeType": "YulBlock",
													"src": "7477:59:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7499:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7499:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7507:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7507:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7495:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7495:3:6"
																		},
																		"nativeSrc": "7495:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7495:14:6"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "7511:17:6",
																		"nodeType": "YulLiteral",
																		"src": "7511:17:6",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7488:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7488:6:6"
																},
																"nativeSrc": "7488:41:6",
																"nodeType": "YulFunctionCall",
																"src": "7488:41:6"
															},
															"nativeSrc": "7488:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "7488:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "7371:165:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7469:6:6",
														"nodeType": "YulTypedName",
														"src": "7469:6:6",
														"type": ""
													}
												],
												"src": "7371:165:6"
											},
											{
												"body": {
													"nativeSrc": "7688:220:6",
													"nodeType": "YulBlock",
													"src": "7688:220:6",
													"statements": [
														{
															"nativeSrc": "7698:74:6",
															"nodeType": "YulAssignment",
															"src": "7698:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7764:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7764:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7769:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7769:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7705:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7705:58:6"
																},
																"nativeSrc": "7705:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7705:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7698:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7698:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7870:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7870:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "7781:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7781:88:6"
																},
																"nativeSrc": "7781:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7781:93:6"
															},
															"nativeSrc": "7781:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7781:93:6"
														},
														{
															"nativeSrc": "7883:19:6",
															"nodeType": "YulAssignment",
															"src": "7883:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7894:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7894:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7899:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7899:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7890:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7890:3:6"
																},
																"nativeSrc": "7890:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7890:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7883:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7883:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7542:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7676:3:6",
														"nodeType": "YulTypedName",
														"src": "7676:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7684:3:6",
														"nodeType": "YulTypedName",
														"src": "7684:3:6",
														"type": ""
													}
												],
												"src": "7542:366:6"
											},
											{
												"body": {
													"nativeSrc": "8085:248:6",
													"nodeType": "YulBlock",
													"src": "8085:248:6",
													"statements": [
														{
															"nativeSrc": "8095:26:6",
															"nodeType": "YulAssignment",
															"src": "8095:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8107:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8107:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8118:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8118:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8103:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8103:3:6"
																},
																"nativeSrc": "8103:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8103:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8095:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8095:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8142:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8142:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8153:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8153:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8138:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8138:3:6"
																		},
																		"nativeSrc": "8138:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8138:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8161:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8161:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8167:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8167:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8157:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8157:3:6"
																		},
																		"nativeSrc": "8157:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8157:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8131:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8131:6:6"
																},
																"nativeSrc": "8131:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8131:47:6"
															},
															"nativeSrc": "8131:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8131:47:6"
														},
														{
															"nativeSrc": "8187:139:6",
															"nodeType": "YulAssignment",
															"src": "8187:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8321:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8321:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8195:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8195:124:6"
																},
																"nativeSrc": "8195:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8195:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8187:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8187:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7914:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8065:9:6",
														"nodeType": "YulTypedName",
														"src": "8065:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8080:4:6",
														"nodeType": "YulTypedName",
														"src": "8080:4:6",
														"type": ""
													}
												],
												"src": "7914:419:6"
											},
											{
												"body": {
													"nativeSrc": "8465:206:6",
													"nodeType": "YulBlock",
													"src": "8465:206:6",
													"statements": [
														{
															"nativeSrc": "8475:26:6",
															"nodeType": "YulAssignment",
															"src": "8475:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8487:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8487:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8498:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8498:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8483:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8483:3:6"
																},
																"nativeSrc": "8483:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8483:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8475:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8475:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8555:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8555:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8568:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8568:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8579:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8579:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8564:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8564:3:6"
																		},
																		"nativeSrc": "8564:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8564:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8511:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8511:43:6"
																},
																"nativeSrc": "8511:71:6",
																"nodeType": "YulFunctionCall",
																"src": "8511:71:6"
															},
															"nativeSrc": "8511:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "8511:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8636:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8636:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8649:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8649:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8660:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8660:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8645:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8645:3:6"
																		},
																		"nativeSrc": "8645:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8645:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8592:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8592:43:6"
																},
																"nativeSrc": "8592:72:6",
																"nodeType": "YulFunctionCall",
																"src": "8592:72:6"
															},
															"nativeSrc": "8592:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "8592:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8339:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8429:9:6",
														"nodeType": "YulTypedName",
														"src": "8429:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8441:6:6",
														"nodeType": "YulTypedName",
														"src": "8441:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8449:6:6",
														"nodeType": "YulTypedName",
														"src": "8449:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8460:4:6",
														"nodeType": "YulTypedName",
														"src": "8460:4:6",
														"type": ""
													}
												],
												"src": "8339:332:6"
											},
											{
												"body": {
													"nativeSrc": "8783:58:6",
													"nodeType": "YulBlock",
													"src": "8783:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8805:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8805:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8813:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8813:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8801:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8801:3:6"
																		},
																		"nativeSrc": "8801:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8801:14:6"
																	},
																	{
																		"hexValue": "4e6f20616374697665206c6f616e",
																		"kind": "string",
																		"nativeSrc": "8817:16:6",
																		"nodeType": "YulLiteral",
																		"src": "8817:16:6",
																		"type": "",
																		"value": "No active loan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8794:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8794:6:6"
																},
																"nativeSrc": "8794:40:6",
																"nodeType": "YulFunctionCall",
																"src": "8794:40:6"
															},
															"nativeSrc": "8794:40:6",
															"nodeType": "YulExpressionStatement",
															"src": "8794:40:6"
														}
													]
												},
												"name": "store_literal_in_memory_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba",
												"nativeSrc": "8677:164:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8775:6:6",
														"nodeType": "YulTypedName",
														"src": "8775:6:6",
														"type": ""
													}
												],
												"src": "8677:164:6"
											},
											{
												"body": {
													"nativeSrc": "8993:220:6",
													"nodeType": "YulBlock",
													"src": "8993:220:6",
													"statements": [
														{
															"nativeSrc": "9003:74:6",
															"nodeType": "YulAssignment",
															"src": "9003:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9069:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9069:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9074:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9010:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9010:58:6"
																},
																"nativeSrc": "9010:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9010:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9003:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9003:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9175:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9175:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba",
																	"nativeSrc": "9086:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9086:88:6"
																},
																"nativeSrc": "9086:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9086:93:6"
															},
															"nativeSrc": "9086:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9086:93:6"
														},
														{
															"nativeSrc": "9188:19:6",
															"nodeType": "YulAssignment",
															"src": "9188:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9199:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9199:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9204:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9204:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9195:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9195:3:6"
																},
																"nativeSrc": "9195:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9195:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9188:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9188:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8847:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8981:3:6",
														"nodeType": "YulTypedName",
														"src": "8981:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8989:3:6",
														"nodeType": "YulTypedName",
														"src": "8989:3:6",
														"type": ""
													}
												],
												"src": "8847:366:6"
											},
											{
												"body": {
													"nativeSrc": "9390:248:6",
													"nodeType": "YulBlock",
													"src": "9390:248:6",
													"statements": [
														{
															"nativeSrc": "9400:26:6",
															"nodeType": "YulAssignment",
															"src": "9400:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9412:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9412:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9423:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9423:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9408:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9408:3:6"
																},
																"nativeSrc": "9408:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9408:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9400:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9400:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9447:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9447:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9458:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9458:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9443:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9443:3:6"
																		},
																		"nativeSrc": "9443:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9443:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9466:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9466:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9472:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9472:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9462:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9462:3:6"
																		},
																		"nativeSrc": "9462:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9462:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9436:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9436:6:6"
																},
																"nativeSrc": "9436:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9436:47:6"
															},
															"nativeSrc": "9436:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9436:47:6"
														},
														{
															"nativeSrc": "9492:139:6",
															"nodeType": "YulAssignment",
															"src": "9492:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9626:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9626:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9500:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9500:124:6"
																},
																"nativeSrc": "9500:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9500:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9492:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9492:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9219:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9370:9:6",
														"nodeType": "YulTypedName",
														"src": "9370:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9385:4:6",
														"nodeType": "YulTypedName",
														"src": "9385:4:6",
														"type": ""
													}
												],
												"src": "9219:419:6"
											},
											{
												"body": {
													"nativeSrc": "9750:118:6",
													"nodeType": "YulBlock",
													"src": "9750:118:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9772:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9772:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9780:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9780:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9768:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9768:3:6"
																		},
																		"nativeSrc": "9768:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9768:14:6"
																	},
																	{
																		"hexValue": "436f6c6c61746572616c697a6174696f6e20726174696f2061626f7665206d69",
																		"kind": "string",
																		"nativeSrc": "9784:34:6",
																		"nodeType": "YulLiteral",
																		"src": "9784:34:6",
																		"type": "",
																		"value": "Collateralization ratio above mi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9761:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9761:6:6"
																},
																"nativeSrc": "9761:58:6",
																"nodeType": "YulFunctionCall",
																"src": "9761:58:6"
															},
															"nativeSrc": "9761:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "9761:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9840:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9840:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9848:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9848:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9836:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9836:3:6"
																		},
																		"nativeSrc": "9836:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9836:15:6"
																	},
																	{
																		"hexValue": "6e696d756d",
																		"kind": "string",
																		"nativeSrc": "9853:7:6",
																		"nodeType": "YulLiteral",
																		"src": "9853:7:6",
																		"type": "",
																		"value": "nimum"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9829:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9829:6:6"
																},
																"nativeSrc": "9829:32:6",
																"nodeType": "YulFunctionCall",
																"src": "9829:32:6"
															},
															"nativeSrc": "9829:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "9829:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d",
												"nativeSrc": "9644:224:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9742:6:6",
														"nodeType": "YulTypedName",
														"src": "9742:6:6",
														"type": ""
													}
												],
												"src": "9644:224:6"
											},
											{
												"body": {
													"nativeSrc": "10020:220:6",
													"nodeType": "YulBlock",
													"src": "10020:220:6",
													"statements": [
														{
															"nativeSrc": "10030:74:6",
															"nodeType": "YulAssignment",
															"src": "10030:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10096:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10096:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10101:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10101:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10037:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10037:58:6"
																},
																"nativeSrc": "10037:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10037:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10030:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10030:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10202:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10202:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d",
																	"nativeSrc": "10113:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10113:88:6"
																},
																"nativeSrc": "10113:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10113:93:6"
															},
															"nativeSrc": "10113:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10113:93:6"
														},
														{
															"nativeSrc": "10215:19:6",
															"nodeType": "YulAssignment",
															"src": "10215:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10226:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10226:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10231:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10231:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10222:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10222:3:6"
																},
																"nativeSrc": "10222:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10222:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10215:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10215:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9874:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10008:3:6",
														"nodeType": "YulTypedName",
														"src": "10008:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10016:3:6",
														"nodeType": "YulTypedName",
														"src": "10016:3:6",
														"type": ""
													}
												],
												"src": "9874:366:6"
											},
											{
												"body": {
													"nativeSrc": "10417:248:6",
													"nodeType": "YulBlock",
													"src": "10417:248:6",
													"statements": [
														{
															"nativeSrc": "10427:26:6",
															"nodeType": "YulAssignment",
															"src": "10427:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10439:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10439:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10450:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10450:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10435:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10435:3:6"
																},
																"nativeSrc": "10435:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10435:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10427:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10427:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10474:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10474:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10485:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10485:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10470:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10470:3:6"
																		},
																		"nativeSrc": "10470:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10470:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10493:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10493:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10499:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10499:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10489:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10489:3:6"
																		},
																		"nativeSrc": "10489:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10489:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10463:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10463:6:6"
																},
																"nativeSrc": "10463:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10463:47:6"
															},
															"nativeSrc": "10463:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10463:47:6"
														},
														{
															"nativeSrc": "10519:139:6",
															"nodeType": "YulAssignment",
															"src": "10519:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10653:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10653:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10527:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10527:124:6"
																},
																"nativeSrc": "10527:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10527:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10519:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10519:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10246:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10397:9:6",
														"nodeType": "YulTypedName",
														"src": "10397:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10412:4:6",
														"nodeType": "YulTypedName",
														"src": "10412:4:6",
														"type": ""
													}
												],
												"src": "10246:419:6"
											},
											{
												"body": {
													"nativeSrc": "10777:62:6",
													"nodeType": "YulBlock",
													"src": "10777:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10799:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10799:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10807:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10807:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10795:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10795:3:6"
																		},
																		"nativeSrc": "10795:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10795:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "10811:20:6",
																		"nodeType": "YulLiteral",
																		"src": "10811:20:6",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10788:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10788:6:6"
																},
																"nativeSrc": "10788:44:6",
																"nodeType": "YulFunctionCall",
																"src": "10788:44:6"
															},
															"nativeSrc": "10788:44:6",
															"nodeType": "YulExpressionStatement",
															"src": "10788:44:6"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "10671:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10769:6:6",
														"nodeType": "YulTypedName",
														"src": "10769:6:6",
														"type": ""
													}
												],
												"src": "10671:168:6"
											},
											{
												"body": {
													"nativeSrc": "10991:220:6",
													"nodeType": "YulBlock",
													"src": "10991:220:6",
													"statements": [
														{
															"nativeSrc": "11001:74:6",
															"nodeType": "YulAssignment",
															"src": "11001:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11067:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11067:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11072:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11072:2:6",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11008:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11008:58:6"
																},
																"nativeSrc": "11008:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11008:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11001:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11001:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11173:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11173:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "11084:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11084:88:6"
																},
																"nativeSrc": "11084:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11084:93:6"
															},
															"nativeSrc": "11084:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11084:93:6"
														},
														{
															"nativeSrc": "11186:19:6",
															"nodeType": "YulAssignment",
															"src": "11186:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11197:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11197:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11202:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11202:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11193:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11193:3:6"
																},
																"nativeSrc": "11193:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11193:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11186:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11186:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10845:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10979:3:6",
														"nodeType": "YulTypedName",
														"src": "10979:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10987:3:6",
														"nodeType": "YulTypedName",
														"src": "10987:3:6",
														"type": ""
													}
												],
												"src": "10845:366:6"
											},
											{
												"body": {
													"nativeSrc": "11388:248:6",
													"nodeType": "YulBlock",
													"src": "11388:248:6",
													"statements": [
														{
															"nativeSrc": "11398:26:6",
															"nodeType": "YulAssignment",
															"src": "11398:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11410:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11410:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11421:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11421:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11406:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11406:3:6"
																},
																"nativeSrc": "11406:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11406:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11398:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11398:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11445:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11445:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11456:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11456:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11441:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11441:3:6"
																		},
																		"nativeSrc": "11441:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11441:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11464:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11464:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11470:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11470:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11460:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11460:3:6"
																		},
																		"nativeSrc": "11460:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11460:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11434:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11434:6:6"
																},
																"nativeSrc": "11434:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11434:47:6"
															},
															"nativeSrc": "11434:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11434:47:6"
														},
														{
															"nativeSrc": "11490:139:6",
															"nodeType": "YulAssignment",
															"src": "11490:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11624:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11624:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11498:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11498:124:6"
																},
																"nativeSrc": "11498:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11498:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11490:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11490:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11217:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11368:9:6",
														"nodeType": "YulTypedName",
														"src": "11368:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11383:4:6",
														"nodeType": "YulTypedName",
														"src": "11383:4:6",
														"type": ""
													}
												],
												"src": "11217:419:6"
											},
											{
												"body": {
													"nativeSrc": "11768:206:6",
													"nodeType": "YulBlock",
													"src": "11768:206:6",
													"statements": [
														{
															"nativeSrc": "11778:26:6",
															"nodeType": "YulAssignment",
															"src": "11778:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11790:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11790:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11801:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11801:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11786:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11786:3:6"
																},
																"nativeSrc": "11786:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11786:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11778:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11778:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11858:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11858:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11871:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11871:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11882:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11882:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11867:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11867:3:6"
																		},
																		"nativeSrc": "11867:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11867:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11814:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11814:43:6"
																},
																"nativeSrc": "11814:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11814:71:6"
															},
															"nativeSrc": "11814:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11814:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11939:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11939:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11952:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11952:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11963:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11963:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11948:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11948:3:6"
																		},
																		"nativeSrc": "11948:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11948:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11895:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11895:43:6"
																},
																"nativeSrc": "11895:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11895:72:6"
															},
															"nativeSrc": "11895:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11895:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11642:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11732:9:6",
														"nodeType": "YulTypedName",
														"src": "11732:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11744:6:6",
														"nodeType": "YulTypedName",
														"src": "11744:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11752:6:6",
														"nodeType": "YulTypedName",
														"src": "11752:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11763:4:6",
														"nodeType": "YulTypedName",
														"src": "11763:4:6",
														"type": ""
													}
												],
												"src": "11642:332:6"
											},
											{
												"body": {
													"nativeSrc": "12020:76:6",
													"nodeType": "YulBlock",
													"src": "12020:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "12074:16:6",
																"nodeType": "YulBlock",
																"src": "12074:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12083:1:6",
																					"nodeType": "YulLiteral",
																					"src": "12083:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12086:1:6",
																					"nodeType": "YulLiteral",
																					"src": "12086:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12076:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12076:6:6"
																			},
																			"nativeSrc": "12076:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12076:12:6"
																		},
																		"nativeSrc": "12076:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12076:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12043:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "12043:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12065:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "12065:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12050:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "12050:14:6"
																				},
																				"nativeSrc": "12050:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12050:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12040:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "12040:2:6"
																		},
																		"nativeSrc": "12040:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12040:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12033:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12033:6:6"
																},
																"nativeSrc": "12033:40:6",
																"nodeType": "YulFunctionCall",
																"src": "12033:40:6"
															},
															"nativeSrc": "12030:60:6",
															"nodeType": "YulIf",
															"src": "12030:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "11980:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12013:5:6",
														"nodeType": "YulTypedName",
														"src": "12013:5:6",
														"type": ""
													}
												],
												"src": "11980:116:6"
											},
											{
												"body": {
													"nativeSrc": "12162:77:6",
													"nodeType": "YulBlock",
													"src": "12162:77:6",
													"statements": [
														{
															"nativeSrc": "12172:22:6",
															"nodeType": "YulAssignment",
															"src": "12172:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12187:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12187:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12181:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "12181:5:6"
																},
																"nativeSrc": "12181:13:6",
																"nodeType": "YulFunctionCall",
																"src": "12181:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12172:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "12172:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12227:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "12227:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12203:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "12203:23:6"
																},
																"nativeSrc": "12203:30:6",
																"nodeType": "YulFunctionCall",
																"src": "12203:30:6"
															},
															"nativeSrc": "12203:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "12203:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12102:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12140:6:6",
														"nodeType": "YulTypedName",
														"src": "12140:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12148:3:6",
														"nodeType": "YulTypedName",
														"src": "12148:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12156:5:6",
														"nodeType": "YulTypedName",
														"src": "12156:5:6",
														"type": ""
													}
												],
												"src": "12102:137:6"
											},
											{
												"body": {
													"nativeSrc": "12319:271:6",
													"nodeType": "YulBlock",
													"src": "12319:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "12365:83:6",
																"nodeType": "YulBlock",
																"src": "12365:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12367:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "12367:77:6"
																			},
																			"nativeSrc": "12367:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12367:79:6"
																		},
																		"nativeSrc": "12367:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12367:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12340:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12340:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12349:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12349:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12336:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12336:3:6"
																		},
																		"nativeSrc": "12336:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12336:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12361:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12361:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12332:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12332:3:6"
																},
																"nativeSrc": "12332:32:6",
																"nodeType": "YulFunctionCall",
																"src": "12332:32:6"
															},
															"nativeSrc": "12329:119:6",
															"nodeType": "YulIf",
															"src": "12329:119:6"
														},
														{
															"nativeSrc": "12458:125:6",
															"nodeType": "YulBlock",
															"src": "12458:125:6",
															"statements": [
																{
																	"nativeSrc": "12473:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12473:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12487:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12487:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12477:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12477:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12502:71:6",
																	"nodeType": "YulAssignment",
																	"src": "12502:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12545:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12545:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12556:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "12556:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12541:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12541:3:6"
																				},
																				"nativeSrc": "12541:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12541:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12565:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12565:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12512:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "12512:28:6"
																		},
																		"nativeSrc": "12512:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12512:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12502:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12502:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12245:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12289:9:6",
														"nodeType": "YulTypedName",
														"src": "12289:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12300:7:6",
														"nodeType": "YulTypedName",
														"src": "12300:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12312:6:6",
														"nodeType": "YulTypedName",
														"src": "12312:6:6",
														"type": ""
													}
												],
												"src": "12245:345:6"
											},
											{
												"body": {
													"nativeSrc": "12709:34:6",
													"nodeType": "YulBlock",
													"src": "12709:34:6",
													"statements": [
														{
															"nativeSrc": "12719:18:6",
															"nodeType": "YulAssignment",
															"src": "12719:18:6",
															"value": {
																"name": "pos",
																"nativeSrc": "12734:3:6",
																"nodeType": "YulIdentifier",
																"src": "12734:3:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12719:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "12719:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12596:147:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12681:3:6",
														"nodeType": "YulTypedName",
														"src": "12681:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12686:6:6",
														"nodeType": "YulTypedName",
														"src": "12686:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12697:11:6",
														"nodeType": "YulTypedName",
														"src": "12697:11:6",
														"type": ""
													}
												],
												"src": "12596:147:6"
											},
											{
												"body": {
													"nativeSrc": "12855:8:6",
													"nodeType": "YulBlock",
													"src": "12855:8:6",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "12749:114:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12847:6:6",
														"nodeType": "YulTypedName",
														"src": "12847:6:6",
														"type": ""
													}
												],
												"src": "12749:114:6"
											},
											{
												"body": {
													"nativeSrc": "13032:235:6",
													"nodeType": "YulBlock",
													"src": "13032:235:6",
													"statements": [
														{
															"nativeSrc": "13042:90:6",
															"nodeType": "YulAssignment",
															"src": "13042:90:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13125:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13125:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13130:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13130:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13049:75:6",
																	"nodeType": "YulIdentifier",
																	"src": "13049:75:6"
																},
																"nativeSrc": "13049:83:6",
																"nodeType": "YulFunctionCall",
																"src": "13049:83:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13042:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13042:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13230:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13230:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "13141:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "13141:88:6"
																},
																"nativeSrc": "13141:93:6",
																"nodeType": "YulFunctionCall",
																"src": "13141:93:6"
															},
															"nativeSrc": "13141:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "13141:93:6"
														},
														{
															"nativeSrc": "13243:18:6",
															"nodeType": "YulAssignment",
															"src": "13243:18:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13254:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13254:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13259:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13259:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13250:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13250:3:6"
																},
																"nativeSrc": "13250:11:6",
																"nodeType": "YulFunctionCall",
																"src": "13250:11:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13243:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13243:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12869:398:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13020:3:6",
														"nodeType": "YulTypedName",
														"src": "13020:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13028:3:6",
														"nodeType": "YulTypedName",
														"src": "13028:3:6",
														"type": ""
													}
												],
												"src": "12869:398:6"
											},
											{
												"body": {
													"nativeSrc": "13461:191:6",
													"nodeType": "YulBlock",
													"src": "13461:191:6",
													"statements": [
														{
															"nativeSrc": "13472:154:6",
															"nodeType": "YulAssignment",
															"src": "13472:154:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13622:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13622:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13479:141:6",
																	"nodeType": "YulIdentifier",
																	"src": "13479:141:6"
																},
																"nativeSrc": "13479:147:6",
																"nodeType": "YulFunctionCall",
																"src": "13479:147:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13472:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13472:3:6"
																}
															]
														},
														{
															"nativeSrc": "13636:10:6",
															"nodeType": "YulAssignment",
															"src": "13636:10:6",
															"value": {
																"name": "pos",
																"nativeSrc": "13643:3:6",
																"nodeType": "YulIdentifier",
																"src": "13643:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13636:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13636:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13273:379:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13448:3:6",
														"nodeType": "YulTypedName",
														"src": "13448:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13457:3:6",
														"nodeType": "YulTypedName",
														"src": "13457:3:6",
														"type": ""
													}
												],
												"src": "13273:379:6"
											},
											{
												"body": {
													"nativeSrc": "13703:149:6",
													"nodeType": "YulBlock",
													"src": "13703:149:6",
													"statements": [
														{
															"nativeSrc": "13713:25:6",
															"nodeType": "YulAssignment",
															"src": "13713:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13736:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13736:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13718:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13718:17:6"
																},
																"nativeSrc": "13718:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13718:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13713:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13713:1:6"
																}
															]
														},
														{
															"nativeSrc": "13747:25:6",
															"nodeType": "YulAssignment",
															"src": "13747:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13770:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13770:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13752:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13752:17:6"
																},
																"nativeSrc": "13752:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13752:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13747:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13747:1:6"
																}
															]
														},
														{
															"nativeSrc": "13781:17:6",
															"nodeType": "YulAssignment",
															"src": "13781:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13793:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13793:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13796:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13796:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13789:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13789:3:6"
																},
																"nativeSrc": "13789:9:6",
																"nodeType": "YulFunctionCall",
																"src": "13789:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "13781:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13781:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13823:22:6",
																"nodeType": "YulBlock",
																"src": "13823:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13825:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "13825:16:6"
																			},
																			"nativeSrc": "13825:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13825:18:6"
																		},
																		"nativeSrc": "13825:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13825:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "13814:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13814:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "13820:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13820:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13811:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "13811:2:6"
																},
																"nativeSrc": "13811:11:6",
																"nodeType": "YulFunctionCall",
																"src": "13811:11:6"
															},
															"nativeSrc": "13808:37:6",
															"nodeType": "YulIf",
															"src": "13808:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13658:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13689:1:6",
														"nodeType": "YulTypedName",
														"src": "13689:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13692:1:6",
														"nodeType": "YulTypedName",
														"src": "13692:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13698:4:6",
														"nodeType": "YulTypedName",
														"src": "13698:4:6",
														"type": ""
													}
												],
												"src": "13658:194:6"
											},
											{
												"body": {
													"nativeSrc": "13902:147:6",
													"nodeType": "YulBlock",
													"src": "13902:147:6",
													"statements": [
														{
															"nativeSrc": "13912:25:6",
															"nodeType": "YulAssignment",
															"src": "13912:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13935:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13935:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13917:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13917:17:6"
																},
																"nativeSrc": "13917:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13917:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13912:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13912:1:6"
																}
															]
														},
														{
															"nativeSrc": "13946:25:6",
															"nodeType": "YulAssignment",
															"src": "13946:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13969:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13969:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13951:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13951:17:6"
																},
																"nativeSrc": "13951:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13951:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13946:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13946:1:6"
																}
															]
														},
														{
															"nativeSrc": "13980:16:6",
															"nodeType": "YulAssignment",
															"src": "13980:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13991:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13991:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13994:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13994:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13987:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13987:3:6"
																},
																"nativeSrc": "13987:9:6",
																"nodeType": "YulFunctionCall",
																"src": "13987:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13980:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13980:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14020:22:6",
																"nodeType": "YulBlock",
																"src": "14020:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14022:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "14022:16:6"
																			},
																			"nativeSrc": "14022:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "14022:18:6"
																		},
																		"nativeSrc": "14022:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "14022:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14012:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "14012:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14015:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14015:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14009:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "14009:2:6"
																},
																"nativeSrc": "14009:10:6",
																"nodeType": "YulFunctionCall",
																"src": "14009:10:6"
															},
															"nativeSrc": "14006:36:6",
															"nodeType": "YulIf",
															"src": "14006:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13858:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13889:1:6",
														"nodeType": "YulTypedName",
														"src": "13889:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13892:1:6",
														"nodeType": "YulTypedName",
														"src": "13892:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13898:3:6",
														"nodeType": "YulTypedName",
														"src": "13898:3:6",
														"type": ""
													}
												],
												"src": "13858:191:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$651_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$651_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have an open loan !\")\n\n    }\n\n    function abi_encode_t_stringliteral_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Collateral\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba(memPtr) {\n\n        mstore(add(memPtr, 0), \"No active loan\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Collateralization ratio above mi\")\n\n        mstore(add(memPtr, 32), \"nimum\")\n\n    }\n\n    function abi_encode_t_stringliteral_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610054575f3560e01c806373b4086b146100585780637c3a00fd14610098578063aa452fa6146100c2578063b2016bd4146100ea578063ba1be55414610114578063f966ade71461013e575b5f80fd5b348015610063575f80fd5b5061007e60048036038101906100799190610842565b610148565b60405161008f9594939291906108ae565b60405180910390f35b3480156100a3575f80fd5b506100ac6101a5565b6040516100b991906108ff565b60405180910390f35b3480156100cd575f80fd5b506100e860048036038101906100e39190610942565b6101ab565b005b3480156100f5575f80fd5b506100fe61046e565b60405161010b91906109db565b60405180910390f35b34801561011f575f80fd5b50610128610491565b60405161013591906108ff565b60405180910390f35b610146610497565b005b6003602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015490806004015f9054906101000a900460ff16905085565b60015481565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f8160020154148061022057505f816002015411801561021f575060011515816004015f9054906101000a900460ff161515145b5b61025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a4e565b60405180910390fd5b5f6064600254856102709190610a99565b61027a9190610b07565b9050808310156102bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b690610b81565b60405180910390fd5b6102c930846106d0565b610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90610be9565b60405180910390fd5b5f6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020014281526020015f1515815250905061035433866106d0565b508060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167f1f4fa8bbaa124ef8d04466f13d5a2572fb712424cee0bc9cf430aec52439acd7868660405161045f929190610c07565b60405180910390a25050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f81600101541161051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490610c78565b60405180910390fd5b5f61052782610743565b9050600254811061056d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056490610d06565b60405180910390fd5b5f61057783610788565b9050803410156105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b390610d6e565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3385600201546040518363ffffffff1660e01b815260040161061a929190610d8c565b6020604051808303815f875af1158015610636573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065a9190610ddd565b506001836004015f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fc7ce0a35f17b490de2a317e7fecb2cae86b1abffb03800b2f4928235213826988460010154346040516106c3929190610c07565b60405180910390a2505050565b5f808373ffffffffffffffffffffffffffffffffffffffff16836040516106f690610e35565b5f6040518083038185875af1925050503d805f8114610730576040519150601f19603f3d011682016040523d82523d5f602084013e610735565b606091505b505090508091505092915050565b5f8061074e83610788565b90505f8360010154826107619190610e49565b905083600101546064826107759190610a99565b61077f9190610b07565b92505050919050565b5f8082600301544261079a9190610e49565b90505f63bbf81e008260015486600101546107b59190610a99565b6107bf9190610a99565b6107c99190610b07565b90508084600101546107db9190610e7c565b92505050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610811826107e8565b9050919050565b61082181610807565b811461082b575f80fd5b50565b5f8135905061083c81610818565b92915050565b5f60208284031215610857576108566107e4565b5b5f6108648482850161082e565b91505092915050565b61087681610807565b82525050565b5f819050919050565b61088e8161087c565b82525050565b5f8115159050919050565b6108a881610894565b82525050565b5f60a0820190506108c15f83018861086d565b6108ce6020830187610885565b6108db6040830186610885565b6108e86060830185610885565b6108f5608083018461089f565b9695505050505050565b5f6020820190506109125f830184610885565b92915050565b6109218161087c565b811461092b575f80fd5b50565b5f8135905061093c81610918565b92915050565b5f8060408385031215610958576109576107e4565b5b5f6109658582860161092e565b92505060206109768582860161092e565b9150509250929050565b5f819050919050565b5f6109a361099e610999846107e8565b610980565b6107e8565b9050919050565b5f6109b482610989565b9050919050565b5f6109c5826109aa565b9050919050565b6109d5816109bb565b82525050565b5f6020820190506109ee5f8301846109cc565b92915050565b5f82825260208201905092915050565b7f596f75206861766520616e206f70656e206c6f616e20210000000000000000005f82015250565b5f610a386017836109f4565b9150610a4382610a04565b602082019050919050565b5f6020820190508181035f830152610a6581610a2c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610aa38261087c565b9150610aae8361087c565b9250828202610abc8161087c565b91508282048414831517610ad357610ad2610a6c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610b118261087c565b9150610b1c8361087c565b925082610b2c57610b2b610ada565b5b828204905092915050565b7f496e73756666696369656e7420436f6c6c61746572616c0000000000000000005f82015250565b5f610b6b6017836109f4565b9150610b7682610b37565b602082019050919050565b5f6020820190508181035f830152610b9881610b5f565b9050919050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610bd3600f836109f4565b9150610bde82610b9f565b602082019050919050565b5f6020820190508181035f830152610c0081610bc7565b9050919050565b5f604082019050610c1a5f830185610885565b610c276020830184610885565b9392505050565b7f4e6f20616374697665206c6f616e0000000000000000000000000000000000005f82015250565b5f610c62600e836109f4565b9150610c6d82610c2e565b602082019050919050565b5f6020820190508181035f830152610c8f81610c56565b9050919050565b7f436f6c6c61746572616c697a6174696f6e20726174696f2061626f7665206d695f8201527f6e696d756d000000000000000000000000000000000000000000000000000000602082015250565b5f610cf06025836109f4565b9150610cfb82610c96565b604082019050919050565b5f6020820190508181035f830152610d1d81610ce4565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f610d586012836109f4565b9150610d6382610d24565b602082019050919050565b5f6020820190508181035f830152610d8581610d4c565b9050919050565b5f604082019050610d9f5f83018561086d565b610dac6020830184610885565b9392505050565b610dbc81610894565b8114610dc6575f80fd5b50565b5f81519050610dd781610db3565b92915050565b5f60208284031215610df257610df16107e4565b5b5f610dff84828501610dc9565b91505092915050565b5f81905092915050565b50565b5f610e205f83610e08565b9150610e2b82610e12565b5f82019050919050565b5f610e3f82610e15565b9150819050919050565b5f610e538261087c565b9150610e5e8361087c565b9250828203905081811115610e7657610e75610a6c565b5b92915050565b5f610e868261087c565b9150610e918361087c565b9250828201905080821115610ea957610ea8610a6c565b5b9291505056fea26469706673582212207eed740b576380f76085834430487184b6ab17f84fc1459797fc260d1cdbdee064736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x54 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73B4086B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x7C3A00FD EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xAA452FA6 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xBA1BE554 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xF966ADE7 EQ PUSH2 0x13E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST PUSH2 0x148 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x497 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD EQ DUP1 PUSH2 0x220 JUMPI POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT DUP1 ISZERO PUSH2 0x21F JUMPI POP PUSH1 0x1 ISZERO ISZERO DUP2 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST JUMPDEST PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x2 SLOAD DUP6 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x27A SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT ISZERO PUSH2 0x2BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C9 ADDRESS DUP5 PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FF SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH2 0x354 CALLER DUP7 PUSH2 0x6D0 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1F4FA8BBAA124EF8D04466F13D5A2572FB712424CEE0BC9CF430AEC52439ACD7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x45F SWAP3 SWAP2 SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x514 SWAP1 PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x527 DUP3 PUSH2 0x743 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD DUP2 LT PUSH2 0x56D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x564 SWAP1 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x577 DUP4 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B3 SWAP1 PUSH2 0xD6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61A SWAP3 SWAP2 SWAP1 PUSH2 0xD8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x636 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65A SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST POP PUSH1 0x1 DUP4 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC7CE0A35F17B490DE2A317E7FECB2CAE86B1ABFFB03800B2F492823521382698 DUP5 PUSH1 0x1 ADD SLOAD CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x6C3 SWAP3 SWAP2 SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x6F6 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x735 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x74E DUP4 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x761 SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x64 DUP3 PUSH2 0x775 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x79A SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0xBBF81E00 DUP3 PUSH1 0x1 SLOAD DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x7B5 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x811 DUP3 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x821 DUP2 PUSH2 0x807 JUMP JUMPDEST DUP2 EQ PUSH2 0x82B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x83C DUP2 PUSH2 0x818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x857 JUMPI PUSH2 0x856 PUSH2 0x7E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x864 DUP5 DUP3 DUP6 ADD PUSH2 0x82E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x876 DUP2 PUSH2 0x807 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x88E DUP2 PUSH2 0x87C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A8 DUP2 PUSH2 0x894 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x8C1 PUSH0 DUP4 ADD DUP9 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x8CE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x8DB PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x8E8 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x8F5 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x89F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x912 PUSH0 DUP4 ADD DUP5 PUSH2 0x885 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x921 DUP2 PUSH2 0x87C JUMP JUMPDEST DUP2 EQ PUSH2 0x92B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x93C DUP2 PUSH2 0x918 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x958 JUMPI PUSH2 0x957 PUSH2 0x7E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x965 DUP6 DUP3 DUP7 ADD PUSH2 0x92E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x976 DUP6 DUP3 DUP7 ADD PUSH2 0x92E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9A3 PUSH2 0x99E PUSH2 0x999 DUP5 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9B4 DUP3 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9C5 DUP3 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D5 DUP2 PUSH2 0x9BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9EE PUSH0 DUP4 ADD DUP5 PUSH2 0x9CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206861766520616E206F70656E206C6F616E2021000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA38 PUSH1 0x17 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xA43 DUP3 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA65 DUP2 PUSH2 0xA2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAA3 DUP3 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP PUSH2 0xAAE DUP4 PUSH2 0x87C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xABC DUP2 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xAD3 JUMPI PUSH2 0xAD2 PUSH2 0xA6C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB11 DUP3 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP PUSH2 0xB1C DUP4 PUSH2 0x87C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB2C JUMPI PUSH2 0xB2B PUSH2 0xADA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420436F6C6C61746572616C000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB6B PUSH1 0x17 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xB76 DUP3 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB98 DUP2 PUSH2 0xB5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBD3 PUSH1 0xF DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xBDE DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC00 DUP2 PUSH2 0xBC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC1A PUSH0 DUP4 ADD DUP6 PUSH2 0x885 JUMP JUMPDEST PUSH2 0xC27 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x885 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20616374697665206C6F616E000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC62 PUSH1 0xE DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6D DUP3 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC8F DUP2 PUSH2 0xC56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6C6C61746572616C697A6174696F6E20726174696F2061626F7665206D69 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E696D756D000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCF0 PUSH1 0x25 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCFB DUP3 PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD1D DUP2 PUSH2 0xCE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD58 PUSH1 0x12 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xD63 DUP3 PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD85 DUP2 PUSH2 0xD4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD9F PUSH0 DUP4 ADD DUP6 PUSH2 0x86D JUMP JUMPDEST PUSH2 0xDAC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x885 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDBC DUP2 PUSH2 0x894 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDD7 DUP2 PUSH2 0xDB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF2 JUMPI PUSH2 0xDF1 PUSH2 0x7E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDFF DUP5 DUP3 DUP6 ADD PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xE20 PUSH0 DUP4 PUSH2 0xE08 JUMP JUMPDEST SWAP2 POP PUSH2 0xE2B DUP3 PUSH2 0xE12 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE3F DUP3 PUSH2 0xE15 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE53 DUP3 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP PUSH2 0xE5E DUP4 PUSH2 0x87C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE76 JUMPI PUSH2 0xE75 PUSH2 0xA6C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE86 DUP3 PUSH2 0x87C JUMP JUMPDEST SWAP2 POP PUSH2 0xE91 DUP4 PUSH2 0x87C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEA9 JUMPI PUSH2 0xEA8 PUSH2 0xA6C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xED740B576380F76085834430487184B6AB17F84FC1459797FC260D1CDBDEE0 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "116:3512:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;422:42;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;343:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1027:955;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;309:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;376:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1988:680;;;:::i;:::-;;422:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;343:27::-;;;;:::o;1027:955::-;1118:24;1145:5;:17;1151:10;1145:17;;;;;;;;;;;;;;;1118:44;;1208:1;1180:7;:24;;;:29;:87;;;;1241:1;1214:7;:24;;;:28;:52;;;;;1262:4;1246:20;;:7;:12;;;;;;;;;;;;:20;;;1214:52;1180:87;1172:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;1305:30;1386:3;1357:25;;1339:15;:43;;;;:::i;:::-;1338:51;;;;:::i;:::-;1305:84;;1428:22;1407:17;:43;;1399:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1496:46;1517:4;1524:17;1496:12;:46::i;:::-;1488:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1572:23;1598:215;;;;;;;;1631:10;1598:215;;;;;;1671:15;1598:215;;;;1718:17;1598:215;;;;1762:15;1598:215;;;;1797:5;1598:215;;;;;1572:241;;1823:41;1836:10;1848:15;1823:12;:41::i;:::-;;1894:7;1874:5;:17;1880:10;1874:17;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1928:10;1916:59;;;1940:15;1957:17;1916:59;;;;;;;:::i;:::-;;;;;;;;1107:875;;;1027:955;;:::o;309:28::-;;;;;;;;;;;;:::o;376:40::-;;;;:::o;1988:680::-;2034:25;2062:5;:17;2068:10;2062:17;;;;;;;;;;;;;;;2034:45;;2123:1;2097:8;:23;;;:27;2089:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2153:30;2186:42;2219:8;2186:32;:42::i;:::-;2153:75;;2271:25;;2246:22;:50;2238:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;2348:25;2376:37;2404:8;2376:27;:37::i;:::-;2348:65;;2444:17;2431:9;:30;;2423:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2494:15;;;;;;;;;;:24;;;2519:10;2531:8;:25;;;2494:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2583:4;2567:8;:13;;;:20;;;;;;;;;;;;;;;;;;2613:10;2602:59;;;2626:8;:23;;;2651:9;2602:59;;;;;;;:::i;:::-;;;;;;;;2024:644;;;1988:680::o;2674:177::-;2749:4;2765:9;2789;2781:23;;2812:7;2781:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2764:60;;;2840:4;2832:12;;;2674:177;;;;:::o;2857:360::-;2970:7;2993:25;3021:37;3049:8;3021:27;:37::i;:::-;2993:65;;3072:12;3107:8;:23;;;3087:17;:43;;;;:::i;:::-;3072:58;;3183:8;:23;;;3160:3;3153:4;:10;;;;:::i;:::-;3152:54;;;;:::i;:::-;3145:61;;;;2857:360;;;:::o;3227:397::-;3339:7;3366:19;3406:8;:20;;;3388:15;:38;;;;:::i;:::-;3366:60;;3444:23;3528:14;3512:11;3497:12;;3471:8;:23;;;:38;;;;:::i;:::-;:52;;;;:::i;:::-;3470:73;;;;:::i;:::-;3444:99;;3594:15;3568:8;:23;;;:41;;;;:::i;:::-;3561:48;;;;3227:397;;;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:77::-;1337:7;1366:5;1355:16;;1300:77;;;:::o;1383:118::-;1470:24;1488:5;1470:24;:::i;:::-;1465:3;1458:37;1383:118;;:::o;1507:90::-;1541:7;1584:5;1577:13;1570:21;1559:32;;1507:90;;;:::o;1603:109::-;1684:21;1699:5;1684:21;:::i;:::-;1679:3;1672:34;1603:109;;:::o;1718:652::-;1917:4;1955:3;1944:9;1940:19;1932:27;;1969:71;2037:1;2026:9;2022:17;2013:6;1969:71;:::i;:::-;2050:72;2118:2;2107:9;2103:18;2094:6;2050:72;:::i;:::-;2132;2200:2;2189:9;2185:18;2176:6;2132:72;:::i;:::-;2214;2282:2;2271:9;2267:18;2258:6;2214:72;:::i;:::-;2296:67;2358:3;2347:9;2343:19;2334:6;2296:67;:::i;:::-;1718:652;;;;;;;;:::o;2376:222::-;2469:4;2507:2;2496:9;2492:18;2484:26;;2520:71;2588:1;2577:9;2573:17;2564:6;2520:71;:::i;:::-;2376:222;;;;:::o;2604:122::-;2677:24;2695:5;2677:24;:::i;:::-;2670:5;2667:35;2657:63;;2716:1;2713;2706:12;2657:63;2604:122;:::o;2732:139::-;2778:5;2816:6;2803:20;2794:29;;2832:33;2859:5;2832:33;:::i;:::-;2732:139;;;;:::o;2877:474::-;2945:6;2953;3002:2;2990:9;2981:7;2977:23;2973:32;2970:119;;;3008:79;;:::i;:::-;2970:119;3128:1;3153:53;3198:7;3189:6;3178:9;3174:22;3153:53;:::i;:::-;3143:63;;3099:117;3255:2;3281:53;3326:7;3317:6;3306:9;3302:22;3281:53;:::i;:::-;3271:63;;3226:118;2877:474;;;;;:::o;3357:60::-;3385:3;3406:5;3399:12;;3357:60;;;:::o;3423:142::-;3473:9;3506:53;3524:34;3533:24;3551:5;3533:24;:::i;:::-;3524:34;:::i;:::-;3506:53;:::i;:::-;3493:66;;3423:142;;;:::o;3571:126::-;3621:9;3654:37;3685:5;3654:37;:::i;:::-;3641:50;;3571:126;;;:::o;3703:139::-;3766:9;3799:37;3830:5;3799:37;:::i;:::-;3786:50;;3703:139;;;:::o;3848:157::-;3948:50;3992:5;3948:50;:::i;:::-;3943:3;3936:63;3848:157;;:::o;4011:248::-;4117:4;4155:2;4144:9;4140:18;4132:26;;4168:84;4249:1;4238:9;4234:17;4225:6;4168:84;:::i;:::-;4011:248;;;;:::o;4265:169::-;4349:11;4383:6;4378:3;4371:19;4423:4;4418:3;4414:14;4399:29;;4265:169;;;;:::o;4440:173::-;4580:25;4576:1;4568:6;4564:14;4557:49;4440:173;:::o;4619:366::-;4761:3;4782:67;4846:2;4841:3;4782:67;:::i;:::-;4775:74;;4858:93;4947:3;4858:93;:::i;:::-;4976:2;4971:3;4967:12;4960:19;;4619:366;;;:::o;4991:419::-;5157:4;5195:2;5184:9;5180:18;5172:26;;5244:9;5238:4;5234:20;5230:1;5219:9;5215:17;5208:47;5272:131;5398:4;5272:131;:::i;:::-;5264:139;;4991:419;;;:::o;5416:180::-;5464:77;5461:1;5454:88;5561:4;5558:1;5551:15;5585:4;5582:1;5575:15;5602:410;5642:7;5665:20;5683:1;5665:20;:::i;:::-;5660:25;;5699:20;5717:1;5699:20;:::i;:::-;5694:25;;5754:1;5751;5747:9;5776:30;5794:11;5776:30;:::i;:::-;5765:41;;5955:1;5946:7;5942:15;5939:1;5936:22;5916:1;5909:9;5889:83;5866:139;;5985:18;;:::i;:::-;5866:139;5650:362;5602:410;;;;:::o;6018:180::-;6066:77;6063:1;6056:88;6163:4;6160:1;6153:15;6187:4;6184:1;6177:15;6204:185;6244:1;6261:20;6279:1;6261:20;:::i;:::-;6256:25;;6295:20;6313:1;6295:20;:::i;:::-;6290:25;;6334:1;6324:35;;6339:18;;:::i;:::-;6324:35;6381:1;6378;6374:9;6369:14;;6204:185;;;;:::o;6395:173::-;6535:25;6531:1;6523:6;6519:14;6512:49;6395:173;:::o;6574:366::-;6716:3;6737:67;6801:2;6796:3;6737:67;:::i;:::-;6730:74;;6813:93;6902:3;6813:93;:::i;:::-;6931:2;6926:3;6922:12;6915:19;;6574:366;;;:::o;6946:419::-;7112:4;7150:2;7139:9;7135:18;7127:26;;7199:9;7193:4;7189:20;7185:1;7174:9;7170:17;7163:47;7227:131;7353:4;7227:131;:::i;:::-;7219:139;;6946:419;;;:::o;7371:165::-;7511:17;7507:1;7499:6;7495:14;7488:41;7371:165;:::o;7542:366::-;7684:3;7705:67;7769:2;7764:3;7705:67;:::i;:::-;7698:74;;7781:93;7870:3;7781:93;:::i;:::-;7899:2;7894:3;7890:12;7883:19;;7542:366;;;:::o;7914:419::-;8080:4;8118:2;8107:9;8103:18;8095:26;;8167:9;8161:4;8157:20;8153:1;8142:9;8138:17;8131:47;8195:131;8321:4;8195:131;:::i;:::-;8187:139;;7914:419;;;:::o;8339:332::-;8460:4;8498:2;8487:9;8483:18;8475:26;;8511:71;8579:1;8568:9;8564:17;8555:6;8511:71;:::i;:::-;8592:72;8660:2;8649:9;8645:18;8636:6;8592:72;:::i;:::-;8339:332;;;;;:::o;8677:164::-;8817:16;8813:1;8805:6;8801:14;8794:40;8677:164;:::o;8847:366::-;8989:3;9010:67;9074:2;9069:3;9010:67;:::i;:::-;9003:74;;9086:93;9175:3;9086:93;:::i;:::-;9204:2;9199:3;9195:12;9188:19;;8847:366;;;:::o;9219:419::-;9385:4;9423:2;9412:9;9408:18;9400:26;;9472:9;9466:4;9462:20;9458:1;9447:9;9443:17;9436:47;9500:131;9626:4;9500:131;:::i;:::-;9492:139;;9219:419;;;:::o;9644:224::-;9784:34;9780:1;9772:6;9768:14;9761:58;9853:7;9848:2;9840:6;9836:15;9829:32;9644:224;:::o;9874:366::-;10016:3;10037:67;10101:2;10096:3;10037:67;:::i;:::-;10030:74;;10113:93;10202:3;10113:93;:::i;:::-;10231:2;10226:3;10222:12;10215:19;;9874:366;;;:::o;10246:419::-;10412:4;10450:2;10439:9;10435:18;10427:26;;10499:9;10493:4;10489:20;10485:1;10474:9;10470:17;10463:47;10527:131;10653:4;10527:131;:::i;:::-;10519:139;;10246:419;;;:::o;10671:168::-;10811:20;10807:1;10799:6;10795:14;10788:44;10671:168;:::o;10845:366::-;10987:3;11008:67;11072:2;11067:3;11008:67;:::i;:::-;11001:74;;11084:93;11173:3;11084:93;:::i;:::-;11202:2;11197:3;11193:12;11186:19;;10845:366;;;:::o;11217:419::-;11383:4;11421:2;11410:9;11406:18;11398:26;;11470:9;11464:4;11460:20;11456:1;11445:9;11441:17;11434:47;11498:131;11624:4;11498:131;:::i;:::-;11490:139;;11217:419;;;:::o;11642:332::-;11763:4;11801:2;11790:9;11786:18;11778:26;;11814:71;11882:1;11871:9;11867:17;11858:6;11814:71;:::i;:::-;11895:72;11963:2;11952:9;11948:18;11939:6;11895:72;:::i;:::-;11642:332;;;;;:::o;11980:116::-;12050:21;12065:5;12050:21;:::i;:::-;12043:5;12040:32;12030:60;;12086:1;12083;12076:12;12030:60;11980:116;:::o;12102:137::-;12156:5;12187:6;12181:13;12172:22;;12203:30;12227:5;12203:30;:::i;:::-;12102:137;;;;:::o;12245:345::-;12312:6;12361:2;12349:9;12340:7;12336:23;12332:32;12329:119;;;12367:79;;:::i;:::-;12329:119;12487:1;12512:61;12565:7;12556:6;12545:9;12541:22;12512:61;:::i;:::-;12502:71;;12458:125;12245:345;;;;:::o;12596:147::-;12697:11;12734:3;12719:18;;12596:147;;;;:::o;12749:114::-;;:::o;12869:398::-;13028:3;13049:83;13130:1;13125:3;13049:83;:::i;:::-;13042:90;;13141:93;13230:3;13141:93;:::i;:::-;13259:1;13254:3;13250:11;13243:18;;12869:398;;;:::o;13273:379::-;13457:3;13479:147;13622:3;13479:147;:::i;:::-;13472:154;;13643:3;13636:10;;13273:379;;;:::o;13658:194::-;13698:4;13718:20;13736:1;13718:20;:::i;:::-;13713:25;;13752:20;13770:1;13752:20;:::i;:::-;13747:25;;13796:1;13793;13789:9;13781:17;;13820:1;13814:4;13811:11;13808:37;;;13825:18;;:::i;:::-;13808:37;13658:194;;;;:::o;13858:191::-;13898:3;13917:20;13935:1;13917:20;:::i;:::-;13912:25;;13951:20;13969:1;13951:20;:::i;:::-;13946:25;;13994:1;13991;13987:9;13980:16;;14015:3;14012:1;14009:10;14006:36;;;14022:18;;:::i;:::-;14006:36;13858:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "762600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"collateralToken()": "infinite",
								"interestRate()": "2425",
								"loans(address)": "infinite",
								"minCollateralizationRatio()": "2491",
								"repayLoan()": "infinite",
								"requestLoan(uint256,uint256)": "infinite"
							},
							"internal": {
								"_calculateCollateralizationRatio(struct SafeLoan.LoanInfo storage pointer)": "infinite",
								"_calculateOutstandingAmount(struct SafeLoan.LoanInfo storage pointer)": "infinite",
								"_sentEtherTo(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 3628,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 3628,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 3628,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 742,
									"end": 1021,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 896,
									"end": 912,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 878,
									"end": 893,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 878,
									"end": 893,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 878,
									"end": 912,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 878,
									"end": 912,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 878,
									"end": 912,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 878,
									"end": 912,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 937,
									"end": 950,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 922,
									"end": 934,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 922,
									"end": 950,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 922,
									"end": 950,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 922,
									"end": 950,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 922,
									"end": 950,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 988,
									"end": 1014,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 960,
									"end": 985,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 960,
									"end": 1014,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 960,
									"end": 1014,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 960,
									"end": 1014,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 960,
									"end": 1014,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 742,
									"end": 1021,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 116,
									"end": 3628,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 116,
									"end": 3628,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 677,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 677,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 618,
									"end": 625,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 665,
									"end": 670,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 636,
									"end": 671,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 636,
									"end": 671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 568,
									"end": 677,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 683,
									"end": 831,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 683,
									"end": 831,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 805,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 769,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 769,
									"end": 806,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 769,
									"end": 806,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 762,
									"end": 767,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 759,
									"end": 807,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 749,
									"end": 825,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 811,
									"end": 823,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 749,
									"end": 825,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 683,
									"end": 831,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 683,
									"end": 831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 907,
									"end": 912,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 932,
									"end": 945,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 923,
									"end": 945,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 923,
									"end": 945,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 954,
									"end": 1000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 837,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1012,
									"end": 1089,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1012,
									"end": 1089,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1049,
									"end": 1056,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1078,
									"end": 1083,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1067,
									"end": 1083,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1067,
									"end": 1083,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1012,
									"end": 1089,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1012,
									"end": 1089,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1012,
									"end": 1089,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1012,
									"end": 1089,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1095,
									"end": 1217,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1095,
									"end": 1217,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1186,
									"end": 1191,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1168,
									"end": 1192,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1192,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1168,
									"end": 1192,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1158,
									"end": 1193,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1148,
									"end": 1211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1148,
									"end": 1211,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1207,
									"end": 1208,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1204,
									"end": 1205,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1209,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1148,
									"end": 1211,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1148,
									"end": 1211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1095,
									"end": 1217,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1095,
									"end": 1217,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1223,
									"end": 1366,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1223,
									"end": 1366,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1280,
									"end": 1285,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1317,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1305,
									"end": 1318,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1318,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1318,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1327,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1354,
									"end": 1359,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1327,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1327,
									"end": 1360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1327,
									"end": 1360,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1327,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1223,
									"end": 1366,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1223,
									"end": 1366,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1223,
									"end": 1366,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1223,
									"end": 1366,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1223,
									"end": 1366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1372,
									"end": 2061,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1372,
									"end": 2061,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1479,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1481,
									"end": 1487,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1489,
									"end": 1495,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1538,
									"end": 1540,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1526,
									"end": 1535,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1524,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1513,
									"end": 1536,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1509,
									"end": 1541,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1625,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1506,
									"end": 1625,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1544,
									"end": 1623,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1544,
									"end": 1623,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1544,
									"end": 1623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1544,
									"end": 1623,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1544,
									"end": 1623,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1625,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1506,
									"end": 1625,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1664,
									"end": 1665,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1689,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1758,
									"end": 1765,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1749,
									"end": 1755,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1747,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1734,
									"end": 1756,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1689,
									"end": 1766,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1766,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1689,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1766,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1776,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1815,
									"end": 1817,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1841,
									"end": 1905,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1897,
									"end": 1904,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1888,
									"end": 1894,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1877,
									"end": 1886,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1873,
									"end": 1895,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1841,
									"end": 1905,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1841,
									"end": 1905,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1841,
									"end": 1905,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1841,
									"end": 1905,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1905,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1786,
									"end": 1915,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1954,
									"end": 1956,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2036,
									"end": 2043,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2027,
									"end": 2033,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2025,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2012,
									"end": 2034,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1980,
									"end": 2044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1980,
									"end": 2044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1980,
									"end": 2044,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1980,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1970,
									"end": 2044,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1970,
									"end": 2044,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1925,
									"end": 2054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1372,
									"end": 2061,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1372,
									"end": 2061,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1372,
									"end": 2061,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1372,
									"end": 2061,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1372,
									"end": 2061,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1372,
									"end": 2061,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 116,
									"end": 3628,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 116,
									"end": 3628,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 116,
									"end": 3628,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 3628,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 116,
									"end": 3628,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 3628,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 3628,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 116,
									"end": 3628,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 3628,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207eed740b576380f76085834430487184b6ab17f84fc1459797fc260d1cdbdee064736f6c63430008190033",
									".code": [
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "73B4086B"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "7C3A00FD"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "AA452FA6"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "B2016BD4"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "BA1BE554"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "F966ADE7"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 3628,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 422,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 422,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 422,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 343,
											"end": 370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 343,
											"end": 370,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 370,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 343,
											"end": 370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 343,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 343,
											"end": 370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 343,
											"end": 370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 370,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 343,
											"end": 370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 343,
											"end": 370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 343,
											"end": 370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 370,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1027,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1027,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 309,
											"end": 337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 309,
											"end": 337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 376,
											"end": 416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 376,
											"end": 416,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 416,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 376,
											"end": 416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 376,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 376,
											"end": 416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 376,
											"end": 416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 416,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 376,
											"end": 416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 376,
											"end": 416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 376,
											"end": 416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 416,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2668,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1988,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1988,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1988,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2668,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1988,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2668,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 422,
											"end": 464,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 343,
											"end": 370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 370,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 343,
											"end": 370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1161,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1162,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1187,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1204,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1180,
											"end": 1204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1204,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1209,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1267,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1180,
											"end": 1267,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1242,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1221,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1238,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1214,
											"end": 1238,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1238,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1242,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1266,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1266,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1214,
											"end": 1266,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1262,
											"end": 1266,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1246,
											"end": 1266,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1266,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1253,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1266,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1266,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1266,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1266,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1214,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1267,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1180,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1172,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1172,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1389,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1357,
											"end": 1382,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1357,
											"end": 1382,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1339,
											"end": 1354,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1339,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1339,
											"end": 1382,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1339,
											"end": 1382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1339,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1339,
											"end": 1382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1339,
											"end": 1382,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1339,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1338,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1407,
											"end": 1424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1407,
											"end": 1450,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1407,
											"end": 1450,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1399,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1399,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1496,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1517,
											"end": 1521,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1541,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1496,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1496,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1496,
											"end": 1542,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1496,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1488,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1488,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1631,
											"end": 1641,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1686,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1735,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1777,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1823,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1836,
											"end": 1846,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1863,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1823,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1823,
											"end": 1864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1823,
											"end": 1864,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1823,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1823,
											"end": 1864,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1879,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1890,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "1F4FA8BBAA124EF8D04466F13D5A2572FB712424CEE0BC9CF430AEC52439ACD7"
										},
										{
											"begin": 1940,
											"end": 1955,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 1974,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1916,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1975,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 309,
											"end": 337,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 309,
											"end": 337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 376,
											"end": 416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 376,
											"end": 416,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 376,
											"end": 416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2668,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1988,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2059,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2078,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2079,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2105,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2120,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2097,
											"end": 2120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2120,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2124,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2089,
											"end": 2143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2089,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2219,
											"end": 2227,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2186,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2186,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2296,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2271,
											"end": 2296,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2246,
											"end": 2268,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2246,
											"end": 2296,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2238,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2238,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2348,
											"end": 2373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2404,
											"end": 2412,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2376,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2413,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2376,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2348,
											"end": 2413,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2348,
											"end": 2413,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2461,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2440,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2461,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2461,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2423,
											"end": 2484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2423,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2509,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2509,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2494,
											"end": 2509,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2509,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2509,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2494,
											"end": 2509,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2518,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2494,
											"end": 2518,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2518,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2519,
											"end": 2529,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2539,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2556,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2531,
											"end": 2556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2556,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2494,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2494,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2567,
											"end": 2575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2567,
											"end": 2580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2623,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "PUSH",
											"source": 5,
											"value": "C7CE0A35F17B490DE2A317E7FECB2CAE86B1ABFFB03800B2F492823521382698"
										},
										{
											"begin": 2626,
											"end": 2634,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2649,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2626,
											"end": 2649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2649,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2651,
											"end": 2660,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2602,
											"end": 2661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2661,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2851,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2674,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2819,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2781,
											"end": 2824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2840,
											"end": 2844,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2851,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 3217,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2857,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 2977,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2993,
											"end": 3018,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3049,
											"end": 3057,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3021,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3058,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3021,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2993,
											"end": 3058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2993,
											"end": 3058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3072,
											"end": 3084,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3115,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3104,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3087,
											"end": 3130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3087,
											"end": 3130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3130,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3087,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3072,
											"end": 3130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3072,
											"end": 3130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3191,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3206,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3183,
											"end": 3206,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3206,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3163,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3153,
											"end": 3157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3153,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3153,
											"end": 3163,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3153,
											"end": 3163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3153,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3153,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3153,
											"end": 3163,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3153,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3152,
											"end": 3206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3152,
											"end": 3206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3206,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3152,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3206,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 3217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 3217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 3217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 3217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3227,
											"end": 3624,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3227,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3406,
											"end": 3414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3406,
											"end": 3426,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3406,
											"end": 3426,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3406,
											"end": 3426,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3403,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3388,
											"end": 3426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3444,
											"end": 3467,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3542,
											"name": "PUSH",
											"source": 5,
											"value": "BBF81E00"
										},
										{
											"begin": 3512,
											"end": 3523,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3509,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3497,
											"end": 3509,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3479,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3494,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3471,
											"end": 3494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3494,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3471,
											"end": 3509,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3471,
											"end": 3509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3509,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3471,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3471,
											"end": 3523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3470,
											"end": 3543,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3543,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3470,
											"end": 3543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3543,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3470,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3444,
											"end": 3543,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3444,
											"end": 3543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3576,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3591,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3568,
											"end": 3591,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3591,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3568,
											"end": 3609,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3609,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3568,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3609,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3568,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3609,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3227,
											"end": 3624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3227,
											"end": 3624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3227,
											"end": 3624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3227,
											"end": 3624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1300,
											"end": 1377,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1300,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1344,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1300,
											"end": 1377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1300,
											"end": 1377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1300,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1300,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1488,
											"end": 1493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1470,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1495,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1507,
											"end": 1597,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1507,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1590,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1591,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1591,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1507,
											"end": 1597,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1507,
											"end": 1597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1507,
											"end": 1597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1507,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1712,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1603,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1699,
											"end": 1704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1684,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1705,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1684,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1706,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 2370,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1718,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1958,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1944,
											"end": 1953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1959,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1959,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2037,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2039,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2019,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1969,
											"end": 2040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2040,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1969,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 2116,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2100,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2050,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2122,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2050,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2198,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2132,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2204,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2132,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2271,
											"end": 2280,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2214,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2286,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2214,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2358,
											"end": 2361,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2347,
											"end": 2356,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2296,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2296,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 2370,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 2370,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 2370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 2370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 2370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 2370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 2370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 2370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 2370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2376,
											"end": 2598,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2376,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2509,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2510,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2588,
											"end": 2589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2586,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2573,
											"end": 2590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2570,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2520,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2591,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2520,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2376,
											"end": 2598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2376,
											"end": 2598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2376,
											"end": 2598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2376,
											"end": 2598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2376,
											"end": 2598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2604,
											"end": 2726,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2604,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2695,
											"end": 2700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2677,
											"end": 2701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2701,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2677,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2702,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2657,
											"end": 2720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2718,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2720,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2657,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2604,
											"end": 2726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2604,
											"end": 2726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2871,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2732,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2823,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2859,
											"end": 2864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2832,
											"end": 2865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2865,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2832,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2871,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3351,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2877,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2951,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2959,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3004,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2990,
											"end": 2999,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 2988,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2977,
											"end": 3000,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2973,
											"end": 3005,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3089,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2970,
											"end": 3089,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3008,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3089,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2970,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3198,
											"end": 3205,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3187,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3153,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3153,
											"end": 3206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3153,
											"end": 3206,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3153,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3206,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3099,
											"end": 3216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3257,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3281,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3326,
											"end": 3333,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3323,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3306,
											"end": 3315,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3324,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3281,
											"end": 3334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3334,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3281,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3271,
											"end": 3334,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3271,
											"end": 3334,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3226,
											"end": 3344,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3417,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3357,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3417,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3565,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3423,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3482,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3524,
											"end": 3558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3506,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3559,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3506,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3697,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3571,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3654,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3685,
											"end": 3690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3654,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3691,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3654,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3697,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3842,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3703,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3766,
											"end": 3775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3830,
											"end": 3835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3799,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3836,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3799,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 4005,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3848,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3992,
											"end": 3997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3948,
											"end": 3998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 3998,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3948,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 3946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3936,
											"end": 3999,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 4005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 4005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 4005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4259,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4011,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4153,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4132,
											"end": 4158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4132,
											"end": 4158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4168,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4247,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4225,
											"end": 4231,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4168,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4168,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4168,
											"end": 4252,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 4168,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4259,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4434,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4265,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4427,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4399,
											"end": 4428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4399,
											"end": 4428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4434,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4613,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4440,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "596F75206861766520616E206F70656E206C6F616E2021000000000000000000"
										},
										{
											"begin": 4576,
											"end": 4577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4606,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4985,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4619,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4782,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4846,
											"end": 4848,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4841,
											"end": 4844,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4782,
											"end": 4849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 4849,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4782,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4947,
											"end": 4950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4858,
											"end": 4951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4951,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4858,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 4978,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4971,
											"end": 4974,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 4979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 4979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5410,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4991,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5195,
											"end": 5197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5172,
											"end": 5198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5172,
											"end": 5198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5238,
											"end": 5242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5254,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5228,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5215,
											"end": 5232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5208,
											"end": 5255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5272,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 5398,
											"end": 5402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5272,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5272,
											"end": 5403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5272,
											"end": 5403,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 5272,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5596,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5416,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5541,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5461,
											"end": 5462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5454,
											"end": 5542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5565,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5585,
											"end": 5589,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5582,
											"end": 5583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5590,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 6012,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5602,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5642,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 5683,
											"end": 5684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 5665,
											"end": 5685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5660,
											"end": 5685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5660,
											"end": 5685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5717,
											"end": 5718,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 5699,
											"end": 5719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5719,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5755,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5752,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5756,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5776,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5794,
											"end": 5805,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5776,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 5776,
											"end": 5806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5776,
											"end": 5806,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5776,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5765,
											"end": 5806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5765,
											"end": 5806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 5956,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 5953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 5940,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5958,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5916,
											"end": 5917,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5909,
											"end": 5918,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 5972,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5866,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5866,
											"end": 6005,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5985,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5985,
											"end": 6003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6003,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5985,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5866,
											"end": 6005,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5866,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 6012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 6012,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 6012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 6012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 6012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 6012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6198,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6018,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6066,
											"end": 6143,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6063,
											"end": 6064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6056,
											"end": 6144,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6167,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6160,
											"end": 6161,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6153,
											"end": 6168,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6191,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6184,
											"end": 6185,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6192,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6204,
											"end": 6389,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 6204,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6261,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6279,
											"end": 6280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6261,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 6261,
											"end": 6281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6261,
											"end": 6281,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6261,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6256,
											"end": 6281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6256,
											"end": 6281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6295,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 6313,
											"end": 6314,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6295,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 6295,
											"end": 6315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6295,
											"end": 6315,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 6295,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6315,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6324,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6324,
											"end": 6359,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6339,
											"end": 6357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6324,
											"end": 6359,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6324,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6378,
											"end": 6379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6374,
											"end": 6383,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6204,
											"end": 6389,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6204,
											"end": 6389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6204,
											"end": 6389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6204,
											"end": 6389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6204,
											"end": 6389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6395,
											"end": 6568,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6395,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6535,
											"end": 6560,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E7420436F6C6C61746572616C000000000000000000"
										},
										{
											"begin": 6531,
											"end": 6532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6523,
											"end": 6529,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6519,
											"end": 6533,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6512,
											"end": 6561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6395,
											"end": 6568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6395,
											"end": 6568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6940,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6574,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6716,
											"end": 6719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6737,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6801,
											"end": 6803,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 6796,
											"end": 6799,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6737,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6737,
											"end": 6804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6737,
											"end": 6804,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6737,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6902,
											"end": 6905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6813,
											"end": 6906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6906,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6813,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6933,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6922,
											"end": 6934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6915,
											"end": 6934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6915,
											"end": 6934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6940,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6946,
											"end": 7365,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 6946,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7112,
											"end": 7116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7152,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7139,
											"end": 7148,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7153,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7209,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7174,
											"end": 7183,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7163,
											"end": 7210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7353,
											"end": 7357,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 7227,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7358,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7227,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6946,
											"end": 7365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6946,
											"end": 7365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6946,
											"end": 7365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6946,
											"end": 7365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7536,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7371,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7511,
											"end": 7528,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 7507,
											"end": 7508,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7499,
											"end": 7505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7495,
											"end": 7509,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7488,
											"end": 7529,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7542,
											"end": 7908,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 7542,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7684,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7705,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7769,
											"end": 7771,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 7764,
											"end": 7767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7705,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 7705,
											"end": 7772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7705,
											"end": 7772,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7705,
											"end": 7772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7698,
											"end": 7772,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7698,
											"end": 7772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7870,
											"end": 7873,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7781,
											"end": 7874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7874,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7781,
											"end": 7874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7894,
											"end": 7897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7542,
											"end": 7908,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7542,
											"end": 7908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7542,
											"end": 7908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7542,
											"end": 7908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7914,
											"end": 8333,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 7914,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8107,
											"end": 8116,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8167,
											"end": 8176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8153,
											"end": 8154,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8142,
											"end": 8151,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8138,
											"end": 8155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8195,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8195,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 8195,
											"end": 8326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8195,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 8195,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8187,
											"end": 8326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8187,
											"end": 8326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7914,
											"end": 8333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7914,
											"end": 8333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7914,
											"end": 8333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7914,
											"end": 8333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8671,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 8339,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8460,
											"end": 8464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8498,
											"end": 8500,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8487,
											"end": 8496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8475,
											"end": 8501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8475,
											"end": 8501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8511,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 8579,
											"end": 8580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8555,
											"end": 8561,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8511,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 8511,
											"end": 8582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8511,
											"end": 8582,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 8511,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8592,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 8660,
											"end": 8662,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8649,
											"end": 8658,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8636,
											"end": 8642,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8592,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 8592,
											"end": 8664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8592,
											"end": 8664,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 8592,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8671,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8677,
											"end": 8841,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 8677,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8817,
											"end": 8833,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F20616374697665206C6F616E000000000000000000000000000000000000"
										},
										{
											"begin": 8813,
											"end": 8814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8805,
											"end": 8811,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8801,
											"end": 8815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8794,
											"end": 8834,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8677,
											"end": 8841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8677,
											"end": 8841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8847,
											"end": 9213,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 8847,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 8992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9010,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 9074,
											"end": 9076,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 9069,
											"end": 9072,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9010,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 9010,
											"end": 9077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9010,
											"end": 9077,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 9010,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9003,
											"end": 9077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9003,
											"end": 9077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9086,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 9175,
											"end": 9178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9086,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 9086,
											"end": 9179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9086,
											"end": 9179,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 9086,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9204,
											"end": 9206,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9199,
											"end": 9202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9195,
											"end": 9207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9188,
											"end": 9207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9188,
											"end": 9207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8847,
											"end": 9213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8847,
											"end": 9213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8847,
											"end": 9213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8847,
											"end": 9213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9219,
											"end": 9638,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9219,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9423,
											"end": 9425,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9412,
											"end": 9421,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9408,
											"end": 9426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9400,
											"end": 9426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9400,
											"end": 9426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9481,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9466,
											"end": 9470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9482,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9458,
											"end": 9459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9447,
											"end": 9456,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9443,
											"end": 9460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9483,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9500,
											"end": 9631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 9626,
											"end": 9630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9500,
											"end": 9631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 9500,
											"end": 9631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9500,
											"end": 9631,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 9500,
											"end": 9631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9492,
											"end": 9631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9492,
											"end": 9631,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9219,
											"end": 9638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9219,
											"end": 9638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9219,
											"end": 9638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9219,
											"end": 9638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9644,
											"end": 9868,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 9644,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9784,
											"end": 9818,
											"name": "PUSH",
											"source": 6,
											"value": "436F6C6C61746572616C697A6174696F6E20726174696F2061626F7665206D69"
										},
										{
											"begin": 9780,
											"end": 9781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9778,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 9782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9761,
											"end": 9819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9853,
											"end": 9860,
											"name": "PUSH",
											"source": 6,
											"value": "6E696D756D000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9848,
											"end": 9850,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9840,
											"end": 9846,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9851,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9829,
											"end": 9861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9644,
											"end": 9868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9644,
											"end": 9868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9874,
											"end": 10240,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 9874,
											"end": 10240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10016,
											"end": 10019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10037,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 10101,
											"end": 10103,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 10096,
											"end": 10099,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10037,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 10037,
											"end": 10104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10037,
											"end": 10104,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 10037,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10104,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 10202,
											"end": 10205,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 10113,
											"end": 10206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10206,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 10113,
											"end": 10206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10231,
											"end": 10233,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10226,
											"end": 10229,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10234,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10215,
											"end": 10234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10215,
											"end": 10234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9874,
											"end": 10240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9874,
											"end": 10240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9874,
											"end": 10240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9874,
											"end": 10240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10665,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 10246,
											"end": 10665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10412,
											"end": 10416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10450,
											"end": 10452,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10439,
											"end": 10448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10435,
											"end": 10453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10499,
											"end": 10508,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10489,
											"end": 10509,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10485,
											"end": 10486,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10474,
											"end": 10483,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10470,
											"end": 10487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10463,
											"end": 10510,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10527,
											"end": 10658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 10653,
											"end": 10657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10527,
											"end": 10658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 10527,
											"end": 10658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10527,
											"end": 10658,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 10527,
											"end": 10658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10519,
											"end": 10658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10519,
											"end": 10658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10665,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10671,
											"end": 10839,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 10671,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10811,
											"end": 10831,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 10807,
											"end": 10808,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10799,
											"end": 10805,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10795,
											"end": 10809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10788,
											"end": 10832,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10671,
											"end": 10839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10671,
											"end": 10839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10845,
											"end": 11211,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 10845,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10987,
											"end": 10990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11008,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 11072,
											"end": 11074,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 11008,
											"end": 11075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11075,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 11008,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11001,
											"end": 11075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11001,
											"end": 11075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11084,
											"end": 11177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 11173,
											"end": 11176,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11084,
											"end": 11177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 11084,
											"end": 11177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11084,
											"end": 11177,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 11084,
											"end": 11177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11202,
											"end": 11204,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11197,
											"end": 11200,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11193,
											"end": 11205,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11186,
											"end": 11205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11186,
											"end": 11205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10845,
											"end": 11211,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10845,
											"end": 11211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10845,
											"end": 11211,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10845,
											"end": 11211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11636,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 11217,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11383,
											"end": 11387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11421,
											"end": 11423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11410,
											"end": 11419,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11406,
											"end": 11424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11470,
											"end": 11479,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11464,
											"end": 11468,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11460,
											"end": 11480,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11456,
											"end": 11457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11445,
											"end": 11454,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11441,
											"end": 11458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11434,
											"end": 11481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11498,
											"end": 11629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 11624,
											"end": 11628,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11498,
											"end": 11629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 11498,
											"end": 11629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11498,
											"end": 11629,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 11498,
											"end": 11629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11490,
											"end": 11629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11490,
											"end": 11629,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11642,
											"end": 11974,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 11642,
											"end": 11974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11763,
											"end": 11767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11801,
											"end": 11803,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11790,
											"end": 11799,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11786,
											"end": 11804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11778,
											"end": 11804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11778,
											"end": 11804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11814,
											"end": 11885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 11882,
											"end": 11883,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11880,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11867,
											"end": 11884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11858,
											"end": 11864,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11814,
											"end": 11885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 11814,
											"end": 11885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11814,
											"end": 11885,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 11814,
											"end": 11885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11895,
											"end": 11967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 11963,
											"end": 11965,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11952,
											"end": 11961,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11948,
											"end": 11966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11939,
											"end": 11945,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11895,
											"end": 11967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 11895,
											"end": 11967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11895,
											"end": 11967,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 11895,
											"end": 11967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11642,
											"end": 11974,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11642,
											"end": 11974,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11642,
											"end": 11974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11642,
											"end": 11974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11642,
											"end": 11974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11642,
											"end": 11974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11980,
											"end": 12096,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 11980,
											"end": 12096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12050,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 12065,
											"end": 12070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12050,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 12050,
											"end": 12071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12050,
											"end": 12071,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 12050,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12043,
											"end": 12048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12040,
											"end": 12072,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12030,
											"end": 12090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 12030,
											"end": 12090,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12086,
											"end": 12087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12083,
											"end": 12084,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12076,
											"end": 12088,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12030,
											"end": 12090,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 12030,
											"end": 12090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11980,
											"end": 12096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11980,
											"end": 12096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12102,
											"end": 12239,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 12102,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12156,
											"end": 12161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12187,
											"end": 12193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12181,
											"end": 12194,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12172,
											"end": 12194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12172,
											"end": 12194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12203,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 12227,
											"end": 12232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12203,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 12203,
											"end": 12233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12203,
											"end": 12233,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 12203,
											"end": 12233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12102,
											"end": 12239,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12102,
											"end": 12239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12102,
											"end": 12239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12102,
											"end": 12239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12102,
											"end": 12239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12245,
											"end": 12590,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 12245,
											"end": 12590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12312,
											"end": 12318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12361,
											"end": 12363,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12349,
											"end": 12358,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12340,
											"end": 12347,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12336,
											"end": 12359,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12332,
											"end": 12364,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 12329,
											"end": 12448,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12329,
											"end": 12448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 12329,
											"end": 12448,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12367,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 12367,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 12367,
											"end": 12446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12367,
											"end": 12446,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 12367,
											"end": 12446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12329,
											"end": 12448,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 12329,
											"end": 12448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12487,
											"end": 12488,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12512,
											"end": 12573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 12565,
											"end": 12572,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12556,
											"end": 12562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12545,
											"end": 12554,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12541,
											"end": 12563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12512,
											"end": 12573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 12512,
											"end": 12573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12512,
											"end": 12573,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 12512,
											"end": 12573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12502,
											"end": 12573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12502,
											"end": 12573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12458,
											"end": 12583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12245,
											"end": 12590,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12245,
											"end": 12590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12245,
											"end": 12590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12245,
											"end": 12590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12245,
											"end": 12590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12697,
											"end": 12708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12734,
											"end": 12737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12719,
											"end": 12737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12719,
											"end": 12737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12596,
											"end": 12743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12749,
											"end": 12863,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 12749,
											"end": 12863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12749,
											"end": 12863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12749,
											"end": 12863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12869,
											"end": 13267,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 12869,
											"end": 13267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13028,
											"end": 13031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13049,
											"end": 13132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 13130,
											"end": 13131,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13125,
											"end": 13128,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13049,
											"end": 13132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 13049,
											"end": 13132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13049,
											"end": 13132,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 13049,
											"end": 13132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13042,
											"end": 13132,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13042,
											"end": 13132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13141,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 13230,
											"end": 13233,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13141,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 13141,
											"end": 13234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13141,
											"end": 13234,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 13141,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13259,
											"end": 13260,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13254,
											"end": 13257,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13250,
											"end": 13261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13243,
											"end": 13261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13243,
											"end": 13261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12869,
											"end": 13267,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12869,
											"end": 13267,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12869,
											"end": 13267,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12869,
											"end": 13267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13273,
											"end": 13652,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 13273,
											"end": 13652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13457,
											"end": 13460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13479,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 13622,
											"end": 13625,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13479,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 13479,
											"end": 13626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13479,
											"end": 13626,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 13479,
											"end": 13626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13472,
											"end": 13626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13472,
											"end": 13626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13643,
											"end": 13646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13636,
											"end": 13646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13636,
											"end": 13646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13273,
											"end": 13652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13273,
											"end": 13652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13273,
											"end": 13652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13273,
											"end": 13652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13658,
											"end": 13852,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 13658,
											"end": 13852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13698,
											"end": 13702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13718,
											"end": 13738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 13736,
											"end": 13737,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13718,
											"end": 13738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 13718,
											"end": 13738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13718,
											"end": 13738,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 13718,
											"end": 13738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13713,
											"end": 13738,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13713,
											"end": 13738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13752,
											"end": 13772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 13770,
											"end": 13771,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13752,
											"end": 13772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 13752,
											"end": 13772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13752,
											"end": 13772,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 13752,
											"end": 13772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13747,
											"end": 13772,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13747,
											"end": 13772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13796,
											"end": 13797,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13793,
											"end": 13794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13789,
											"end": 13798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13781,
											"end": 13798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13781,
											"end": 13798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13820,
											"end": 13821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13814,
											"end": 13818,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13811,
											"end": 13822,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 13808,
											"end": 13845,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13808,
											"end": 13845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 13808,
											"end": 13845,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13825,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 13825,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 13825,
											"end": 13843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13825,
											"end": 13843,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 13825,
											"end": 13843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13808,
											"end": 13845,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 13808,
											"end": 13845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13658,
											"end": 13852,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13658,
											"end": 13852,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13658,
											"end": 13852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13658,
											"end": 13852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13658,
											"end": 13852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13858,
											"end": 14049,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 13858,
											"end": 14049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13898,
											"end": 13901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13917,
											"end": 13937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 13935,
											"end": 13936,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13917,
											"end": 13937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 13917,
											"end": 13937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13917,
											"end": 13937,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 13917,
											"end": 13937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13912,
											"end": 13937,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13912,
											"end": 13937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13951,
											"end": 13971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 13969,
											"end": 13970,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13951,
											"end": 13971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 13951,
											"end": 13971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13951,
											"end": 13971,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 13951,
											"end": 13971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13946,
											"end": 13971,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13946,
											"end": 13971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13994,
											"end": 13995,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13991,
											"end": 13992,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13987,
											"end": 13996,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13980,
											"end": 13996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13980,
											"end": 13996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14015,
											"end": 14018,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14012,
											"end": 14013,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14009,
											"end": 14019,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 14006,
											"end": 14042,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14006,
											"end": 14042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 14006,
											"end": 14042,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14022,
											"end": 14040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 14022,
											"end": 14040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 14022,
											"end": 14040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14022,
											"end": 14040,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 14022,
											"end": 14040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14006,
											"end": 14042,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 14006,
											"end": 14042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13858,
											"end": 14049,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13858,
											"end": 14049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13858,
											"end": 14049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13858,
											"end": 14049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13858,
											"end": 14049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/SafeLoan.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"collateralToken()": "b2016bd4",
							"interestRate()": "7c3a00fd",
							"loans(address)": "73b4086b",
							"minCollateralizationRatio()": "ba1be554",
							"repayLoan()": "f966ade7",
							"requestLoan(uint256,uint256)": "aa452fa6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minCollateralizationRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"LoanGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repaidAmount\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"paid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minCollateralizationRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"repayLoan\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"}],\"name\":\"requestLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeLoan.sol\":\"SafeLoan\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SafeLoan.sol\":{\"keccak256\":\"0x05970269dc082cd0b0bc18d8bae3cd1f8900358ab7d41775c55f3fb08327c77a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a2c6c62271a27391383a86a67b943abc8284cbd037e5ec8ef511742489c0947\",\"dweb:/ipfs/QmchKRJBbnYi83eCwFwLpg4PiMgmmCL1bna2SrniNeR7NX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 802,
								"contract": "contracts/SafeLoan.sol:SafeLoan",
								"label": "collateralToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ERC20)651"
							},
							{
								"astId": 804,
								"contract": "contracts/SafeLoan.sol:SafeLoan",
								"label": "interestRate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 806,
								"contract": "contracts/SafeLoan.sol:SafeLoan",
								"label": "minCollateralizationRatio",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 811,
								"contract": "contracts/SafeLoan.sol:SafeLoan",
								"label": "loans",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(LoanInfo)799_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC20)651": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(LoanInfo)799_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SafeLoan.LoanInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(LoanInfo)799_storage"
							},
							"t_struct(LoanInfo)799_storage": {
								"encoding": "inplace",
								"label": "struct SafeLoan.LoanInfo",
								"members": [
									{
										"astId": 790,
										"contract": "contracts/SafeLoan.sol:SafeLoan",
										"label": "borrower",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 792,
										"contract": "contracts/SafeLoan.sol:SafeLoan",
										"label": "borrowedAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 794,
										"contract": "contracts/SafeLoan.sol:SafeLoan",
										"label": "collateralAmount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 796,
										"contract": "contracts/SafeLoan.sol:SafeLoan",
										"label": "requestedAt",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 798,
										"contract": "contracts/SafeLoan.sol:SafeLoan",
										"label": "paid",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/SafeLoan.sol": {
				"ast": {
					"absolutePath": "contracts/SafeLoan.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"SafeLoan": [
							1108
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1109,
							"sourceUnit": 652,
							"src": "59:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeLoan",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "SafeLoan",
							"nameLocation": "125:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "SafeLoan.LoanInfo",
									"id": 799,
									"members": [
										{
											"constant": false,
											"id": 790,
											"mutability": "mutable",
											"name": "borrower",
											"nameLocation": "174:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "166:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 789,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "166:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "borrowedAmount",
											"nameLocation": "200:14:5",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "192:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 791,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "192:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 794,
											"mutability": "mutable",
											"name": "collateralAmount",
											"nameLocation": "232:16:5",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "224:24:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 793,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "224:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 796,
											"mutability": "mutable",
											"name": "requestedAt",
											"nameLocation": "266:11:5",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "258:19:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 795,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "258:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 798,
											"mutability": "mutable",
											"name": "paid",
											"nameLocation": "292:4:5",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "287:9:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 797,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "287:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LoanInfo",
									"nameLocation": "147:8:5",
									"nodeType": "StructDefinition",
									"scope": 1108,
									"src": "140:163:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b2016bd4",
									"id": 802,
									"mutability": "mutable",
									"name": "collateralToken",
									"nameLocation": "322:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "309:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$651",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 801,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 800,
											"name": "ERC20",
											"nameLocations": [
												"309:5:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 651,
											"src": "309:5:5"
										},
										"referencedDeclaration": 651,
										"src": "309:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$651",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7c3a00fd",
									"id": 804,
									"mutability": "mutable",
									"name": "interestRate",
									"nameLocation": "358:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "343:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 803,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "343:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ba1be554",
									"id": 806,
									"mutability": "mutable",
									"name": "minCollateralizationRatio",
									"nameLocation": "391:25:5",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "376:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 805,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "376:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73b4086b",
									"id": 811,
									"mutability": "mutable",
									"name": "loans",
									"nameLocation": "459:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "422:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LoanInfo_$799_storage_$",
										"typeString": "mapping(address => struct SafeLoan.LoanInfo)"
									},
									"typeName": {
										"id": 810,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 807,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "431:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "422:29:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LoanInfo_$799_storage_$",
											"typeString": "mapping(address => struct SafeLoan.LoanInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 809,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 808,
												"name": "LoanInfo",
												"nameLocations": [
													"442:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "442:8:5"
											},
											"referencedDeclaration": 799,
											"src": "442:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
												"typeString": "struct SafeLoan.LoanInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1f4fa8bbaa124ef8d04466f13d5a2572fb712424cee0bc9cf430aec52439acd7",
									"id": 819,
									"name": "LoanGranted",
									"nameLocation": "477:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"indexed": true,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "515:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "498:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowedAmount",
												"nameLocation": "542:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "534:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateralAmount",
												"nameLocation": "575:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "567:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:113:5"
									},
									"src": "471:131:5"
								},
								{
									"anonymous": false,
									"eventSelector": "c7ce0a35f17b490de2a317e7fecb2cae86b1abffb03800b2f492823521382698",
									"id": 827,
									"name": "LoanRepaid",
									"nameLocation": "613:10:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"indexed": true,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "650:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "633:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowedAmount",
												"nameLocation": "676:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "668:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"indexed": false,
												"mutability": "mutable",
												"name": "repaidAmount",
												"nameLocation": "708:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "700:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:107:5"
									},
									"src": "607:124:5"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "867:154:5",
										"statements": [
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 837,
														"name": "collateralToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "878:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 838,
														"name": "_collateralToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "896:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"src": "878:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "878:34:5"
											},
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 841,
														"name": "interestRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "922:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 842,
														"name": "_interestRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "937:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "922:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "922:28:5"
											},
											{
												"expression": {
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 845,
														"name": "minCollateralizationRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "960:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 846,
														"name": "_minCollateralizationRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "988:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "960:54:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "960:54:5"
											}
										]
									},
									"id": 850,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "_collateralToken",
												"nameLocation": "769:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "763:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$651",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 829,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 828,
														"name": "ERC20",
														"nameLocations": [
															"763:5:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 651,
														"src": "763:5:5"
													},
													"referencedDeclaration": 651,
													"src": "763:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "_interestRate",
												"nameLocation": "803:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "795:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "_minCollateralizationRatio",
												"nameLocation": "834:26:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "826:34:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "753:113:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "867:0:5"
									},
									"scope": 1108,
									"src": "742:279:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "1107:875:5",
										"statements": [
											{
												"assignments": [
													859
												],
												"declarations": [
													{
														"constant": false,
														"id": 859,
														"mutability": "mutable",
														"name": "initial",
														"nameLocation": "1135:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "1118:24:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
															"typeString": "struct SafeLoan.LoanInfo"
														},
														"typeName": {
															"id": 858,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 857,
																"name": "LoanInfo",
																"nameLocations": [
																	"1118:8:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "1118:8:5"
															},
															"referencedDeclaration": 799,
															"src": "1118:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 864,
												"initialValue": {
													"baseExpression": {
														"id": 860,
														"name": "loans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "1145:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LoanInfo_$799_storage_$",
															"typeString": "mapping(address => struct SafeLoan.LoanInfo storage ref)"
														}
													},
													"id": 863,
													"indexExpression": {
														"expression": {
															"id": 861,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1151:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1155:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1151:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1145:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LoanInfo_$799_storage",
														"typeString": "struct SafeLoan.LoanInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1118:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 866,
																		"name": "initial",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "1180:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																			"typeString": "struct SafeLoan.LoanInfo storage pointer"
																		}
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1188:16:5",
																	"memberName": "collateralAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "1180:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1208:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1180:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 870,
																					"name": "initial",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 859,
																					"src": "1214:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																						"typeString": "struct SafeLoan.LoanInfo storage pointer"
																					}
																				},
																				"id": 871,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1222:16:5",
																				"memberName": "collateralAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 794,
																				"src": "1214:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1241:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1214:28:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 874,
																					"name": "initial",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 859,
																					"src": "1246:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																						"typeString": "struct SafeLoan.LoanInfo storage pointer"
																					}
																				},
																				"id": 875,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1254:4:5",
																				"memberName": "paid",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 798,
																				"src": "1246:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "74727565",
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1262:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "1246:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1214:52:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 879,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1213:54:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1180:87:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206861766520616e206f70656e206c6f616e2021",
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1269:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606",
																"typeString": "literal_string \"You have an open loan !\""
															},
															"value": "You have an open loan !"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47abcac404b97e6d9bf31de2025331ae0abab405b5000059ccf8ccf415aea606",
																"typeString": "literal_string \"You have an open loan !\""
															}
														],
														"id": 865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1172:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1172:123:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "1172:123:5"
											},
											{
												"assignments": [
													885
												],
												"declarations": [
													{
														"constant": false,
														"id": 885,
														"mutability": "mutable",
														"name": "extraAmountToLiquidate",
														"nameLocation": "1313:22:5",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "1305:30:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 884,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1305:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 892,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 886,
																	"name": "_borrowedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "1339:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 887,
																	"name": "minCollateralizationRatio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "1357:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1339:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 889,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1338:45:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1386:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1338:51:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1305:84:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 894,
																"name": "_collateralAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "1407:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 895,
																"name": "extraAmountToLiquidate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "1428:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1407:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420436f6c6c61746572616c",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1452:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5",
																"typeString": "literal_string \"Insufficient Collateral\""
															},
															"value": "Insufficient Collateral"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3d93446a1b883ae5e6ccafab42fbc315650aa52ef1e47f64092df039f1e3ca5",
																"typeString": "literal_string \"Insufficient Collateral\""
															}
														],
														"id": 893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1399:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:79:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "1399:79:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 904,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1517:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeLoan_$1108",
																				"typeString": "contract SafeLoan"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeLoan_$1108",
																				"typeString": "contract SafeLoan"
																			}
																		],
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1509:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 902,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1509:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1509:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 906,
																	"name": "_collateralAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "1524:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 901,
																"name": "_sentEtherTo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "1496:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) returns (bool)"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1496:46:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1544:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1488:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:74:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "1488:74:5"
											},
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "newLoan",
														"nameLocation": "1588:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "1572:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LoanInfo_$799_memory_ptr",
															"typeString": "struct SafeLoan.LoanInfo"
														},
														"typeName": {
															"id": 912,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 911,
																"name": "LoanInfo",
																"nameLocations": [
																	"1572:8:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "1572:8:5"
															},
															"referencedDeclaration": 799,
															"src": "1572:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 915,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1631:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1635:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1631:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "_borrowedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "1671:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 918,
															"name": "_collateralAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "1718:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 919,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1762:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1768:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1762:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1797:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 914,
														"name": "LoanInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "1598:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_LoanInfo_$799_storage_ptr_$",
															"typeString": "type(struct SafeLoan.LoanInfo storage pointer)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1621:8:5",
														"1655:14:5",
														"1700:16:5",
														"1749:11:5",
														"1791:4:5"
													],
													"names": [
														"borrower",
														"borrowedAmount",
														"collateralAmount",
														"requestedAt",
														"paid"
													],
													"nodeType": "FunctionCall",
													"src": "1598:215:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LoanInfo_$799_memory_ptr",
														"typeString": "struct SafeLoan.LoanInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1572:241:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 925,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1836:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1840:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1836:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "_borrowedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "1848:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 924,
														"name": "_sentEtherTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "1823:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1823:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "1823:41:5"
											},
											{
												"expression": {
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 930,
															"name": "loans",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "1874:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LoanInfo_$799_storage_$",
																"typeString": "mapping(address => struct SafeLoan.LoanInfo storage ref)"
															}
														},
														"id": 933,
														"indexExpression": {
															"expression": {
																"id": 931,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1880:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1884:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1880:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1874:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LoanInfo_$799_storage",
															"typeString": "struct SafeLoan.LoanInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 934,
														"name": "newLoan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "1894:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LoanInfo_$799_memory_ptr",
															"typeString": "struct SafeLoan.LoanInfo memory"
														}
													},
													"src": "1874:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LoanInfo_$799_storage",
														"typeString": "struct SafeLoan.LoanInfo storage ref"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "1874:27:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 938,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1928:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1932:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1928:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "_borrowedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "1940:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 941,
															"name": "_collateralAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "1957:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 937,
														"name": "LoanGranted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "1916:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1916:59:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "EmitStatement",
												"src": "1911:64:5"
											}
										]
									},
									"functionSelector": "aa452fa6",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestLoan",
									"nameLocation": "1036:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "_borrowedAmount",
												"nameLocation": "1056:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1048:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "_collateralAmount",
												"nameLocation": "1081:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1073:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:52:5"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:0:5"
									},
									"scope": 1108,
									"src": "1027:955:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "2024:644:5",
										"statements": [
											{
												"assignments": [
													950
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"mutability": "mutable",
														"name": "loanInfo",
														"nameLocation": "2051:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1015,
														"src": "2034:25:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
															"typeString": "struct SafeLoan.LoanInfo"
														},
														"typeName": {
															"id": 949,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 948,
																"name": "LoanInfo",
																"nameLocations": [
																	"2034:8:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "2034:8:5"
															},
															"referencedDeclaration": 799,
															"src": "2034:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 955,
												"initialValue": {
													"baseExpression": {
														"id": 951,
														"name": "loans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "2062:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LoanInfo_$799_storage_$",
															"typeString": "mapping(address => struct SafeLoan.LoanInfo storage ref)"
														}
													},
													"id": 954,
													"indexExpression": {
														"expression": {
															"id": 952,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2068:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2072:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2068:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2062:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LoanInfo_$799_storage",
														"typeString": "struct SafeLoan.LoanInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2034:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 957,
																	"name": "loanInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "2097:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																		"typeString": "struct SafeLoan.LoanInfo storage pointer"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2106:14:5",
																"memberName": "borrowedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 792,
																"src": "2097:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2123:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2097:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665206c6f616e",
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2126:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba",
																"typeString": "literal_string \"No active loan\""
															},
															"value": "No active loan"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba",
																"typeString": "literal_string \"No active loan\""
															}
														],
														"id": 956,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2089:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2089:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "2089:54:5"
											},
											{
												"assignments": [
													965
												],
												"declarations": [
													{
														"constant": false,
														"id": 965,
														"mutability": "mutable",
														"name": "collateralizationRatio",
														"nameLocation": "2161:22:5",
														"nodeType": "VariableDeclaration",
														"scope": 1015,
														"src": "2153:30:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 964,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2153:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 969,
												"initialValue": {
													"arguments": [
														{
															"id": 967,
															"name": "loanInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "2219:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo storage pointer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo storage pointer"
															}
														],
														"id": 966,
														"name": "_calculateCollateralizationRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "2186:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_LoanInfo_$799_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct SafeLoan.LoanInfo storage pointer) view returns (uint256)"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2153:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 971,
																"name": "collateralizationRatio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "2246:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 972,
																"name": "minCollateralizationRatio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "2271:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2246:50:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6c6c61746572616c697a6174696f6e20726174696f2061626f7665206d696e696d756d",
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2298:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d",
																"typeString": "literal_string \"Collateralization ratio above minimum\""
															},
															"value": "Collateralization ratio above minimum"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63f58375eff7048fa0d4504f9f153201293674e3505e30ec8096562dccf6ce0d",
																"typeString": "literal_string \"Collateralization ratio above minimum\""
															}
														],
														"id": 970,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2238:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2238:100:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "2238:100:5"
											},
											{
												"assignments": [
													978
												],
												"declarations": [
													{
														"constant": false,
														"id": 978,
														"mutability": "mutable",
														"name": "outstandingAmount",
														"nameLocation": "2356:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 1015,
														"src": "2348:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 977,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2348:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 982,
												"initialValue": {
													"arguments": [
														{
															"id": 980,
															"name": "loanInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "2404:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo storage pointer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo storage pointer"
															}
														],
														"id": 979,
														"name": "_calculateOutstandingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "2376:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_LoanInfo_$799_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct SafeLoan.LoanInfo storage pointer) view returns (uint256)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2376:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2348:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 984,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2431:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2435:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2431:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 986,
																"name": "outstandingAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "2444:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2431:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2463:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2423:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2423:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "2423:61:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 994,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2519:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2523:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2519:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 996,
																"name": "loanInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "2531:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																	"typeString": "struct SafeLoan.LoanInfo storage pointer"
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2540:16:5",
															"memberName": "collateralAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 794,
															"src": "2531:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 991,
															"name": "collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "2494:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2510:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "2494:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2494:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "2494:63:5"
											},
											{
												"expression": {
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1000,
															"name": "loanInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "2567:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo storage pointer"
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2576:4:5",
														"memberName": "paid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 798,
														"src": "2567:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2583:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2567:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "2567:20:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1007,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2613:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2617:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2613:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1009,
																"name": "loanInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "2626:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																	"typeString": "struct SafeLoan.LoanInfo storage pointer"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2635:14:5",
															"memberName": "borrowedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 792,
															"src": "2626:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1011,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2651:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2655:5:5",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2651:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1006,
														"name": "LoanRepaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "2602:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2602:59:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "EmitStatement",
												"src": "2597:64:5"
											}
										]
									},
									"functionSelector": "f966ade7",
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "repayLoan",
									"nameLocation": "1997:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2006:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2024:0:5"
									},
									"scope": 1108,
									"src": "1988:680:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "2756:95:5",
										"statements": [
											{
												"assignments": [
													1026,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1026,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "2770:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1039,
														"src": "2765:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1025,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2765:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1036,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2821:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1029,
																		"name": "_receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "2789:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2781:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1027,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2781:8:5",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2781:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2800:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2781:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1032,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "2812:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2781:39:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2781:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2764:60:5"
											},
											{
												"expression": {
													"id": 1037,
													"name": "sent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1026,
													"src": "2840:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1024,
												"id": 1038,
												"nodeType": "Return",
												"src": "2832:12:5"
											}
										]
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sentEtherTo",
									"nameLocation": "2683:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "2704:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2696:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2723:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2715:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2695:36:5"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2749:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1022,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2749:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2748:6:5"
									},
									"scope": 1108,
									"src": "2674:177:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "2979:238:5",
										"statements": [
											{
												"assignments": [
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "outstandingAmount",
														"nameLocation": "3001:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "2993:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1048,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2993:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": {
													"arguments": [
														{
															"id": 1051,
															"name": "loanInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "3049:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo storage pointer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo storage pointer"
															}
														],
														"id": 1050,
														"name": "_calculateOutstandingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "3021:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_LoanInfo_$799_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct SafeLoan.LoanInfo storage pointer) view returns (uint256)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3021:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2993:65:5"
											},
											{
												"assignments": [
													1055
												],
												"declarations": [
													{
														"constant": false,
														"id": 1055,
														"mutability": "mutable",
														"name": "diff",
														"nameLocation": "3080:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "3072:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1054,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3072:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1060,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "outstandingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "3087:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1057,
															"name": "loanInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "3107:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo storage pointer"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:14:5",
														"memberName": "borrowedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 792,
														"src": "3107:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3087:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3072:58:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1061,
																	"name": "diff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "3153:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3160:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3153:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1064,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3152:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"expression": {
															"id": 1065,
															"name": "loanInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "3183:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo storage pointer"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3192:14:5",
														"memberName": "borrowedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 792,
														"src": "3183:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3152:54:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1047,
												"id": 1068,
												"nodeType": "Return",
												"src": "3145:61:5"
											}
										]
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateCollateralizationRatio",
									"nameLocation": "2866:32:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "loanInfo",
												"nameLocation": "2929:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "2912:25:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
													"typeString": "struct SafeLoan.LoanInfo"
												},
												"typeName": {
													"id": 1042,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1041,
														"name": "LoanInfo",
														"nameLocations": [
															"2912:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 799,
														"src": "2912:8:5"
													},
													"referencedDeclaration": 799,
													"src": "2912:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
														"typeString": "struct SafeLoan.LoanInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2898:49:5"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "2970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2969:9:5"
									},
									"scope": 1108,
									"src": "2857:360:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "3348:276:5",
										"statements": [
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "3374:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "3366:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3366:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1085,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1080,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3388:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3394:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3388:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1082,
															"name": "loadInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "3406:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo storage pointer"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3415:11:5",
														"memberName": "requestedAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 796,
														"src": "3406:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3388:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3366:60:5"
											},
											{
												"assignments": [
													1087
												],
												"declarations": [
													{
														"constant": false,
														"id": 1087,
														"mutability": "mutable",
														"name": "interestAccrued",
														"nameLocation": "3452:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "3444:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1086,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3444:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1100,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1088,
																			"name": "loadInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "3471:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																				"typeString": "struct SafeLoan.LoanInfo storage pointer"
																			}
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3480:14:5",
																		"memberName": "borrowedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 792,
																		"src": "3471:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1090,
																		"name": "interestRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "3497:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3471:38:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1092,
																	"name": "timeElapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "3512:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3471:52:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1094,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3470:54:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_3153600000_by_1",
																	"typeString": "int_const 3153600000"
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313030",
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3528:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "333635",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3534:8:5",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "365"
																},
																"src": "3528:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3153600000_by_1",
																	"typeString": "int_const 3153600000"
																}
															}
														],
														"id": 1098,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3527:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3153600000_by_1",
															"typeString": "int_const 3153600000"
														}
													},
													"src": "3470:73:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3444:99:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1101,
															"name": "loadInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "3568:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
																"typeString": "struct SafeLoan.LoanInfo storage pointer"
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3577:14:5",
														"memberName": "borrowedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 792,
														"src": "3568:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1103,
														"name": "interestAccrued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "3594:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3568:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1077,
												"id": 1105,
												"nodeType": "Return",
												"src": "3561:48:5"
											}
										]
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateOutstandingAmount",
									"nameLocation": "3236:27:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "loadInfo",
												"nameLocation": "3294:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "3277:25:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
													"typeString": "struct SafeLoan.LoanInfo"
												},
												"typeName": {
													"id": 1072,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1071,
														"name": "LoanInfo",
														"nameLocations": [
															"3277:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 799,
														"src": "3277:8:5"
													},
													"referencedDeclaration": 799,
													"src": "3277:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LoanInfo_$799_storage_ptr",
														"typeString": "struct SafeLoan.LoanInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3263:53:5"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "3339:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3339:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3338:9:5"
									},
									"scope": 1108,
									"src": "3227:397:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1109,
							"src": "116:3512:5",
							"usedErrors": [],
							"usedEvents": [
								819,
								827
							]
						}
					],
					"src": "32:3596:5"
				},
				"id": 5
			}
		}
	}
}